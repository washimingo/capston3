{
  "version": 3,
  "sources": ["../../../../../../node_modules/@ionic/core/dist/esm/ion-button_2.entry.js"],
  "sourcesContent": ["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, c as createEvent, i as forceUpdate, f as printIonWarning, h, d as Host, g as getElement, k as getAssetPath } from './index-4DxY6_gG.js';\nimport { k as hasShadowDom, i as inheritAriaAttributes } from './helpers-8KSQQGQy.js';\nimport { o as openURL, c as createColorClasses$1, h as hostContext } from './theme-DiVJyqlX.js';\nimport { b as getIonMode$1 } from './ionic-global-CTSyufhF.js';\n\nconst buttonIosCss = \":host{--overflow:hidden;--ripple-color:currentColor;--border-width:initial;--border-color:initial;--border-style:initial;--color-activated:var(--color);--color-focused:var(--color);--color-hover:var(--color);--box-shadow:none;display:inline-block;width:auto;color:var(--color);font-family:var(--ion-font-family, inherit);text-align:center;text-decoration:none;white-space:normal;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;vertical-align:top;vertical-align:-webkit-baseline-middle;-webkit-font-kerning:none;font-kerning:none}:host(.button-disabled){cursor:default;opacity:0.5;pointer-events:none}:host(.button-solid){--background:var(--ion-color-primary, #0054e9);--color:var(--ion-color-primary-contrast, #fff)}:host(.button-outline){--border-color:var(--ion-color-primary, #0054e9);--background:transparent;--color:var(--ion-color-primary, #0054e9)}:host(.button-clear){--border-width:0;--background:transparent;--color:var(--ion-color-primary, #0054e9)}:host(.button-block){display:block}:host(.button-block) .button-native{margin-left:0;margin-right:0;width:100%;clear:both;contain:content}:host(.button-block) .button-native::after{clear:both}:host(.button-full){display:block}:host(.button-full) .button-native{margin-left:0;margin-right:0;width:100%;contain:content}:host(.button-full:not(.button-round)) .button-native{border-radius:0;border-right-width:0;border-left-width:0}.button-native{border-radius:var(--border-radius);-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;width:100%;height:100%;min-height:inherit;-webkit-transition:var(--transition);transition:var(--transition);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);outline:none;background:var(--background);line-height:1;-webkit-box-shadow:var(--box-shadow);box-shadow:var(--box-shadow);contain:layout style;cursor:pointer;opacity:var(--opacity);overflow:var(--overflow);z-index:0;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-appearance:none;-moz-appearance:none;appearance:none}.button-native::-moz-focus-inner{border:0}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;z-index:1}::slotted([slot=start]),::slotted([slot=end]){-ms-flex-negative:0;flex-shrink:0}::slotted(ion-icon){font-size:1.35em;pointer-events:none}::slotted(ion-icon[slot=start]){-webkit-margin-start:-0.3em;margin-inline-start:-0.3em;-webkit-margin-end:0.3em;margin-inline-end:0.3em;margin-top:0;margin-bottom:0}::slotted(ion-icon[slot=end]){-webkit-margin-start:0.3em;margin-inline-start:0.3em;-webkit-margin-end:-0.2em;margin-inline-end:-0.2em;margin-top:0;margin-bottom:0}ion-ripple-effect{color:var(--ripple-color)}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}:host(.ion-focused){color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}@media (any-hover: hover){:host(:hover){color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity)}}:host(.ion-activated){color:var(--color-activated)}:host(.ion-activated) .button-native::after{background:var(--background-activated);opacity:var(--background-activated-opacity)}:host(.button-solid.ion-color) .button-native{background:var(--ion-color-base);color:var(--ion-color-contrast)}:host(.button-outline.ion-color) .button-native{border-color:var(--ion-color-base);background:transparent;color:var(--ion-color-base)}:host(.button-clear.ion-color) .button-native{background:transparent;color:var(--ion-color-base)}:host(.in-toolbar:not(.ion-color):not(.in-toolbar-color)) .button-native{color:var(--ion-toolbar-color, var(--color))}:host(.button-outline.in-toolbar:not(.ion-color):not(.in-toolbar-color)) .button-native{border-color:var(--ion-toolbar-color, var(--color, var(--border-color)))}:host(.button-solid.in-toolbar:not(.ion-color):not(.in-toolbar-color)) .button-native{background:var(--ion-toolbar-color, var(--background));color:var(--ion-toolbar-background, var(--color))}:host{--border-radius:14px;--padding-top:13px;--padding-bottom:13px;--padding-start:1em;--padding-end:1em;--transition:background-color, opacity 100ms linear;-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:2px;margin-inline-end:2px;margin-top:4px;margin-bottom:4px;min-height:3.1em;font-size:min(1rem, 48px);font-weight:500;letter-spacing:0}:host(.button-solid){--background-activated:var(--ion-color-primary-shade, #004acd);--background-focused:var(--ion-color-primary-shade, #004acd);--background-hover:var(--ion-color-primary-tint, #1a65eb);--background-activated-opacity:1;--background-focused-opacity:1;--background-hover-opacity:1}:host(.button-outline){--border-radius:14px;--border-width:1px;--border-style:solid;--background-activated:var(--ion-color-primary, #0054e9);--background-focused:var(--ion-color-primary, #0054e9);--background-hover:transparent;--background-focused-opacity:.1;--color-activated:var(--ion-color-primary-contrast, #fff)}:host(.button-clear){--background-activated:transparent;--background-activated-opacity:0;--background-focused:var(--ion-color-primary, #0054e9);--background-hover:transparent;--background-focused-opacity:.1;font-size:min(1.0625rem, 51px);font-weight:normal}:host(.in-buttons){font-size:clamp(17px, 1.0625rem, 21.08px);font-weight:400}:host(.button-large){--border-radius:16px;--padding-top:17px;--padding-start:1em;--padding-end:1em;--padding-bottom:17px;min-height:3.1em;font-size:min(1.25rem, 60px)}:host(.button-small){--border-radius:6px;--padding-top:4px;--padding-start:0.9em;--padding-end:0.9em;--padding-bottom:4px;min-height:2.1em;font-size:min(0.8125rem, 39px)}:host(.button-round){--border-radius:999px;--padding-top:0;--padding-start:26px;--padding-end:26px;--padding-bottom:0}:host(.button-strong){font-weight:600}:host(.button-has-icon-only){--padding-top:0;--padding-bottom:var(--padding-top);--padding-end:var(--padding-top);--padding-start:var(--padding-end);min-width:clamp(30px, 2.125em, 60px);min-height:clamp(30px, 2.125em, 60px)}::slotted(ion-icon[slot=icon-only]){font-size:clamp(15.12px, 1.125em, 43.02px)}:host(.button-small.button-has-icon-only){min-width:clamp(23px, 2.16em, 54px);min-height:clamp(23px, 2.16em, 54px)}:host(.button-small) ::slotted(ion-icon[slot=icon-only]){font-size:clamp(12.1394px, 1.308125em, 40.1856px)}:host(.button-large.button-has-icon-only){min-width:clamp(46px, 2.5em, 78px);min-height:clamp(46px, 2.5em, 78px)}:host(.button-large) ::slotted(ion-icon[slot=icon-only]){font-size:clamp(15.12px, 0.9em, 43.056px)}:host(.button-outline.ion-focused.ion-color) .button-native,:host(.button-clear.ion-focused.ion-color) .button-native{color:var(--ion-color-base)}:host(.button-outline.ion-focused.ion-color) .button-native::after,:host(.button-clear.ion-focused.ion-color) .button-native::after{background:var(--ion-color-base)}:host(.button-solid.ion-color.ion-focused) .button-native::after{background:var(--ion-color-shade)}@media (any-hover: hover){:host(.button-clear:not(.ion-activated):hover),:host(.button-outline:not(.ion-activated):hover){opacity:0.6}:host(.button-clear.ion-color:hover) .button-native,:host(.button-outline.ion-color:hover) .button-native{color:var(--ion-color-base)}:host(.button-clear.ion-color:hover) .button-native::after,:host(.button-outline.ion-color:hover) .button-native::after{background:transparent}:host(.button-solid.ion-color:hover) .button-native::after{background:var(--ion-color-tint)}:host(:hover.button-solid.in-toolbar:not(.ion-color):not(.in-toolbar-color):not(.ion-activated)) .button-native::after{background:#fff;opacity:0.1}}:host(.button-clear.ion-activated){opacity:0.4}:host(.button-outline.ion-activated.ion-color) .button-native{color:var(--ion-color-contrast)}:host(.button-outline.ion-activated.ion-color) .button-native::after{background:var(--ion-color-base)}:host(.button-solid.ion-color.ion-activated) .button-native::after{background:var(--ion-color-shade)}:host(.button-outline.ion-activated.in-toolbar:not(.ion-color):not(.in-toolbar-color)) .button-native{background:var(--ion-toolbar-color, var(--color));color:var(--ion-toolbar-background, var(--background), var(--ion-color-primary-contrast, #fff))}\";\n\nconst buttonMdCss = \":host{--overflow:hidden;--ripple-color:currentColor;--border-width:initial;--border-color:initial;--border-style:initial;--color-activated:var(--color);--color-focused:var(--color);--color-hover:var(--color);--box-shadow:none;display:inline-block;width:auto;color:var(--color);font-family:var(--ion-font-family, inherit);text-align:center;text-decoration:none;white-space:normal;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;vertical-align:top;vertical-align:-webkit-baseline-middle;-webkit-font-kerning:none;font-kerning:none}:host(.button-disabled){cursor:default;opacity:0.5;pointer-events:none}:host(.button-solid){--background:var(--ion-color-primary, #0054e9);--color:var(--ion-color-primary-contrast, #fff)}:host(.button-outline){--border-color:var(--ion-color-primary, #0054e9);--background:transparent;--color:var(--ion-color-primary, #0054e9)}:host(.button-clear){--border-width:0;--background:transparent;--color:var(--ion-color-primary, #0054e9)}:host(.button-block){display:block}:host(.button-block) .button-native{margin-left:0;margin-right:0;width:100%;clear:both;contain:content}:host(.button-block) .button-native::after{clear:both}:host(.button-full){display:block}:host(.button-full) .button-native{margin-left:0;margin-right:0;width:100%;contain:content}:host(.button-full:not(.button-round)) .button-native{border-radius:0;border-right-width:0;border-left-width:0}.button-native{border-radius:var(--border-radius);-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;width:100%;height:100%;min-height:inherit;-webkit-transition:var(--transition);transition:var(--transition);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);outline:none;background:var(--background);line-height:1;-webkit-box-shadow:var(--box-shadow);box-shadow:var(--box-shadow);contain:layout style;cursor:pointer;opacity:var(--opacity);overflow:var(--overflow);z-index:0;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-appearance:none;-moz-appearance:none;appearance:none}.button-native::-moz-focus-inner{border:0}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;z-index:1}::slotted([slot=start]),::slotted([slot=end]){-ms-flex-negative:0;flex-shrink:0}::slotted(ion-icon){font-size:1.35em;pointer-events:none}::slotted(ion-icon[slot=start]){-webkit-margin-start:-0.3em;margin-inline-start:-0.3em;-webkit-margin-end:0.3em;margin-inline-end:0.3em;margin-top:0;margin-bottom:0}::slotted(ion-icon[slot=end]){-webkit-margin-start:0.3em;margin-inline-start:0.3em;-webkit-margin-end:-0.2em;margin-inline-end:-0.2em;margin-top:0;margin-bottom:0}ion-ripple-effect{color:var(--ripple-color)}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}:host(.ion-focused){color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}@media (any-hover: hover){:host(:hover){color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity)}}:host(.ion-activated){color:var(--color-activated)}:host(.ion-activated) .button-native::after{background:var(--background-activated);opacity:var(--background-activated-opacity)}:host(.button-solid.ion-color) .button-native{background:var(--ion-color-base);color:var(--ion-color-contrast)}:host(.button-outline.ion-color) .button-native{border-color:var(--ion-color-base);background:transparent;color:var(--ion-color-base)}:host(.button-clear.ion-color) .button-native{background:transparent;color:var(--ion-color-base)}:host(.in-toolbar:not(.ion-color):not(.in-toolbar-color)) .button-native{color:var(--ion-toolbar-color, var(--color))}:host(.button-outline.in-toolbar:not(.ion-color):not(.in-toolbar-color)) .button-native{border-color:var(--ion-toolbar-color, var(--color, var(--border-color)))}:host(.button-solid.in-toolbar:not(.ion-color):not(.in-toolbar-color)) .button-native{background:var(--ion-toolbar-color, var(--background));color:var(--ion-toolbar-background, var(--color))}:host{--border-radius:4px;--padding-top:8px;--padding-bottom:8px;--padding-start:1.1em;--padding-end:1.1em;--transition:box-shadow 280ms cubic-bezier(.4, 0, .2, 1),\\n                background-color 15ms linear,\\n                color 15ms linear;-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:2px;margin-inline-end:2px;margin-top:4px;margin-bottom:4px;min-height:36px;font-size:0.875rem;font-weight:500;letter-spacing:0.06em;text-transform:uppercase}:host(.button-solid){--background-activated:transparent;--background-hover:var(--ion-color-primary-contrast, #fff);--background-focused:var(--ion-color-primary-contrast, #fff);--background-activated-opacity:0;--background-focused-opacity:.24;--background-hover-opacity:.08;--box-shadow:0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12)}:host(.button-solid.ion-activated){--box-shadow:0 5px 5px -3px rgba(0, 0, 0, 0.2), 0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12)}:host(.button-outline){--border-width:2px;--border-style:solid;--box-shadow:none;--background-activated:transparent;--background-focused:var(--ion-color-primary, #0054e9);--background-hover:var(--ion-color-primary, #0054e9);--background-activated-opacity:0;--background-focused-opacity:.12;--background-hover-opacity:.04}:host(.button-outline.ion-activated.ion-color) .button-native{background:transparent}:host(.button-clear){--background-activated:transparent;--background-focused:var(--ion-color-primary, #0054e9);--background-hover:var(--ion-color-primary, #0054e9);--background-activated-opacity:0;--background-focused-opacity:.12;--background-hover-opacity:.04}:host(.button-round){--border-radius:999px;--padding-top:0;--padding-start:26px;--padding-end:26px;--padding-bottom:0}:host(.button-large){--padding-top:14px;--padding-start:1em;--padding-end:1em;--padding-bottom:14px;min-height:2.8em;font-size:1.25rem}:host(.button-small){--padding-top:4px;--padding-start:0.9em;--padding-end:0.9em;--padding-bottom:4px;min-height:2.1em;font-size:0.8125rem}:host(.button-strong){font-weight:bold}:host(.button-has-icon-only){--padding-top:0;--padding-bottom:var(--padding-top);--padding-end:var(--padding-top);--padding-start:var(--padding-end);min-width:clamp(30px, 2.86em, 60px);min-height:clamp(30px, 2.86em, 60px)}::slotted(ion-icon[slot=icon-only]){font-size:clamp(15.104px, 1.6em, 43.008px)}:host(.button-small.button-has-icon-only){min-width:clamp(23px, 2.16em, 54px);min-height:clamp(23px, 2.16em, 54px)}:host(.button-small) ::slotted(ion-icon[slot=icon-only]){font-size:clamp(13.002px, 1.23125em, 40.385px)}:host(.button-large.button-has-icon-only){min-width:clamp(46px, 2.5em, 78px);min-height:clamp(46px, 2.5em, 78px)}:host(.button-large) ::slotted(ion-icon[slot=icon-only]){font-size:clamp(15.008px, 1.4em, 43.008px)}:host(.button-solid.ion-color.ion-focused) .button-native::after{background:var(--ion-color-contrast)}:host(.button-clear.ion-color.ion-focused) .button-native::after,:host(.button-outline.ion-color.ion-focused) .button-native::after{background:var(--ion-color-base)}@media (any-hover: hover){:host(.button-solid.ion-color:hover) .button-native::after{background:var(--ion-color-contrast)}:host(.button-clear.ion-color:hover) .button-native::after,:host(.button-outline.ion-color:hover) .button-native::after{background:var(--ion-color-base)}}:host(.button-outline.ion-activated.in-toolbar:not(.ion-color):not(.in-toolbar-color)) .button-native{background:var(--ion-toolbar-background, var(--color));color:var(--ion-toolbar-color, var(--background), var(--ion-color-primary-contrast, #fff))}\";\n\nconst Button = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\n        this.inItem = false;\n        this.inListHeader = false;\n        this.inToolbar = false;\n        this.formButtonEl = null;\n        this.formEl = null;\n        this.inheritedAttributes = {};\n        /**\n         * If `true`, the button only has an icon.\n         */\n        this.isCircle = false;\n        /**\n         * The type of button.\n         */\n        this.buttonType = 'button';\n        /**\n         * If `true`, the user cannot interact with the button.\n         */\n        this.disabled = false;\n        /**\n         * When using a router, it specifies the transition direction when navigating to\n         * another page using `href`.\n         */\n        this.routerDirection = 'forward';\n        /**\n         * If `true`, activates a button with a heavier font weight.\n         */\n        this.strong = false;\n        /**\n         * The type of the button.\n         */\n        this.type = 'button';\n        this.handleClick = (ev) => {\n            const { el } = this;\n            if (this.type === 'button') {\n                openURL(this.href, ev, this.routerDirection, this.routerAnimation);\n            }\n            else if (hasShadowDom(el)) {\n                this.submitForm(ev);\n            }\n        };\n        this.onFocus = () => {\n            this.ionFocus.emit();\n        };\n        this.onBlur = () => {\n            this.ionBlur.emit();\n        };\n        this.slotChanged = () => {\n            /**\n             * Ensures that the 'has-icon-only' class is properly added\n             * or removed from `ion-button` when manipulating the\n             * `icon-only` slot.\n             *\n             * Without this, the 'has-icon-only' class is only checked\n             * or added when `ion-button` component first renders.\n             */\n            this.isCircle = this.hasIconOnly;\n        };\n    }\n    disabledChanged() {\n        const { disabled } = this;\n        if (this.formButtonEl) {\n            this.formButtonEl.disabled = disabled;\n        }\n    }\n    /**\n     * This component is used within the `ion-input-password-toggle` component\n     * to toggle the visibility of the password input.\n     * These attributes need to update based on the state of the password input.\n     * Otherwise, the values will be stale.\n     *\n     * @param newValue\n     * @param _oldValue\n     * @param propName\n     */\n    onAriaChanged(newValue, _oldValue, propName) {\n        this.inheritedAttributes = Object.assign(Object.assign({}, this.inheritedAttributes), { [propName]: newValue });\n        forceUpdate(this);\n    }\n    /**\n     * This is responsible for rendering a hidden native\n     * button element inside the associated form. This allows\n     * users to submit a form by pressing \"Enter\" when a text\n     * field inside of the form is focused. The native button\n     * rendered inside of `ion-button` is in the Shadow DOM\n     * and therefore does not participate in form submission\n     * which is why the following code is necessary.\n     */\n    renderHiddenButton() {\n        const formEl = (this.formEl = this.findForm());\n        if (formEl) {\n            const { formButtonEl } = this;\n            /**\n             * If the form already has a rendered form button\n             * then do not append a new one again.\n             */\n            if (formButtonEl !== null && formEl.contains(formButtonEl)) {\n                return;\n            }\n            // Create a hidden native button inside of the form\n            const newFormButtonEl = (this.formButtonEl = document.createElement('button'));\n            newFormButtonEl.type = this.type;\n            newFormButtonEl.style.display = 'none';\n            // Only submit if the button is not disabled.\n            newFormButtonEl.disabled = this.disabled;\n            formEl.appendChild(newFormButtonEl);\n        }\n    }\n    componentWillLoad() {\n        this.inToolbar = !!this.el.closest('ion-buttons');\n        this.inListHeader = !!this.el.closest('ion-list-header');\n        this.inItem = !!this.el.closest('ion-item') || !!this.el.closest('ion-item-divider');\n        this.inheritedAttributes = inheritAriaAttributes(this.el);\n    }\n    get hasIconOnly() {\n        return !!this.el.querySelector('[slot=\"icon-only\"]');\n    }\n    get rippleType() {\n        const hasClearFill = this.fill === undefined || this.fill === 'clear';\n        // If the button is in a toolbar, has a clear fill (which is the default)\n        // and only has an icon we use the unbounded \"circular\" ripple effect\n        if (hasClearFill && this.hasIconOnly && this.inToolbar) {\n            return 'unbounded';\n        }\n        return 'bounded';\n    }\n    /**\n     * Finds the form element based on the provided `form` selector\n     * or element reference provided.\n     */\n    findForm() {\n        const { form } = this;\n        if (form instanceof HTMLFormElement) {\n            return form;\n        }\n        if (typeof form === 'string') {\n            // Check if the string provided is a form id.\n            const el = document.getElementById(form);\n            if (el) {\n                if (el instanceof HTMLFormElement) {\n                    return el;\n                }\n                else {\n                    /**\n                     * The developer specified a string for the form attribute, but the\n                     * element with that id is not a form element.\n                     */\n                    printIonWarning(`[ion-button] - Form with selector: \"#${form}\" could not be found. Verify that the id is attached to a <form> element.`, this.el);\n                    return null;\n                }\n            }\n            else {\n                /**\n                 * The developer specified a string for the form attribute, but the\n                 * element with that id could not be found in the DOM.\n                 */\n                printIonWarning(`[ion-button] - Form with selector: \"#${form}\" could not be found. Verify that the id is correct and the form is rendered in the DOM.`, this.el);\n                return null;\n            }\n        }\n        if (form !== undefined) {\n            /**\n             * The developer specified a HTMLElement for the form attribute,\n             * but the element is not a HTMLFormElement.\n             * This will also catch if the developer tries to pass in null\n             * as the form attribute.\n             */\n            printIonWarning(`[ion-button] - The provided \"form\" element is invalid. Verify that the form is a HTMLFormElement and rendered in the DOM.`, this.el);\n            return null;\n        }\n        /**\n         * If the form element is not set, the button may be inside\n         * of a form element. Query the closest form element to the button.\n         */\n        return this.el.closest('form');\n    }\n    submitForm(ev) {\n        // this button wants to specifically submit a form\n        // climb up the dom to see if we're in a <form>\n        // and if so, then use JS to submit it\n        if (this.formEl && this.formButtonEl) {\n            ev.preventDefault();\n            this.formButtonEl.click();\n        }\n    }\n    render() {\n        const mode = getIonMode$1(this);\n        const { buttonType, type, disabled, rel, target, size, href, color, expand, hasIconOnly, shape, strong, inheritedAttributes, } = this;\n        const finalSize = size === undefined && this.inItem ? 'small' : size;\n        const TagType = href === undefined ? 'button' : 'a';\n        const attrs = TagType === 'button'\n            ? { type }\n            : {\n                download: this.download,\n                href,\n                rel,\n                target,\n            };\n        let fill = this.fill;\n        /**\n         * We check both undefined and null to\n         * work around https://github.com/ionic-team/stencil/issues/3586.\n         */\n        if (fill == null) {\n            fill = this.inToolbar || this.inListHeader ? 'clear' : 'solid';\n        }\n        /**\n         * We call renderHiddenButton in the render function to account\n         * for any properties being set async. For example, changing the\n         * \"type\" prop from \"button\" to \"submit\" after the component has\n         * loaded would warrant the hidden button being added to the\n         * associated form.\n         */\n        {\n            type !== 'button' && this.renderHiddenButton();\n        }\n        return (h(Host, { key: 'b105ad09215adb3ca2298acdadf0dc9154bbb9b0', onClick: this.handleClick, \"aria-disabled\": disabled ? 'true' : null, class: createColorClasses$1(color, {\n                [mode]: true,\n                [buttonType]: true,\n                [`${buttonType}-${expand}`]: expand !== undefined,\n                [`${buttonType}-${finalSize}`]: finalSize !== undefined,\n                [`${buttonType}-${shape}`]: shape !== undefined,\n                [`${buttonType}-${fill}`]: true,\n                [`${buttonType}-strong`]: strong,\n                'in-toolbar': hostContext('ion-toolbar', this.el),\n                'in-toolbar-color': hostContext('ion-toolbar[color]', this.el),\n                'in-buttons': hostContext('ion-buttons', this.el),\n                'button-has-icon-only': hasIconOnly,\n                'button-disabled': disabled,\n                'ion-activatable': true,\n                'ion-focusable': true,\n            }) }, h(TagType, Object.assign({ key: '66b4e7112bcb9e41d5a723fbbadb0a3104f9ee1d' }, attrs, { class: \"button-native\", part: \"native\", disabled: disabled, onFocus: this.onFocus, onBlur: this.onBlur }, inheritedAttributes), h(\"span\", { key: '1439fc3da280221028dcf7ce8ec9dab273c4d4bb', class: \"button-inner\" }, h(\"slot\", { key: 'd5269ae1afc87ec7b99746032f59cbae93720a9f', name: \"icon-only\", onSlotchange: this.slotChanged }), h(\"slot\", { key: '461c83e97aa246aa86d83e14f1e15a288d35041e', name: \"start\" }), h(\"slot\", { key: '807170d47101f9f6a333dd4ff489c89284f306fe' }), h(\"slot\", { key: 'e67f116dd0349a0d27893e4f3ff0ccef1d402f80', name: \"end\" })), mode === 'md' && h(\"ion-ripple-effect\", { key: '273f0bd9645a36c1bfd18a5c2ab4f81e22b7b989', type: this.rippleType }))));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"disabled\": [\"disabledChanged\"],\n        \"aria-checked\": [\"onAriaChanged\"],\n        \"aria-label\": [\"onAriaChanged\"]\n    }; }\n};\nButton.style = {\n    ios: buttonIosCss,\n    md: buttonMdCss\n};\n\nlet CACHED_MAP;\nconst getIconMap = () => {\n    if (typeof window === 'undefined') {\n        return new Map();\n    }\n    else {\n        if (!CACHED_MAP) {\n            const win = window;\n            win.Ionicons = win.Ionicons || {};\n            CACHED_MAP = win.Ionicons.map = win.Ionicons.map || new Map();\n        }\n        return CACHED_MAP;\n    }\n};\nconst getUrl = (i) => {\n    let url = getSrc(i.src);\n    if (url) {\n        return url;\n    }\n    url = getName(i.name, i.icon, i.mode, i.ios, i.md);\n    if (url) {\n        return getNamedUrl(url, i);\n    }\n    if (i.icon) {\n        url = getSrc(i.icon);\n        if (url) {\n            return url;\n        }\n        url = getSrc(i.icon[i.mode]);\n        if (url) {\n            return url;\n        }\n    }\n    return null;\n};\nconst getNamedUrl = (iconName, iconEl) => {\n    const url = getIconMap().get(iconName);\n    if (url) {\n        return url;\n    }\n    try {\n        return getAssetPath(`svg/${iconName}.svg`);\n    }\n    catch (e) {\n        console.log('e', e);\n        /**\n         * In the custom elements build version of ionicons, referencing an icon\n         * by name will throw an invalid URL error because the asset path is not defined.\n         * This catches that error and logs something that is more developer-friendly.\n         * We also include a reference to the ion-icon element so developers can\n         * figure out which instance of ion-icon needs to be updated.\n         */\n        console.warn(`[Ionicons Warning]: Could not load icon with name \"${iconName}\". Ensure that the icon is registered using addIcons or that the icon SVG data is passed directly to the icon component.`, iconEl);\n    }\n};\nconst getName = (iconName, icon, mode, ios, md) => {\n    // default to \"md\" if somehow the mode wasn't set\n    mode = (mode && toLower(mode)) === 'ios' ? 'ios' : 'md';\n    // if an icon was passed in using the ios or md attributes\n    // set the iconName to whatever was passed in\n    if (ios && mode === 'ios') {\n        iconName = toLower(ios);\n    }\n    else if (md && mode === 'md') {\n        iconName = toLower(md);\n    }\n    else {\n        if (!iconName && icon && !isSrc(icon)) {\n            iconName = icon;\n        }\n        if (isStr(iconName)) {\n            iconName = toLower(iconName);\n        }\n    }\n    if (!isStr(iconName) || iconName.trim() === '') {\n        return null;\n    }\n    // only allow alpha characters and dash\n    const invalidChars = iconName.replace(/[a-z]|-|\\d/gi, '');\n    if (invalidChars !== '') {\n        return null;\n    }\n    return iconName;\n};\nconst getSrc = (src) => {\n    if (isStr(src)) {\n        src = src.trim();\n        if (isSrc(src)) {\n            return src;\n        }\n    }\n    return null;\n};\nconst isSrc = (str) => str.length > 0 && /(\\/|\\.)/.test(str);\nconst isStr = (val) => typeof val === 'string';\nconst toLower = (val) => val.toLowerCase();\n/**\n * Elements inside of web components sometimes need to inherit global attributes\n * set on the host. For example, the inner input in `ion-input` should inherit\n * the `title` attribute that developers set directly on `ion-input`. This\n * helper function should be called in componentWillLoad and assigned to a variable\n * that is later used in the render function.\n *\n * This does not need to be reactive as changing attributes on the host element\n * does not trigger a re-render.\n */\nconst inheritAttributes = (el, attributes = []) => {\n    const attributeObject = {};\n    attributes.forEach((attr) => {\n        if (el.hasAttribute(attr)) {\n            const value = el.getAttribute(attr);\n            if (value !== null) {\n                attributeObject[attr] = el.getAttribute(attr);\n            }\n            el.removeAttribute(attr);\n        }\n    });\n    return attributeObject;\n};\n/**\n * Returns `true` if the document or host element\n * has a `dir` set to `rtl`. The host value will always\n * take priority over the root document value.\n */\nconst isRTL = (hostEl) => {\n    if (hostEl) {\n        if (hostEl.dir !== '') {\n            return hostEl.dir.toLowerCase() === 'rtl';\n        }\n    }\n    return (document === null || document === void 0 ? void 0 : document.dir.toLowerCase()) === 'rtl';\n};\n\nconst validateContent = (svgContent) => {\n    const div = document.createElement('div');\n    div.innerHTML = svgContent;\n    // setup this way to ensure it works on our buddy IE\n    for (let i = div.childNodes.length - 1; i >= 0; i--) {\n        if (div.childNodes[i].nodeName.toLowerCase() !== 'svg') {\n            div.removeChild(div.childNodes[i]);\n        }\n    }\n    // must only have 1 root element\n    const svgElm = div.firstElementChild;\n    if (svgElm && svgElm.nodeName.toLowerCase() === 'svg') {\n        const svgClass = svgElm.getAttribute('class') || '';\n        svgElm.setAttribute('class', (svgClass + ' s-ion-icon').trim());\n        // root element must be an svg\n        // lets double check we've got valid elements\n        // do not allow scripts\n        if (isValid(svgElm)) {\n            return div.innerHTML;\n        }\n    }\n    return '';\n};\nconst isValid = (elm) => {\n    if (elm.nodeType === 1) {\n        if (elm.nodeName.toLowerCase() === 'script') {\n            return false;\n        }\n        for (let i = 0; i < elm.attributes.length; i++) {\n            const name = elm.attributes[i].name;\n            if (isStr(name) && name.toLowerCase().indexOf('on') === 0) {\n                return false;\n            }\n        }\n        for (let i = 0; i < elm.childNodes.length; i++) {\n            if (!isValid(elm.childNodes[i])) {\n                return false;\n            }\n        }\n    }\n    return true;\n};\nconst isSvgDataUrl = (url) => url.startsWith('data:image/svg+xml');\nconst isEncodedDataUrl = (url) => url.indexOf(';utf8,') !== -1;\n\nconst ioniconContent = new Map();\nconst requests = new Map();\nlet parser;\n/**\n * Safely fallback to an empty svg\n */\nfunction safeFallback(url) {\n    const svg = '';\n    ioniconContent.set(url, svg);\n    return svg;\n}\nconst getSvgContent = (url, sanitize) => {\n    /**\n     * See if we already have a request for this url\n     */\n    const req = requests.get(url);\n    if (req) {\n        return req;\n    }\n    if (typeof fetch !== 'undefined' && typeof document !== 'undefined') {\n        /**\n         * If the url is a data url of an svg, then try to parse it\n         * with the DOMParser. This works with content security policies enabled.\n         */\n        if (isSvgDataUrl(url) && isEncodedDataUrl(url)) {\n            return Promise.resolve(getSvgByUrl(url));\n        }\n        return fetchSvg(url, sanitize);\n    }\n    return Promise.resolve(safeFallback(url));\n};\nfunction getSvgByUrl(url) {\n    if (!parser) {\n        /**\n         * Create an instance of the DOM parser. This creates a single\n         * parser instance for the entire app, which is more efficient.\n         */\n        parser = new DOMParser();\n    }\n    const doc = parser.parseFromString(url, 'text/html');\n    const svg = doc.querySelector('svg');\n    if (svg) {\n        ioniconContent.set(url, svg.outerHTML);\n        return svg.outerHTML;\n    }\n    throw new Error(`Could not parse svg from ${url}`);\n}\nfunction fetchSvg(url, sanitize) {\n    /**\n     * We don't already have a request\n     */\n    const req = fetch(url)\n        .then((rsp) => {\n        /**\n         * When fetching from a file:// URL, some browsers return\n         * a 0 status code even when the request succeeds so don't\n         * rely on rsp.ok as the only signal of success.\n         */\n        return rsp\n            .text()\n            .then((svgContent) => {\n            if (svgContent && sanitize !== false) {\n                svgContent = validateContent(svgContent);\n            }\n            const svg = svgContent || '';\n            ioniconContent.set(url, svg);\n            return svg;\n        })\n            .catch(() => safeFallback(url));\n    })\n        .catch(() => safeFallback(url));\n    /**\n     * Cache for the same requests\n     */\n    requests.set(url, req);\n    return req;\n}\n\nconst iconCss = \":host{display:inline-block;width:1em;height:1em;contain:strict;fill:currentColor;-webkit-box-sizing:content-box !important;box-sizing:content-box !important}:host .ionicon{stroke:currentColor}.ionicon-fill-none{fill:none}.ionicon-stroke-width{stroke-width:var(--ionicon-stroke-width, 32px)}.icon-inner,.ionicon,svg{display:block;height:100%;width:100%}@supports (background: -webkit-named-image(i)){:host(.icon-rtl) .icon-inner{-webkit-transform:scaleX(-1);transform:scaleX(-1)}}@supports not selector(:dir(rtl)) and selector(:host-context([dir='rtl'])){:host(.icon-rtl) .icon-inner{-webkit-transform:scaleX(-1);transform:scaleX(-1)}}:host(.flip-rtl):host-context([dir='rtl']) .icon-inner{-webkit-transform:scaleX(-1);transform:scaleX(-1)}@supports selector(:dir(rtl)){:host(.flip-rtl:dir(rtl)) .icon-inner{-webkit-transform:scaleX(-1);transform:scaleX(-1)}:host(.flip-rtl:dir(ltr)) .icon-inner{-webkit-transform:scaleX(1);transform:scaleX(1)}}:host(.icon-small){font-size:1.125rem !important}:host(.icon-large){font-size:2rem !important}:host(.ion-color){color:var(--ion-color-base) !important}:host(.ion-color-primary){--ion-color-base:var(--ion-color-primary, #3880ff)}:host(.ion-color-secondary){--ion-color-base:var(--ion-color-secondary, #0cd1e8)}:host(.ion-color-tertiary){--ion-color-base:var(--ion-color-tertiary, #f4a942)}:host(.ion-color-success){--ion-color-base:var(--ion-color-success, #10dc60)}:host(.ion-color-warning){--ion-color-base:var(--ion-color-warning, #ffce00)}:host(.ion-color-danger){--ion-color-base:var(--ion-color-danger, #f14141)}:host(.ion-color-light){--ion-color-base:var(--ion-color-light, #f4f5f8)}:host(.ion-color-medium){--ion-color-base:var(--ion-color-medium, #989aa2)}:host(.ion-color-dark){--ion-color-base:var(--ion-color-dark, #222428)}\";\n\nconst Icon = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.iconName = null;\n        this.inheritedAttributes = {};\n        this.didLoadIcon = false;\n        this.isVisible = false;\n        /**\n         * The mode determines which platform styles to use.\n         */\n        this.mode = getIonMode();\n        /**\n         * If enabled, ion-icon will be loaded lazily when it's visible in the viewport.\n         * Default, `false`.\n         */\n        this.lazy = false;\n        /**\n         * When set to `false`, SVG content that is HTTP fetched will not be checked\n         * if the response SVG content has any `<script>` elements, or any attributes\n         * that start with `on`, such as `onclick`.\n         * @default true\n         */\n        this.sanitize = true;\n    }\n    componentWillLoad() {\n        this.inheritedAttributes = inheritAttributes(this.el, ['aria-label']);\n    }\n    connectedCallback() {\n        /**\n         * purposely do not return the promise here because loading\n         * the svg file should not hold up loading the app\n         * only load the svg if it's visible\n         */\n        this.waitUntilVisible(this.el, '50px', () => {\n            this.isVisible = true;\n            this.loadIcon();\n        });\n    }\n    /**\n     * Loads the icon after the component has finished rendering.\n     */\n    componentDidLoad() {\n        /**\n         * Addresses an Angular issue where property values are assigned after the 'connectedCallback' but prior to the registration of watchers.\n         * This enhancement ensures the loading of an icon when the component has finished rendering and the icon has yet to apply the SVG data.\n         * This modification pertains to the usage of Angular's binding syntax:\n         * `<ion-icon [name]=\"myIconName\"></ion-icon>`\n         */\n        if (!this.didLoadIcon) {\n            this.loadIcon();\n        }\n    }\n    /**\n     * Disconnect the IntersectionObserver.\n     */\n    disconnectedCallback() {\n        if (this.io) {\n            this.io.disconnect();\n            this.io = undefined;\n        }\n    }\n    /**\n     * Wait until the icon is visible in the viewport.\n     * @param el - The element to observe.\n     * @param rootMargin - The root margin of the observer.\n     * @param cb - The callback to call when the element is visible.\n     */\n    waitUntilVisible(el, rootMargin, cb) {\n        /**\n         * IntersectionObserver is a browser API that allows you to observe\n         * the visibility of an element relative to a root element. It is\n         * supported in all modern browsers, except IE and when server-side\n         * rendering.\n         */\n        const hasIntersectionObserverSupport = Boolean(this.lazy && typeof window !== 'undefined' && window.IntersectionObserver);\n        /**\n         * browser doesn't support IntersectionObserver\n         * so just fallback to always show it\n         */\n        if (!hasIntersectionObserverSupport) {\n            return cb();\n        }\n        const io = (this.io = new window.IntersectionObserver((data) => {\n            if (data[0].isIntersecting) {\n                io.disconnect();\n                this.io = undefined;\n                cb();\n            }\n        }, { rootMargin }));\n        io.observe(el);\n    }\n    /**\n     * Watch for changes to the icon name, src, icon, ios, or md properties.\n     * When a change is detected, the icon will be loaded.\n     */\n    loadIcon() {\n        if (this.isVisible) {\n            const url = getUrl(this);\n            if (url) {\n                if (ioniconContent.has(url)) {\n                    // sync if it's already loaded\n                    this.svgContent = ioniconContent.get(url);\n                }\n                else {\n                    // async if it hasn't been loaded\n                    getSvgContent(url, this.sanitize).then(() => (this.svgContent = ioniconContent.get(url)));\n                }\n                this.didLoadIcon = true;\n            }\n        }\n        this.iconName = getName(this.name, this.icon, this.mode, this.ios, this.md);\n    }\n    render() {\n        const { flipRtl, iconName, inheritedAttributes, el } = this;\n        const mode = this.mode || 'md';\n        /**\n         * we have designated that arrows & chevrons should automatically flip (unless flip-rtl\n         * is set to false) because \"back\" is left in ltr and right in rtl, and \"forward\" is the opposite\n         */\n        const shouldAutoFlip = iconName\n            ? (iconName.includes('arrow') || iconName.includes('chevron')) && flipRtl !== false\n            : false;\n        /**\n         * if shouldBeFlippable is true, the icon should change direction when `dir` changes\n         */\n        const shouldBeFlippable = flipRtl || shouldAutoFlip;\n        return (h(Host, Object.assign({ key: '0578c899781ca145dd8205acd9670af39b57cf2e', role: \"img\", class: Object.assign(Object.assign({ [mode]: true }, createColorClasses(this.color)), { [`icon-${this.size}`]: !!this.size, 'flip-rtl': shouldBeFlippable, 'icon-rtl': shouldBeFlippable && isRTL(el) }) }, inheritedAttributes), this.svgContent ? (h(\"div\", { class: \"icon-inner\", innerHTML: this.svgContent })) : (h(\"div\", { class: \"icon-inner\" }))));\n    }\n    static get assetsDirs() { return [\"svg\"]; }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"name\": [\"loadIcon\"],\n        \"src\": [\"loadIcon\"],\n        \"icon\": [\"loadIcon\"],\n        \"ios\": [\"loadIcon\"],\n        \"md\": [\"loadIcon\"]\n    }; }\n};\n/**\n * Get the mode of the document.\n * @returns The mode of the document.\n */\nconst getIonMode = () => (typeof document !== 'undefined' && document.documentElement.getAttribute('mode')) || 'md';\n/**\n * Create color classes for the icon.\n * @param color - The color of the icon.\n * @returns The color classes for the icon.\n */\nconst createColorClasses = (color) => {\n    return color\n        ? {\n            'ion-color': true,\n            [`ion-color-${color}`]: true,\n        }\n        : null;\n};\nIcon.style = iconCss;\n\nexport { Button as ion_button, Icon as ion_icon };\n"],
  "mappings": "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",
  "names": ["getIonMode", "createColorClasses"]
}
