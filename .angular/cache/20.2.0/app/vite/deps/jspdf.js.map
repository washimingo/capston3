{
  "version": 3,
  "sources": ["../../../../../../node_modules/fflate/esm/browser.js", "../../../../../../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js", "../../../../../../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js", "../../../../../../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js", "../../../../../../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js", "../../../../../../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js", "../../../../../../node_modules/@babel/runtime/helpers/esm/slicedToArray.js", "../../../../../../node_modules/iobuffer/lib-esm/text.js", "../../../../../../node_modules/iobuffer/lib-esm/IOBuffer.js", "../../../../../../node_modules/fast-png/node_modules/pako/dist/pako.esm.mjs", "../../../../../../node_modules/fast-png/lib-esm/helpers/crc.js", "../../../../../../node_modules/fast-png/lib-esm/helpers/unfilter.js", "../../../../../../node_modules/fast-png/lib-esm/helpers/applyUnfilter.js", "../../../../../../node_modules/fast-png/lib-esm/helpers/decodeInterlaceAdam7.js", "../../../../../../node_modules/fast-png/lib-esm/helpers/decodeInterlaceNull.js", "../../../../../../node_modules/fast-png/lib-esm/helpers/signature.js", "../../../../../../node_modules/fast-png/lib-esm/helpers/text.js", "../../../../../../node_modules/fast-png/lib-esm/internalTypes.js", "../../../../../../node_modules/fast-png/lib-esm/PngDecoder.js", "../../../../../../node_modules/fast-png/lib-esm/types.js", "../../../../../../node_modules/fast-png/lib-esm/index.js", "../../../../../../node_modules/jspdf/dist/jspdf.es.min.js"],
  "sourcesContent": ["// DEFLATE is a complex format; to read this code, you should probably check the RFC first:\n// https://tools.ietf.org/html/rfc1951\n// You may also wish to take a look at the guide I made about this program:\n// https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad\n// Some of the following code is similar to that of UZIP.js:\n// https://github.com/photopea/UZIP.js\n// However, the vast majority of the codebase has diverged from UZIP.js to increase performance and reduce bundle size.\n// Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint\n// is better for memory in most engines (I *think*).\nvar ch2 = {};\nvar wk = (function (c, id, msg, transfer, cb) {\n    var w = new Worker(ch2[id] || (ch2[id] = URL.createObjectURL(new Blob([\n        c + ';addEventListener(\"error\",function(e){e=e.error;postMessage({$e$:[e.message,e.code,e.stack]})})'\n    ], { type: 'text/javascript' }))));\n    w.onmessage = function (e) {\n        var d = e.data, ed = d.$e$;\n        if (ed) {\n            var err = new Error(ed[0]);\n            err['code'] = ed[1];\n            err.stack = ed[2];\n            cb(err, null);\n        }\n        else\n            cb(null, d);\n    };\n    w.postMessage(msg, transfer);\n    return w;\n});\n\n// aliases for shorter compressed code (most minifers don't do this)\nvar u8 = Uint8Array, u16 = Uint16Array, i32 = Int32Array;\n// fixed length extra bits\nvar fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, /* unused */ 0, 0, /* impossible */ 0]);\n// fixed distance extra bits\nvar fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, /* unused */ 0, 0]);\n// code length index map\nvar clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n// get base, reverse index map from extra bits\nvar freb = function (eb, start) {\n    var b = new u16(31);\n    for (var i = 0; i < 31; ++i) {\n        b[i] = start += 1 << eb[i - 1];\n    }\n    // numbers here are at max 18 bits\n    var r = new i32(b[30]);\n    for (var i = 1; i < 30; ++i) {\n        for (var j = b[i]; j < b[i + 1]; ++j) {\n            r[j] = ((j - b[i]) << 5) | i;\n        }\n    }\n    return { b: b, r: r };\n};\nvar _a = freb(fleb, 2), fl = _a.b, revfl = _a.r;\n// we can ignore the fact that the other numbers are wrong; they never happen anyway\nfl[28] = 258, revfl[258] = 28;\nvar _b = freb(fdeb, 0), fd = _b.b, revfd = _b.r;\n// map of value to reverse (assuming 16 bits)\nvar rev = new u16(32768);\nfor (var i = 0; i < 32768; ++i) {\n    // reverse table algorithm from SO\n    var x = ((i & 0xAAAA) >> 1) | ((i & 0x5555) << 1);\n    x = ((x & 0xCCCC) >> 2) | ((x & 0x3333) << 2);\n    x = ((x & 0xF0F0) >> 4) | ((x & 0x0F0F) << 4);\n    rev[i] = (((x & 0xFF00) >> 8) | ((x & 0x00FF) << 8)) >> 1;\n}\n// create huffman tree from u8 \"map\": index -> code length for code index\n// mb (max bits) must be at most 15\n// TODO: optimize/split up?\nvar hMap = (function (cd, mb, r) {\n    var s = cd.length;\n    // index\n    var i = 0;\n    // u16 \"map\": index -> # of codes with bit length = index\n    var l = new u16(mb);\n    // length of cd must be 288 (total # of codes)\n    for (; i < s; ++i) {\n        if (cd[i])\n            ++l[cd[i] - 1];\n    }\n    // u16 \"map\": index -> minimum code for bit length = index\n    var le = new u16(mb);\n    for (i = 1; i < mb; ++i) {\n        le[i] = (le[i - 1] + l[i - 1]) << 1;\n    }\n    var co;\n    if (r) {\n        // u16 \"map\": index -> number of actual bits, symbol for code\n        co = new u16(1 << mb);\n        // bits to remove for reverser\n        var rvb = 15 - mb;\n        for (i = 0; i < s; ++i) {\n            // ignore 0 lengths\n            if (cd[i]) {\n                // num encoding both symbol and bits read\n                var sv = (i << 4) | cd[i];\n                // free bits\n                var r_1 = mb - cd[i];\n                // start value\n                var v = le[cd[i] - 1]++ << r_1;\n                // m is end value\n                for (var m = v | ((1 << r_1) - 1); v <= m; ++v) {\n                    // every 16 bit value starting with the code yields the same result\n                    co[rev[v] >> rvb] = sv;\n                }\n            }\n        }\n    }\n    else {\n        co = new u16(s);\n        for (i = 0; i < s; ++i) {\n            if (cd[i]) {\n                co[i] = rev[le[cd[i] - 1]++] >> (15 - cd[i]);\n            }\n        }\n    }\n    return co;\n});\n// fixed length tree\nvar flt = new u8(288);\nfor (var i = 0; i < 144; ++i)\n    flt[i] = 8;\nfor (var i = 144; i < 256; ++i)\n    flt[i] = 9;\nfor (var i = 256; i < 280; ++i)\n    flt[i] = 7;\nfor (var i = 280; i < 288; ++i)\n    flt[i] = 8;\n// fixed distance tree\nvar fdt = new u8(32);\nfor (var i = 0; i < 32; ++i)\n    fdt[i] = 5;\n// fixed length map\nvar flm = /*#__PURE__*/ hMap(flt, 9, 0), flrm = /*#__PURE__*/ hMap(flt, 9, 1);\n// fixed distance map\nvar fdm = /*#__PURE__*/ hMap(fdt, 5, 0), fdrm = /*#__PURE__*/ hMap(fdt, 5, 1);\n// find max of array\nvar max = function (a) {\n    var m = a[0];\n    for (var i = 1; i < a.length; ++i) {\n        if (a[i] > m)\n            m = a[i];\n    }\n    return m;\n};\n// read d, starting at bit p and mask with m\nvar bits = function (d, p, m) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8)) >> (p & 7)) & m;\n};\n// read d, starting at bit p continuing for at least 16 bits\nvar bits16 = function (d, p) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8) | (d[o + 2] << 16)) >> (p & 7));\n};\n// get end of byte\nvar shft = function (p) { return ((p + 7) / 8) | 0; };\n// typed array slice - allows garbage collector to free original reference,\n// while being more compatible than .slice\nvar slc = function (v, s, e) {\n    if (s == null || s < 0)\n        s = 0;\n    if (e == null || e > v.length)\n        e = v.length;\n    // can't use .constructor in case user-supplied\n    return new u8(v.subarray(s, e));\n};\n/**\n * Codes for errors generated within this library\n */\nexport var FlateErrorCode = {\n    UnexpectedEOF: 0,\n    InvalidBlockType: 1,\n    InvalidLengthLiteral: 2,\n    InvalidDistance: 3,\n    StreamFinished: 4,\n    NoStreamHandler: 5,\n    InvalidHeader: 6,\n    NoCallback: 7,\n    InvalidUTF8: 8,\n    ExtraFieldTooLong: 9,\n    InvalidDate: 10,\n    FilenameTooLong: 11,\n    StreamFinishing: 12,\n    InvalidZipData: 13,\n    UnknownCompressionMethod: 14\n};\n// error codes\nvar ec = [\n    'unexpected EOF',\n    'invalid block type',\n    'invalid length/literal',\n    'invalid distance',\n    'stream finished',\n    'no stream handler',\n    ,\n    'no callback',\n    'invalid UTF-8 data',\n    'extra field too long',\n    'date not in range 1980-2099',\n    'filename too long',\n    'stream finishing',\n    'invalid zip data'\n    // determined by unknown compression method\n];\n;\nvar err = function (ind, msg, nt) {\n    var e = new Error(msg || ec[ind]);\n    e.code = ind;\n    if (Error.captureStackTrace)\n        Error.captureStackTrace(e, err);\n    if (!nt)\n        throw e;\n    return e;\n};\n// expands raw DEFLATE data\nvar inflt = function (dat, st, buf, dict) {\n    // source length       dict length\n    var sl = dat.length, dl = dict ? dict.length : 0;\n    if (!sl || st.f && !st.l)\n        return buf || new u8(0);\n    var noBuf = !buf;\n    // have to estimate size\n    var resize = noBuf || st.i != 2;\n    // no state\n    var noSt = st.i;\n    // Assumes roughly 33% compression ratio average\n    if (noBuf)\n        buf = new u8(sl * 3);\n    // ensure buffer can fit at least l elements\n    var cbuf = function (l) {\n        var bl = buf.length;\n        // need to increase size to fit\n        if (l > bl) {\n            // Double or set to necessary, whichever is greater\n            var nbuf = new u8(Math.max(bl * 2, l));\n            nbuf.set(buf);\n            buf = nbuf;\n        }\n    };\n    //  last chunk         bitpos           bytes\n    var final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;\n    // total bits\n    var tbts = sl * 8;\n    do {\n        if (!lm) {\n            // BFINAL - this is only 1 when last chunk is next\n            final = bits(dat, pos, 1);\n            // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n            var type = bits(dat, pos + 1, 3);\n            pos += 3;\n            if (!type) {\n                // go to end of byte boundary\n                var s = shft(pos) + 4, l = dat[s - 4] | (dat[s - 3] << 8), t = s + l;\n                if (t > sl) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                // ensure size\n                if (resize)\n                    cbuf(bt + l);\n                // Copy over uncompressed data\n                buf.set(dat.subarray(s, t), bt);\n                // Get new bitpos, update byte count\n                st.b = bt += l, st.p = pos = t * 8, st.f = final;\n                continue;\n            }\n            else if (type == 1)\n                lm = flrm, dm = fdrm, lbt = 9, dbt = 5;\n            else if (type == 2) {\n                //  literal                            lengths\n                var hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;\n                var tl = hLit + bits(dat, pos + 5, 31) + 1;\n                pos += 14;\n                // length+distance tree\n                var ldt = new u8(tl);\n                // code length tree\n                var clt = new u8(19);\n                for (var i = 0; i < hcLen; ++i) {\n                    // use index map to get real code\n                    clt[clim[i]] = bits(dat, pos + i * 3, 7);\n                }\n                pos += hcLen * 3;\n                // code lengths bits\n                var clb = max(clt), clbmsk = (1 << clb) - 1;\n                // code lengths map\n                var clm = hMap(clt, clb, 1);\n                for (var i = 0; i < tl;) {\n                    var r = clm[bits(dat, pos, clbmsk)];\n                    // bits read\n                    pos += r & 15;\n                    // symbol\n                    var s = r >> 4;\n                    // code length to copy\n                    if (s < 16) {\n                        ldt[i++] = s;\n                    }\n                    else {\n                        //  copy   count\n                        var c = 0, n = 0;\n                        if (s == 16)\n                            n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];\n                        else if (s == 17)\n                            n = 3 + bits(dat, pos, 7), pos += 3;\n                        else if (s == 18)\n                            n = 11 + bits(dat, pos, 127), pos += 7;\n                        while (n--)\n                            ldt[i++] = c;\n                    }\n                }\n                //    length tree                 distance tree\n                var lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);\n                // max length bits\n                lbt = max(lt);\n                // max dist bits\n                dbt = max(dt);\n                lm = hMap(lt, lbt, 1);\n                dm = hMap(dt, dbt, 1);\n            }\n            else\n                err(1);\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n        }\n        // Make sure the buffer can hold this + the largest possible addition\n        // Maximum chunk size (practically, theoretically infinite) is 2^17\n        if (resize)\n            cbuf(bt + 131072);\n        var lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;\n        var lpos = pos;\n        for (;; lpos = pos) {\n            // bits read, code\n            var c = lm[bits16(dat, pos) & lms], sym = c >> 4;\n            pos += c & 15;\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n            if (!c)\n                err(2);\n            if (sym < 256)\n                buf[bt++] = sym;\n            else if (sym == 256) {\n                lpos = pos, lm = null;\n                break;\n            }\n            else {\n                var add = sym - 254;\n                // no extra bits needed if less\n                if (sym > 264) {\n                    // index\n                    var i = sym - 257, b = fleb[i];\n                    add = bits(dat, pos, (1 << b) - 1) + fl[i];\n                    pos += b;\n                }\n                // dist\n                var d = dm[bits16(dat, pos) & dms], dsym = d >> 4;\n                if (!d)\n                    err(3);\n                pos += d & 15;\n                var dt = fd[dsym];\n                if (dsym > 3) {\n                    var b = fdeb[dsym];\n                    dt += bits16(dat, pos) & (1 << b) - 1, pos += b;\n                }\n                if (pos > tbts) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                if (resize)\n                    cbuf(bt + 131072);\n                var end = bt + add;\n                if (bt < dt) {\n                    var shift = dl - dt, dend = Math.min(dt, end);\n                    if (shift + bt < 0)\n                        err(3);\n                    for (; bt < dend; ++bt)\n                        buf[bt] = dict[shift + bt];\n                }\n                for (; bt < end; ++bt)\n                    buf[bt] = buf[bt - dt];\n            }\n        }\n        st.l = lm, st.p = lpos, st.b = bt, st.f = final;\n        if (lm)\n            final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n    } while (!final);\n    // don't reallocate for streams or user buffers\n    return bt != buf.length && noBuf ? slc(buf, 0, bt) : buf.subarray(0, bt);\n};\n// starting at p, write the minimum number of bits that can hold v to d\nvar wbits = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >> 8;\n};\n// starting at p, write the minimum number of bits (>8) that can hold v to d\nvar wbits16 = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >> 8;\n    d[o + 2] |= v >> 16;\n};\n// creates code lengths from a frequency table\nvar hTree = function (d, mb) {\n    // Need extra info to make a tree\n    var t = [];\n    for (var i = 0; i < d.length; ++i) {\n        if (d[i])\n            t.push({ s: i, f: d[i] });\n    }\n    var s = t.length;\n    var t2 = t.slice();\n    if (!s)\n        return { t: et, l: 0 };\n    if (s == 1) {\n        var v = new u8(t[0].s + 1);\n        v[t[0].s] = 1;\n        return { t: v, l: 1 };\n    }\n    t.sort(function (a, b) { return a.f - b.f; });\n    // after i2 reaches last ind, will be stopped\n    // freq must be greater than largest possible number of symbols\n    t.push({ s: -1, f: 25001 });\n    var l = t[0], r = t[1], i0 = 0, i1 = 1, i2 = 2;\n    t[0] = { s: -1, f: l.f + r.f, l: l, r: r };\n    // efficient algorithm from UZIP.js\n    // i0 is lookbehind, i2 is lookahead - after processing two low-freq\n    // symbols that combined have high freq, will start processing i2 (high-freq,\n    // non-composite) symbols instead\n    // see https://reddit.com/r/photopea/comments/ikekht/uzipjs_questions/\n    while (i1 != s - 1) {\n        l = t[t[i0].f < t[i2].f ? i0++ : i2++];\n        r = t[i0 != i1 && t[i0].f < t[i2].f ? i0++ : i2++];\n        t[i1++] = { s: -1, f: l.f + r.f, l: l, r: r };\n    }\n    var maxSym = t2[0].s;\n    for (var i = 1; i < s; ++i) {\n        if (t2[i].s > maxSym)\n            maxSym = t2[i].s;\n    }\n    // code lengths\n    var tr = new u16(maxSym + 1);\n    // max bits in tree\n    var mbt = ln(t[i1 - 1], tr, 0);\n    if (mbt > mb) {\n        // more algorithms from UZIP.js\n        // TODO: find out how this code works (debt)\n        //  ind    debt\n        var i = 0, dt = 0;\n        //    left            cost\n        var lft = mbt - mb, cst = 1 << lft;\n        t2.sort(function (a, b) { return tr[b.s] - tr[a.s] || a.f - b.f; });\n        for (; i < s; ++i) {\n            var i2_1 = t2[i].s;\n            if (tr[i2_1] > mb) {\n                dt += cst - (1 << (mbt - tr[i2_1]));\n                tr[i2_1] = mb;\n            }\n            else\n                break;\n        }\n        dt >>= lft;\n        while (dt > 0) {\n            var i2_2 = t2[i].s;\n            if (tr[i2_2] < mb)\n                dt -= 1 << (mb - tr[i2_2]++ - 1);\n            else\n                ++i;\n        }\n        for (; i >= 0 && dt; --i) {\n            var i2_3 = t2[i].s;\n            if (tr[i2_3] == mb) {\n                --tr[i2_3];\n                ++dt;\n            }\n        }\n        mbt = mb;\n    }\n    return { t: new u8(tr), l: mbt };\n};\n// get the max length and assign length codes\nvar ln = function (n, l, d) {\n    return n.s == -1\n        ? Math.max(ln(n.l, l, d + 1), ln(n.r, l, d + 1))\n        : (l[n.s] = d);\n};\n// length codes generation\nvar lc = function (c) {\n    var s = c.length;\n    // Note that the semicolon was intentional\n    while (s && !c[--s])\n        ;\n    var cl = new u16(++s);\n    //  ind      num         streak\n    var cli = 0, cln = c[0], cls = 1;\n    var w = function (v) { cl[cli++] = v; };\n    for (var i = 1; i <= s; ++i) {\n        if (c[i] == cln && i != s)\n            ++cls;\n        else {\n            if (!cln && cls > 2) {\n                for (; cls > 138; cls -= 138)\n                    w(32754);\n                if (cls > 2) {\n                    w(cls > 10 ? ((cls - 11) << 5) | 28690 : ((cls - 3) << 5) | 12305);\n                    cls = 0;\n                }\n            }\n            else if (cls > 3) {\n                w(cln), --cls;\n                for (; cls > 6; cls -= 6)\n                    w(8304);\n                if (cls > 2)\n                    w(((cls - 3) << 5) | 8208), cls = 0;\n            }\n            while (cls--)\n                w(cln);\n            cls = 1;\n            cln = c[i];\n        }\n    }\n    return { c: cl.subarray(0, cli), n: s };\n};\n// calculate the length of output from tree, code lengths\nvar clen = function (cf, cl) {\n    var l = 0;\n    for (var i = 0; i < cl.length; ++i)\n        l += cf[i] * cl[i];\n    return l;\n};\n// writes a fixed block\n// returns the new bit pos\nvar wfblk = function (out, pos, dat) {\n    // no need to write 00 as type: TypedArray defaults to 0\n    var s = dat.length;\n    var o = shft(pos + 2);\n    out[o] = s & 255;\n    out[o + 1] = s >> 8;\n    out[o + 2] = out[o] ^ 255;\n    out[o + 3] = out[o + 1] ^ 255;\n    for (var i = 0; i < s; ++i)\n        out[o + i + 4] = dat[i];\n    return (o + 4 + s) * 8;\n};\n// writes a block\nvar wblk = function (dat, out, final, syms, lf, df, eb, li, bs, bl, p) {\n    wbits(out, p++, final);\n    ++lf[256];\n    var _a = hTree(lf, 15), dlt = _a.t, mlb = _a.l;\n    var _b = hTree(df, 15), ddt = _b.t, mdb = _b.l;\n    var _c = lc(dlt), lclt = _c.c, nlc = _c.n;\n    var _d = lc(ddt), lcdt = _d.c, ndc = _d.n;\n    var lcfreq = new u16(19);\n    for (var i = 0; i < lclt.length; ++i)\n        ++lcfreq[lclt[i] & 31];\n    for (var i = 0; i < lcdt.length; ++i)\n        ++lcfreq[lcdt[i] & 31];\n    var _e = hTree(lcfreq, 7), lct = _e.t, mlcb = _e.l;\n    var nlcc = 19;\n    for (; nlcc > 4 && !lct[clim[nlcc - 1]]; --nlcc)\n        ;\n    var flen = (bl + 5) << 3;\n    var ftlen = clen(lf, flt) + clen(df, fdt) + eb;\n    var dtlen = clen(lf, dlt) + clen(df, ddt) + eb + 14 + 3 * nlcc + clen(lcfreq, lct) + 2 * lcfreq[16] + 3 * lcfreq[17] + 7 * lcfreq[18];\n    if (bs >= 0 && flen <= ftlen && flen <= dtlen)\n        return wfblk(out, p, dat.subarray(bs, bs + bl));\n    var lm, ll, dm, dl;\n    wbits(out, p, 1 + (dtlen < ftlen)), p += 2;\n    if (dtlen < ftlen) {\n        lm = hMap(dlt, mlb, 0), ll = dlt, dm = hMap(ddt, mdb, 0), dl = ddt;\n        var llm = hMap(lct, mlcb, 0);\n        wbits(out, p, nlc - 257);\n        wbits(out, p + 5, ndc - 1);\n        wbits(out, p + 10, nlcc - 4);\n        p += 14;\n        for (var i = 0; i < nlcc; ++i)\n            wbits(out, p + 3 * i, lct[clim[i]]);\n        p += 3 * nlcc;\n        var lcts = [lclt, lcdt];\n        for (var it = 0; it < 2; ++it) {\n            var clct = lcts[it];\n            for (var i = 0; i < clct.length; ++i) {\n                var len = clct[i] & 31;\n                wbits(out, p, llm[len]), p += lct[len];\n                if (len > 15)\n                    wbits(out, p, (clct[i] >> 5) & 127), p += clct[i] >> 12;\n            }\n        }\n    }\n    else {\n        lm = flm, ll = flt, dm = fdm, dl = fdt;\n    }\n    for (var i = 0; i < li; ++i) {\n        var sym = syms[i];\n        if (sym > 255) {\n            var len = (sym >> 18) & 31;\n            wbits16(out, p, lm[len + 257]), p += ll[len + 257];\n            if (len > 7)\n                wbits(out, p, (sym >> 23) & 31), p += fleb[len];\n            var dst = sym & 31;\n            wbits16(out, p, dm[dst]), p += dl[dst];\n            if (dst > 3)\n                wbits16(out, p, (sym >> 5) & 8191), p += fdeb[dst];\n        }\n        else {\n            wbits16(out, p, lm[sym]), p += ll[sym];\n        }\n    }\n    wbits16(out, p, lm[256]);\n    return p + ll[256];\n};\n// deflate options (nice << 13) | chain\nvar deo = /*#__PURE__*/ new i32([65540, 131080, 131088, 131104, 262176, 1048704, 1048832, 2114560, 2117632]);\n// empty\nvar et = /*#__PURE__*/ new u8(0);\n// compresses data into a raw DEFLATE buffer\nvar dflt = function (dat, lvl, plvl, pre, post, st) {\n    var s = st.z || dat.length;\n    var o = new u8(pre + s + 5 * (1 + Math.ceil(s / 7000)) + post);\n    // writing to this writes to the output buffer\n    var w = o.subarray(pre, o.length - post);\n    var lst = st.l;\n    var pos = (st.r || 0) & 7;\n    if (lvl) {\n        if (pos)\n            w[0] = st.r >> 3;\n        var opt = deo[lvl - 1];\n        var n = opt >> 13, c = opt & 8191;\n        var msk_1 = (1 << plvl) - 1;\n        //    prev 2-byte val map    curr 2-byte val map\n        var prev = st.p || new u16(32768), head = st.h || new u16(msk_1 + 1);\n        var bs1_1 = Math.ceil(plvl / 3), bs2_1 = 2 * bs1_1;\n        var hsh = function (i) { return (dat[i] ^ (dat[i + 1] << bs1_1) ^ (dat[i + 2] << bs2_1)) & msk_1; };\n        // 24576 is an arbitrary number of maximum symbols per block\n        // 424 buffer for last block\n        var syms = new i32(25000);\n        // length/literal freq   distance freq\n        var lf = new u16(288), df = new u16(32);\n        //  l/lcnt  exbits  index          l/lind  waitdx          blkpos\n        var lc_1 = 0, eb = 0, i = st.i || 0, li = 0, wi = st.w || 0, bs = 0;\n        for (; i + 2 < s; ++i) {\n            // hash value\n            var hv = hsh(i);\n            // index mod 32768    previous index mod\n            var imod = i & 32767, pimod = head[hv];\n            prev[imod] = pimod;\n            head[hv] = imod;\n            // We always should modify head and prev, but only add symbols if\n            // this data is not yet processed (\"wait\" for wait index)\n            if (wi <= i) {\n                // bytes remaining\n                var rem = s - i;\n                if ((lc_1 > 7000 || li > 24576) && (rem > 423 || !lst)) {\n                    pos = wblk(dat, w, 0, syms, lf, df, eb, li, bs, i - bs, pos);\n                    li = lc_1 = eb = 0, bs = i;\n                    for (var j = 0; j < 286; ++j)\n                        lf[j] = 0;\n                    for (var j = 0; j < 30; ++j)\n                        df[j] = 0;\n                }\n                //  len    dist   chain\n                var l = 2, d = 0, ch_1 = c, dif = imod - pimod & 32767;\n                if (rem > 2 && hv == hsh(i - dif)) {\n                    var maxn = Math.min(n, rem) - 1;\n                    var maxd = Math.min(32767, i);\n                    // max possible length\n                    // not capped at dif because decompressors implement \"rolling\" index population\n                    var ml = Math.min(258, rem);\n                    while (dif <= maxd && --ch_1 && imod != pimod) {\n                        if (dat[i + l] == dat[i + l - dif]) {\n                            var nl = 0;\n                            for (; nl < ml && dat[i + nl] == dat[i + nl - dif]; ++nl)\n                                ;\n                            if (nl > l) {\n                                l = nl, d = dif;\n                                // break out early when we reach \"nice\" (we are satisfied enough)\n                                if (nl > maxn)\n                                    break;\n                                // now, find the rarest 2-byte sequence within this\n                                // length of literals and search for that instead.\n                                // Much faster than just using the start\n                                var mmd = Math.min(dif, nl - 2);\n                                var md = 0;\n                                for (var j = 0; j < mmd; ++j) {\n                                    var ti = i - dif + j & 32767;\n                                    var pti = prev[ti];\n                                    var cd = ti - pti & 32767;\n                                    if (cd > md)\n                                        md = cd, pimod = ti;\n                                }\n                            }\n                        }\n                        // check the previous match\n                        imod = pimod, pimod = prev[imod];\n                        dif += imod - pimod & 32767;\n                    }\n                }\n                // d will be nonzero only when a match was found\n                if (d) {\n                    // store both dist and len data in one int32\n                    // Make sure this is recognized as a len/dist with 28th bit (2^28)\n                    syms[li++] = 268435456 | (revfl[l] << 18) | revfd[d];\n                    var lin = revfl[l] & 31, din = revfd[d] & 31;\n                    eb += fleb[lin] + fdeb[din];\n                    ++lf[257 + lin];\n                    ++df[din];\n                    wi = i + l;\n                    ++lc_1;\n                }\n                else {\n                    syms[li++] = dat[i];\n                    ++lf[dat[i]];\n                }\n            }\n        }\n        for (i = Math.max(i, wi); i < s; ++i) {\n            syms[li++] = dat[i];\n            ++lf[dat[i]];\n        }\n        pos = wblk(dat, w, lst, syms, lf, df, eb, li, bs, i - bs, pos);\n        if (!lst) {\n            st.r = (pos & 7) | w[(pos / 8) | 0] << 3;\n            // shft(pos) now 1 less if pos & 7 != 0\n            pos -= 7;\n            st.h = head, st.p = prev, st.i = i, st.w = wi;\n        }\n    }\n    else {\n        for (var i = st.w || 0; i < s + lst; i += 65535) {\n            // end\n            var e = i + 65535;\n            if (e >= s) {\n                // write final block\n                w[(pos / 8) | 0] = lst;\n                e = s;\n            }\n            pos = wfblk(w, pos + 1, dat.subarray(i, e));\n        }\n        st.i = s;\n    }\n    return slc(o, 0, pre + shft(pos) + post);\n};\n// CRC32 table\nvar crct = /*#__PURE__*/ (function () {\n    var t = new Int32Array(256);\n    for (var i = 0; i < 256; ++i) {\n        var c = i, k = 9;\n        while (--k)\n            c = ((c & 1) && -306674912) ^ (c >>> 1);\n        t[i] = c;\n    }\n    return t;\n})();\n// CRC32\nvar crc = function () {\n    var c = -1;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var cr = c;\n            for (var i = 0; i < d.length; ++i)\n                cr = crct[(cr & 255) ^ d[i]] ^ (cr >>> 8);\n            c = cr;\n        },\n        d: function () { return ~c; }\n    };\n};\n// Adler32\nvar adler = function () {\n    var a = 1, b = 0;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var n = a, m = b;\n            var l = d.length | 0;\n            for (var i = 0; i != l;) {\n                var e = Math.min(i + 2655, l);\n                for (; i < e; ++i)\n                    m += n += d[i];\n                n = (n & 65535) + 15 * (n >> 16), m = (m & 65535) + 15 * (m >> 16);\n            }\n            a = n, b = m;\n        },\n        d: function () {\n            a %= 65521, b %= 65521;\n            return (a & 255) << 24 | (a & 0xFF00) << 8 | (b & 255) << 8 | (b >> 8);\n        }\n    };\n};\n;\n// deflate with opts\nvar dopt = function (dat, opt, pre, post, st) {\n    if (!st) {\n        st = { l: 1 };\n        if (opt.dictionary) {\n            var dict = opt.dictionary.subarray(-32768);\n            var newDat = new u8(dict.length + dat.length);\n            newDat.set(dict);\n            newDat.set(dat, dict.length);\n            dat = newDat;\n            st.w = dict.length;\n        }\n    }\n    return dflt(dat, opt.level == null ? 6 : opt.level, opt.mem == null ? (st.l ? Math.ceil(Math.max(8, Math.min(13, Math.log(dat.length))) * 1.5) : 20) : (12 + opt.mem), pre, post, st);\n};\n// Walmart object spread\nvar mrg = function (a, b) {\n    var o = {};\n    for (var k in a)\n        o[k] = a[k];\n    for (var k in b)\n        o[k] = b[k];\n    return o;\n};\n// worker clone\n// This is possibly the craziest part of the entire codebase, despite how simple it may seem.\n// The only parameter to this function is a closure that returns an array of variables outside of the function scope.\n// We're going to try to figure out the variable names used in the closure as strings because that is crucial for workerization.\n// We will return an object mapping of true variable name to value (basically, the current scope as a JS object).\n// The reason we can't just use the original variable names is minifiers mangling the toplevel scope.\n// This took me three weeks to figure out how to do.\nvar wcln = function (fn, fnStr, td) {\n    var dt = fn();\n    var st = fn.toString();\n    var ks = st.slice(st.indexOf('[') + 1, st.lastIndexOf(']')).replace(/\\s+/g, '').split(',');\n    for (var i = 0; i < dt.length; ++i) {\n        var v = dt[i], k = ks[i];\n        if (typeof v == 'function') {\n            fnStr += ';' + k + '=';\n            var st_1 = v.toString();\n            if (v.prototype) {\n                // for global objects\n                if (st_1.indexOf('[native code]') != -1) {\n                    var spInd = st_1.indexOf(' ', 8) + 1;\n                    fnStr += st_1.slice(spInd, st_1.indexOf('(', spInd));\n                }\n                else {\n                    fnStr += st_1;\n                    for (var t in v.prototype)\n                        fnStr += ';' + k + '.prototype.' + t + '=' + v.prototype[t].toString();\n                }\n            }\n            else\n                fnStr += st_1;\n        }\n        else\n            td[k] = v;\n    }\n    return fnStr;\n};\nvar ch = [];\n// clone bufs\nvar cbfs = function (v) {\n    var tl = [];\n    for (var k in v) {\n        if (v[k].buffer) {\n            tl.push((v[k] = new v[k].constructor(v[k])).buffer);\n        }\n    }\n    return tl;\n};\n// use a worker to execute code\nvar wrkr = function (fns, init, id, cb) {\n    if (!ch[id]) {\n        var fnStr = '', td_1 = {}, m = fns.length - 1;\n        for (var i = 0; i < m; ++i)\n            fnStr = wcln(fns[i], fnStr, td_1);\n        ch[id] = { c: wcln(fns[m], fnStr, td_1), e: td_1 };\n    }\n    var td = mrg({}, ch[id].e);\n    return wk(ch[id].c + ';onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage=' + init.toString() + '}', id, td, cbfs(td), cb);\n};\n// base async inflate fn\nvar bInflt = function () { return [u8, u16, i32, fleb, fdeb, clim, fl, fd, flrm, fdrm, rev, ec, hMap, max, bits, bits16, shft, slc, err, inflt, inflateSync, pbf, gopt]; };\nvar bDflt = function () { return [u8, u16, i32, fleb, fdeb, clim, revfl, revfd, flm, flt, fdm, fdt, rev, deo, et, hMap, wbits, wbits16, hTree, ln, lc, clen, wfblk, wblk, shft, slc, dflt, dopt, deflateSync, pbf]; };\n// gzip extra\nvar gze = function () { return [gzh, gzhl, wbytes, crc, crct]; };\n// gunzip extra\nvar guze = function () { return [gzs, gzl]; };\n// zlib extra\nvar zle = function () { return [zlh, wbytes, adler]; };\n// unzlib extra\nvar zule = function () { return [zls]; };\n// post buf\nvar pbf = function (msg) { return postMessage(msg, [msg.buffer]); };\n// get opts\nvar gopt = function (o) { return o && {\n    out: o.size && new u8(o.size),\n    dictionary: o.dictionary\n}; };\n// async helper\nvar cbify = function (dat, opts, fns, init, id, cb) {\n    var w = wrkr(fns, init, id, function (err, dat) {\n        w.terminate();\n        cb(err, dat);\n    });\n    w.postMessage([dat, opts], opts.consume ? [dat.buffer] : []);\n    return function () { w.terminate(); };\n};\n// auto stream\nvar astrm = function (strm) {\n    strm.ondata = function (dat, final) { return postMessage([dat, final], [dat.buffer]); };\n    return function (ev) {\n        if (ev.data.length) {\n            strm.push(ev.data[0], ev.data[1]);\n            postMessage([ev.data[0].length]);\n        }\n        else\n            strm.flush();\n    };\n};\n// async stream attach\nvar astrmify = function (fns, strm, opts, init, id, flush, ext) {\n    var t;\n    var w = wrkr(fns, init, id, function (err, dat) {\n        if (err)\n            w.terminate(), strm.ondata.call(strm, err);\n        else if (!Array.isArray(dat))\n            ext(dat);\n        else if (dat.length == 1) {\n            strm.queuedSize -= dat[0];\n            if (strm.ondrain)\n                strm.ondrain(dat[0]);\n        }\n        else {\n            if (dat[1])\n                w.terminate();\n            strm.ondata.call(strm, err, dat[0], dat[1]);\n        }\n    });\n    w.postMessage(opts);\n    strm.queuedSize = 0;\n    strm.push = function (d, f) {\n        if (!strm.ondata)\n            err(5);\n        if (t)\n            strm.ondata(err(4, 0, 1), null, !!f);\n        strm.queuedSize += d.length;\n        w.postMessage([d, t = f], [d.buffer]);\n    };\n    strm.terminate = function () { w.terminate(); };\n    if (flush) {\n        strm.flush = function () { w.postMessage([]); };\n    }\n};\n// read 2 bytes\nvar b2 = function (d, b) { return d[b] | (d[b + 1] << 8); };\n// read 4 bytes\nvar b4 = function (d, b) { return (d[b] | (d[b + 1] << 8) | (d[b + 2] << 16) | (d[b + 3] << 24)) >>> 0; };\nvar b8 = function (d, b) { return b4(d, b) + (b4(d, b + 4) * 4294967296); };\n// write bytes\nvar wbytes = function (d, b, v) {\n    for (; v; ++b)\n        d[b] = v, v >>>= 8;\n};\n// gzip header\nvar gzh = function (c, o) {\n    var fn = o.filename;\n    c[0] = 31, c[1] = 139, c[2] = 8, c[8] = o.level < 2 ? 4 : o.level == 9 ? 2 : 0, c[9] = 3; // assume Unix\n    if (o.mtime != 0)\n        wbytes(c, 4, Math.floor(new Date(o.mtime || Date.now()) / 1000));\n    if (fn) {\n        c[3] = 8;\n        for (var i = 0; i <= fn.length; ++i)\n            c[i + 10] = fn.charCodeAt(i);\n    }\n};\n// gzip footer: -8 to -4 = CRC, -4 to -0 is length\n// gzip start\nvar gzs = function (d) {\n    if (d[0] != 31 || d[1] != 139 || d[2] != 8)\n        err(6, 'invalid gzip data');\n    var flg = d[3];\n    var st = 10;\n    if (flg & 4)\n        st += (d[10] | d[11] << 8) + 2;\n    for (var zs = (flg >> 3 & 1) + (flg >> 4 & 1); zs > 0; zs -= !d[st++])\n        ;\n    return st + (flg & 2);\n};\n// gzip length\nvar gzl = function (d) {\n    var l = d.length;\n    return (d[l - 4] | d[l - 3] << 8 | d[l - 2] << 16 | d[l - 1] << 24) >>> 0;\n};\n// gzip header length\nvar gzhl = function (o) { return 10 + (o.filename ? o.filename.length + 1 : 0); };\n// zlib header\nvar zlh = function (c, o) {\n    var lv = o.level, fl = lv == 0 ? 0 : lv < 6 ? 1 : lv == 9 ? 3 : 2;\n    c[0] = 120, c[1] = (fl << 6) | (o.dictionary && 32);\n    c[1] |= 31 - ((c[0] << 8) | c[1]) % 31;\n    if (o.dictionary) {\n        var h = adler();\n        h.p(o.dictionary);\n        wbytes(c, 2, h.d());\n    }\n};\n// zlib start\nvar zls = function (d, dict) {\n    if ((d[0] & 15) != 8 || (d[0] >> 4) > 7 || ((d[0] << 8 | d[1]) % 31))\n        err(6, 'invalid zlib data');\n    if ((d[1] >> 5 & 1) == +!dict)\n        err(6, 'invalid zlib data: ' + (d[1] & 32 ? 'need' : 'unexpected') + ' dictionary');\n    return (d[1] >> 3 & 4) + 2;\n};\nfunction StrmOpt(opts, cb) {\n    if (typeof opts == 'function')\n        cb = opts, opts = {};\n    this.ondata = cb;\n    return opts;\n}\n/**\n * Streaming DEFLATE compression\n */\nvar Deflate = /*#__PURE__*/ (function () {\n    function Deflate(opts, cb) {\n        if (typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        this.o = opts || {};\n        this.s = { l: 0, i: 32768, w: 32768, z: 32768 };\n        // Buffer length must always be 0 mod 32768 for index calculations to be correct when modifying head and prev\n        // 98304 = 32768 (lookback) + 65536 (common chunk size)\n        this.b = new u8(98304);\n        if (this.o.dictionary) {\n            var dict = this.o.dictionary.subarray(-32768);\n            this.b.set(dict, 32768 - dict.length);\n            this.s.i = 32768 - dict.length;\n        }\n    }\n    Deflate.prototype.p = function (c, f) {\n        this.ondata(dopt(c, this.o, 0, 0, this.s), f);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Deflate.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.s.l)\n            err(4);\n        var endLen = chunk.length + this.s.z;\n        if (endLen > this.b.length) {\n            if (endLen > 2 * this.b.length - 32768) {\n                var newBuf = new u8(endLen & -32768);\n                newBuf.set(this.b.subarray(0, this.s.z));\n                this.b = newBuf;\n            }\n            var split = this.b.length - this.s.z;\n            this.b.set(chunk.subarray(0, split), this.s.z);\n            this.s.z = this.b.length;\n            this.p(this.b, false);\n            this.b.set(this.b.subarray(-32768));\n            this.b.set(chunk.subarray(split), 32768);\n            this.s.z = chunk.length - split + 32768;\n            this.s.i = 32766, this.s.w = 32768;\n        }\n        else {\n            this.b.set(chunk, this.s.z);\n            this.s.z += chunk.length;\n        }\n        this.s.l = final & 1;\n        if (this.s.z > this.s.w + 8191 || final) {\n            this.p(this.b, final || false);\n            this.s.w = this.s.i, this.s.i -= 2;\n        }\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * deflated output for small inputs.\n     */\n    Deflate.prototype.flush = function () {\n        if (!this.ondata)\n            err(5);\n        if (this.s.l)\n            err(4);\n        this.p(this.b, false);\n        this.s.w = this.s.i, this.s.i -= 2;\n    };\n    return Deflate;\n}());\nexport { Deflate };\n/**\n * Asynchronous streaming DEFLATE compression\n */\nvar AsyncDeflate = /*#__PURE__*/ (function () {\n    function AsyncDeflate(opts, cb) {\n        astrmify([\n            bDflt,\n            function () { return [astrm, Deflate]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Deflate(ev.data);\n            onmessage = astrm(strm);\n        }, 6, 1);\n    }\n    return AsyncDeflate;\n}());\nexport { AsyncDeflate };\nexport function deflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n    ], function (ev) { return pbf(deflateSync(ev.data[0], ev.data[1])); }, 0, cb);\n}\n/**\n * Compresses data with DEFLATE without any wrapper\n * @param data The data to compress\n * @param opts The compression options\n * @returns The deflated version of the data\n */\nexport function deflateSync(data, opts) {\n    return dopt(data, opts || {}, 0, 0);\n}\n/**\n * Streaming DEFLATE decompression\n */\nvar Inflate = /*#__PURE__*/ (function () {\n    function Inflate(opts, cb) {\n        // no StrmOpt here to avoid adding to workerizer\n        if (typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        var dict = opts && opts.dictionary && opts.dictionary.subarray(-32768);\n        this.s = { i: 0, b: dict ? dict.length : 0 };\n        this.o = new u8(32768);\n        this.p = new u8(0);\n        if (dict)\n            this.o.set(dict);\n    }\n    Inflate.prototype.e = function (c) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        if (!this.p.length)\n            this.p = c;\n        else if (c.length) {\n            var n = new u8(this.p.length + c.length);\n            n.set(this.p), n.set(c, this.p.length), this.p = n;\n        }\n    };\n    Inflate.prototype.c = function (final) {\n        this.s.i = +(this.d = final || false);\n        var bts = this.s.b;\n        var dt = inflt(this.p, this.s, this.o);\n        this.ondata(slc(dt, bts, this.s.b), this.d);\n        this.o = slc(dt, this.s.b - 32768), this.s.b = this.o.length;\n        this.p = slc(this.p, (this.s.p / 8) | 0), this.s.p &= 7;\n    };\n    /**\n     * Pushes a chunk to be inflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the final chunk\n     */\n    Inflate.prototype.push = function (chunk, final) {\n        this.e(chunk), this.c(final);\n    };\n    return Inflate;\n}());\nexport { Inflate };\n/**\n * Asynchronous streaming DEFLATE decompression\n */\nvar AsyncInflate = /*#__PURE__*/ (function () {\n    function AsyncInflate(opts, cb) {\n        astrmify([\n            bInflt,\n            function () { return [astrm, Inflate]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Inflate(ev.data);\n            onmessage = astrm(strm);\n        }, 7, 0);\n    }\n    return AsyncInflate;\n}());\nexport { AsyncInflate };\nexport function inflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt\n    ], function (ev) { return pbf(inflateSync(ev.data[0], gopt(ev.data[1]))); }, 1, cb);\n}\n/**\n * Expands DEFLATE data with no wrapper\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function inflateSync(data, opts) {\n    return inflt(data, { i: 2 }, opts && opts.out, opts && opts.dictionary);\n}\n// before you yell at me for not just using extends, my reason is that TS inheritance is hard to workerize.\n/**\n * Streaming GZIP compression\n */\nvar Gzip = /*#__PURE__*/ (function () {\n    function Gzip(opts, cb) {\n        this.c = crc();\n        this.l = 0;\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gzip.prototype.push = function (chunk, final) {\n        this.c.p(chunk);\n        this.l += chunk.length;\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Gzip.prototype.p = function (c, f) {\n        var raw = dopt(c, this.o, this.v && gzhl(this.o), f && 8, this.s);\n        if (this.v)\n            gzh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 8, this.c.d()), wbytes(raw, raw.length - 4, this.l);\n        this.ondata(raw, f);\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * GZIPped output for small inputs.\n     */\n    Gzip.prototype.flush = function () {\n        Deflate.prototype.flush.call(this);\n    };\n    return Gzip;\n}());\nexport { Gzip };\n/**\n * Asynchronous streaming GZIP compression\n */\nvar AsyncGzip = /*#__PURE__*/ (function () {\n    function AsyncGzip(opts, cb) {\n        astrmify([\n            bDflt,\n            gze,\n            function () { return [astrm, Deflate, Gzip]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Gzip(ev.data);\n            onmessage = astrm(strm);\n        }, 8, 1);\n    }\n    return AsyncGzip;\n}());\nexport { AsyncGzip };\nexport function gzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        gze,\n        function () { return [gzipSync]; }\n    ], function (ev) { return pbf(gzipSync(ev.data[0], ev.data[1])); }, 2, cb);\n}\n/**\n * Compresses data with GZIP\n * @param data The data to compress\n * @param opts The compression options\n * @returns The gzipped version of the data\n */\nexport function gzipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var c = crc(), l = data.length;\n    c.p(data);\n    var d = dopt(data, opts, gzhl(opts), 8), s = d.length;\n    return gzh(d, opts), wbytes(d, s - 8, c.d()), wbytes(d, s - 4, l), d;\n}\n/**\n * Streaming single or multi-member GZIP decompression\n */\nvar Gunzip = /*#__PURE__*/ (function () {\n    function Gunzip(opts, cb) {\n        this.v = 1;\n        this.r = 0;\n        Inflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GUNZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gunzip.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        this.r += chunk.length;\n        if (this.v) {\n            var p = this.p.subarray(this.v - 1);\n            var s = p.length > 3 ? gzs(p) : 4;\n            if (s > p.length) {\n                if (!final)\n                    return;\n            }\n            else if (this.v > 1 && this.onmember) {\n                this.onmember(this.r - p.length);\n            }\n            this.p = p.subarray(s), this.v = 0;\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n        // process concatenated GZIP\n        if (this.s.f && !this.s.l && !final) {\n            this.v = shft(this.s.p) + 9;\n            this.s = { i: 0 };\n            this.o = new u8(0);\n            this.push(new u8(0), final);\n        }\n    };\n    return Gunzip;\n}());\nexport { Gunzip };\n/**\n * Asynchronous streaming single or multi-member GZIP decompression\n */\nvar AsyncGunzip = /*#__PURE__*/ (function () {\n    function AsyncGunzip(opts, cb) {\n        var _this = this;\n        astrmify([\n            bInflt,\n            guze,\n            function () { return [astrm, Inflate, Gunzip]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Gunzip(ev.data);\n            strm.onmember = function (offset) { return postMessage(offset); };\n            onmessage = astrm(strm);\n        }, 9, 0, function (offset) { return _this.onmember && _this.onmember(offset); });\n    }\n    return AsyncGunzip;\n}());\nexport { AsyncGunzip };\nexport function gunzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        guze,\n        function () { return [gunzipSync]; }\n    ], function (ev) { return pbf(gunzipSync(ev.data[0], ev.data[1])); }, 3, cb);\n}\n/**\n * Expands GZIP data\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function gunzipSync(data, opts) {\n    var st = gzs(data);\n    if (st + 8 > data.length)\n        err(6, 'invalid gzip data');\n    return inflt(data.subarray(st, -8), { i: 2 }, opts && opts.out || new u8(gzl(data)), opts && opts.dictionary);\n}\n/**\n * Streaming Zlib compression\n */\nvar Zlib = /*#__PURE__*/ (function () {\n    function Zlib(opts, cb) {\n        this.c = adler();\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be zlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Zlib.prototype.push = function (chunk, final) {\n        this.c.p(chunk);\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Zlib.prototype.p = function (c, f) {\n        var raw = dopt(c, this.o, this.v && (this.o.dictionary ? 6 : 2), f && 4, this.s);\n        if (this.v)\n            zlh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 4, this.c.d());\n        this.ondata(raw, f);\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * zlibbed output for small inputs.\n     */\n    Zlib.prototype.flush = function () {\n        Deflate.prototype.flush.call(this);\n    };\n    return Zlib;\n}());\nexport { Zlib };\n/**\n * Asynchronous streaming Zlib compression\n */\nvar AsyncZlib = /*#__PURE__*/ (function () {\n    function AsyncZlib(opts, cb) {\n        astrmify([\n            bDflt,\n            zle,\n            function () { return [astrm, Deflate, Zlib]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Zlib(ev.data);\n            onmessage = astrm(strm);\n        }, 10, 1);\n    }\n    return AsyncZlib;\n}());\nexport { AsyncZlib };\nexport function zlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        zle,\n        function () { return [zlibSync]; }\n    ], function (ev) { return pbf(zlibSync(ev.data[0], ev.data[1])); }, 4, cb);\n}\n/**\n * Compress data with Zlib\n * @param data The data to compress\n * @param opts The compression options\n * @returns The zlib-compressed version of the data\n */\nexport function zlibSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var a = adler();\n    a.p(data);\n    var d = dopt(data, opts, opts.dictionary ? 6 : 2, 4);\n    return zlh(d, opts), wbytes(d, d.length - 4, a.d()), d;\n}\n/**\n * Streaming Zlib decompression\n */\nvar Unzlib = /*#__PURE__*/ (function () {\n    function Unzlib(opts, cb) {\n        Inflate.call(this, opts, cb);\n        this.v = opts && opts.dictionary ? 2 : 1;\n    }\n    /**\n     * Pushes a chunk to be unzlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzlib.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            if (this.p.length < 6 && !final)\n                return;\n            this.p = this.p.subarray(zls(this.p, this.v - 1)), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 4)\n                err(6, 'invalid zlib data');\n            this.p = this.p.subarray(0, -4);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Unzlib;\n}());\nexport { Unzlib };\n/**\n * Asynchronous streaming Zlib decompression\n */\nvar AsyncUnzlib = /*#__PURE__*/ (function () {\n    function AsyncUnzlib(opts, cb) {\n        astrmify([\n            bInflt,\n            zule,\n            function () { return [astrm, Inflate, Unzlib]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Unzlib(ev.data);\n            onmessage = astrm(strm);\n        }, 11, 0);\n    }\n    return AsyncUnzlib;\n}());\nexport { AsyncUnzlib };\nexport function unzlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        zule,\n        function () { return [unzlibSync]; }\n    ], function (ev) { return pbf(unzlibSync(ev.data[0], gopt(ev.data[1]))); }, 5, cb);\n}\n/**\n * Expands Zlib data\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function unzlibSync(data, opts) {\n    return inflt(data.subarray(zls(data, opts && opts.dictionary), -4), { i: 2 }, opts && opts.out, opts && opts.dictionary);\n}\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzip as compress, AsyncGzip as AsyncCompress };\nexport { gzipSync as compressSync, Gzip as Compress };\n/**\n * Streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar Decompress = /*#__PURE__*/ (function () {\n    function Decompress(opts, cb) {\n        this.o = StrmOpt.call(this, opts, cb) || {};\n        this.G = Gunzip;\n        this.I = Inflate;\n        this.Z = Unzlib;\n    }\n    // init substream\n    // overriden by AsyncDecompress\n    Decompress.prototype.i = function () {\n        var _this = this;\n        this.s.ondata = function (dat, final) {\n            _this.ondata(dat, final);\n        };\n    };\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Decompress.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (!this.s) {\n            if (this.p && this.p.length) {\n                var n = new u8(this.p.length + chunk.length);\n                n.set(this.p), n.set(chunk, this.p.length);\n            }\n            else\n                this.p = chunk;\n            if (this.p.length > 2) {\n                this.s = (this.p[0] == 31 && this.p[1] == 139 && this.p[2] == 8)\n                    ? new this.G(this.o)\n                    : ((this.p[0] & 15) != 8 || (this.p[0] >> 4) > 7 || ((this.p[0] << 8 | this.p[1]) % 31))\n                        ? new this.I(this.o)\n                        : new this.Z(this.o);\n                this.i();\n                this.s.push(this.p, final);\n                this.p = null;\n            }\n        }\n        else\n            this.s.push(chunk, final);\n    };\n    return Decompress;\n}());\nexport { Decompress };\n/**\n * Asynchronous streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar AsyncDecompress = /*#__PURE__*/ (function () {\n    function AsyncDecompress(opts, cb) {\n        Decompress.call(this, opts, cb);\n        this.queuedSize = 0;\n        this.G = AsyncGunzip;\n        this.I = AsyncInflate;\n        this.Z = AsyncUnzlib;\n    }\n    AsyncDecompress.prototype.i = function () {\n        var _this = this;\n        this.s.ondata = function (err, dat, final) {\n            _this.ondata(err, dat, final);\n        };\n        this.s.ondrain = function (size) {\n            _this.queuedSize -= size;\n            if (_this.ondrain)\n                _this.ondrain(size);\n        };\n    };\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncDecompress.prototype.push = function (chunk, final) {\n        this.queuedSize += chunk.length;\n        Decompress.prototype.push.call(this, chunk, final);\n    };\n    return AsyncDecompress;\n}());\nexport { AsyncDecompress };\nexport function decompress(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzip(data, opts, cb)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflate(data, opts, cb)\n            : unzlib(data, opts, cb);\n}\n/**\n * Expands compressed GZIP, Zlib, or raw DEFLATE data, automatically detecting the format\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function decompressSync(data, opts) {\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzipSync(data, opts)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflateSync(data, opts)\n            : unzlibSync(data, opts);\n}\n// flatten a directory structure\nvar fltn = function (d, p, t, o) {\n    for (var k in d) {\n        var val = d[k], n = p + k, op = o;\n        if (Array.isArray(val))\n            op = mrg(o, val[1]), val = val[0];\n        if (val instanceof u8)\n            t[n] = [val, op];\n        else {\n            t[n += '/'] = [new u8(0), op];\n            fltn(val, n, t, o);\n        }\n    }\n};\n// text encoder\nvar te = typeof TextEncoder != 'undefined' && /*#__PURE__*/ new TextEncoder();\n// text decoder\nvar td = typeof TextDecoder != 'undefined' && /*#__PURE__*/ new TextDecoder();\n// text decoder stream\nvar tds = 0;\ntry {\n    td.decode(et, { stream: true });\n    tds = 1;\n}\ncatch (e) { }\n// decode UTF8\nvar dutf8 = function (d) {\n    for (var r = '', i = 0;;) {\n        var c = d[i++];\n        var eb = (c > 127) + (c > 223) + (c > 239);\n        if (i + eb > d.length)\n            return { s: r, r: slc(d, i - 1) };\n        if (!eb)\n            r += String.fromCharCode(c);\n        else if (eb == 3) {\n            c = ((c & 15) << 18 | (d[i++] & 63) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63)) - 65536,\n                r += String.fromCharCode(55296 | (c >> 10), 56320 | (c & 1023));\n        }\n        else if (eb & 1)\n            r += String.fromCharCode((c & 31) << 6 | (d[i++] & 63));\n        else\n            r += String.fromCharCode((c & 15) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63));\n    }\n};\n/**\n * Streaming UTF-8 decoding\n */\nvar DecodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is decoded\n     */\n    function DecodeUTF8(cb) {\n        this.ondata = cb;\n        if (tds)\n            this.t = new TextDecoder();\n        else\n            this.p = et;\n    }\n    /**\n     * Pushes a chunk to be decoded from UTF-8 binary\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    DecodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        final = !!final;\n        if (this.t) {\n            this.ondata(this.t.decode(chunk, { stream: true }), final);\n            if (final) {\n                if (this.t.decode().length)\n                    err(8);\n                this.t = null;\n            }\n            return;\n        }\n        if (!this.p)\n            err(4);\n        var dat = new u8(this.p.length + chunk.length);\n        dat.set(this.p);\n        dat.set(chunk, this.p.length);\n        var _a = dutf8(dat), s = _a.s, r = _a.r;\n        if (final) {\n            if (r.length)\n                err(8);\n            this.p = null;\n        }\n        else\n            this.p = r;\n        this.ondata(s, final);\n    };\n    return DecodeUTF8;\n}());\nexport { DecodeUTF8 };\n/**\n * Streaming UTF-8 encoding\n */\nvar EncodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is encoded\n     */\n    function EncodeUTF8(cb) {\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be encoded to UTF-8\n     * @param chunk The string data to push\n     * @param final Whether this is the last chunk\n     */\n    EncodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        this.ondata(strToU8(chunk), this.d = final || false);\n    };\n    return EncodeUTF8;\n}());\nexport { EncodeUTF8 };\n/**\n * Converts a string into a Uint8Array for use with compression/decompression methods\n * @param str The string to encode\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless decoding a binary string.\n * @returns The string encoded in UTF-8/Latin-1 binary\n */\nexport function strToU8(str, latin1) {\n    if (latin1) {\n        var ar_1 = new u8(str.length);\n        for (var i = 0; i < str.length; ++i)\n            ar_1[i] = str.charCodeAt(i);\n        return ar_1;\n    }\n    if (te)\n        return te.encode(str);\n    var l = str.length;\n    var ar = new u8(str.length + (str.length >> 1));\n    var ai = 0;\n    var w = function (v) { ar[ai++] = v; };\n    for (var i = 0; i < l; ++i) {\n        if (ai + 5 > ar.length) {\n            var n = new u8(ai + 8 + ((l - i) << 1));\n            n.set(ar);\n            ar = n;\n        }\n        var c = str.charCodeAt(i);\n        if (c < 128 || latin1)\n            w(c);\n        else if (c < 2048)\n            w(192 | (c >> 6)), w(128 | (c & 63));\n        else if (c > 55295 && c < 57344)\n            c = 65536 + (c & 1023 << 10) | (str.charCodeAt(++i) & 1023),\n                w(240 | (c >> 18)), w(128 | ((c >> 12) & 63)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n        else\n            w(224 | (c >> 12)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n    }\n    return slc(ar, 0, ai);\n}\n/**\n * Converts a Uint8Array to a string\n * @param dat The data to decode to string\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless encoding to binary string.\n * @returns The original UTF-8/Latin-1 string\n */\nexport function strFromU8(dat, latin1) {\n    if (latin1) {\n        var r = '';\n        for (var i = 0; i < dat.length; i += 16384)\n            r += String.fromCharCode.apply(null, dat.subarray(i, i + 16384));\n        return r;\n    }\n    else if (td) {\n        return td.decode(dat);\n    }\n    else {\n        var _a = dutf8(dat), s = _a.s, r = _a.r;\n        if (r.length)\n            err(8);\n        return s;\n    }\n}\n;\n// deflate bit flag\nvar dbf = function (l) { return l == 1 ? 3 : l < 6 ? 2 : l == 9 ? 1 : 0; };\n// skip local zip header\nvar slzh = function (d, b) { return b + 30 + b2(d, b + 26) + b2(d, b + 28); };\n// read zip header\nvar zh = function (d, b, z) {\n    var fnl = b2(d, b + 28), fn = strFromU8(d.subarray(b + 46, b + 46 + fnl), !(b2(d, b + 8) & 2048)), es = b + 46 + fnl, bs = b4(d, b + 20);\n    var _a = z && bs == 4294967295 ? z64e(d, es) : [bs, b4(d, b + 24), b4(d, b + 42)], sc = _a[0], su = _a[1], off = _a[2];\n    return [b2(d, b + 10), sc, su, fn, es + b2(d, b + 30) + b2(d, b + 32), off];\n};\n// read zip64 extra field\nvar z64e = function (d, b) {\n    for (; b2(d, b) != 1; b += 4 + b2(d, b + 2))\n        ;\n    return [b8(d, b + 12), b8(d, b + 4), b8(d, b + 20)];\n};\n// extra field length\nvar exfl = function (ex) {\n    var le = 0;\n    if (ex) {\n        for (var k in ex) {\n            var l = ex[k].length;\n            if (l > 65535)\n                err(9);\n            le += l + 4;\n        }\n    }\n    return le;\n};\n// write zip header\nvar wzh = function (d, b, f, fn, u, c, ce, co) {\n    var fl = fn.length, ex = f.extra, col = co && co.length;\n    var exl = exfl(ex);\n    wbytes(d, b, ce != null ? 0x2014B50 : 0x4034B50), b += 4;\n    if (ce != null)\n        d[b++] = 20, d[b++] = f.os;\n    d[b] = 20, b += 2; // spec compliance? what's that?\n    d[b++] = (f.flag << 1) | (c < 0 && 8), d[b++] = u && 8;\n    d[b++] = f.compression & 255, d[b++] = f.compression >> 8;\n    var dt = new Date(f.mtime == null ? Date.now() : f.mtime), y = dt.getFullYear() - 1980;\n    if (y < 0 || y > 119)\n        err(10);\n    wbytes(d, b, (y << 25) | ((dt.getMonth() + 1) << 21) | (dt.getDate() << 16) | (dt.getHours() << 11) | (dt.getMinutes() << 5) | (dt.getSeconds() >> 1)), b += 4;\n    if (c != -1) {\n        wbytes(d, b, f.crc);\n        wbytes(d, b + 4, c < 0 ? -c - 2 : c);\n        wbytes(d, b + 8, f.size);\n    }\n    wbytes(d, b + 12, fl);\n    wbytes(d, b + 14, exl), b += 16;\n    if (ce != null) {\n        wbytes(d, b, col);\n        wbytes(d, b + 6, f.attrs);\n        wbytes(d, b + 10, ce), b += 14;\n    }\n    d.set(fn, b);\n    b += fl;\n    if (exl) {\n        for (var k in ex) {\n            var exf = ex[k], l = exf.length;\n            wbytes(d, b, +k);\n            wbytes(d, b + 2, l);\n            d.set(exf, b + 4), b += 4 + l;\n        }\n    }\n    if (col)\n        d.set(co, b), b += col;\n    return b;\n};\n// write zip footer (end of central directory)\nvar wzf = function (o, b, c, d, e) {\n    wbytes(o, b, 0x6054B50); // skip disk\n    wbytes(o, b + 8, c);\n    wbytes(o, b + 10, c);\n    wbytes(o, b + 12, d);\n    wbytes(o, b + 16, e);\n};\n/**\n * A pass-through stream to keep data uncompressed in a ZIP archive.\n */\nvar ZipPassThrough = /*#__PURE__*/ (function () {\n    /**\n     * Creates a pass-through stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     */\n    function ZipPassThrough(filename) {\n        this.filename = filename;\n        this.c = crc();\n        this.size = 0;\n        this.compression = 0;\n    }\n    /**\n     * Processes a chunk and pushes to the output stream. You can override this\n     * method in a subclass for custom behavior, but by default this passes\n     * the data through. You must call this.ondata(err, chunk, final) at some\n     * point in this method.\n     * @param chunk The chunk to process\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.process = function (chunk, final) {\n        this.ondata(null, chunk, final);\n    };\n    /**\n     * Pushes a chunk to be added. If you are subclassing this with a custom\n     * compression algorithm, note that you must push data from the source\n     * file only, pre-compression.\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        this.c.p(chunk);\n        this.size += chunk.length;\n        if (final)\n            this.crc = this.c.d();\n        this.process(chunk, final || false);\n    };\n    return ZipPassThrough;\n}());\nexport { ZipPassThrough };\n// I don't extend because TypeScript extension adds 1kB of runtime bloat\n/**\n * Streaming DEFLATE compression for ZIP archives. Prefer using AsyncZipDeflate\n * for better performance\n */\nvar ZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function ZipDeflate(filename, opts) {\n        var _this = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new Deflate(opts, function (dat, final) {\n            _this.ondata(null, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n    }\n    ZipDeflate.prototype.process = function (chunk, final) {\n        try {\n            this.d.push(chunk, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return ZipDeflate;\n}());\nexport { ZipDeflate };\n/**\n * Asynchronous streaming DEFLATE compression for ZIP archives\n */\nvar AsyncZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function AsyncZipDeflate(filename, opts) {\n        var _this = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new AsyncDeflate(opts, function (err, dat, final) {\n            _this.ondata(err, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n        this.terminate = this.d.terminate;\n    }\n    AsyncZipDeflate.prototype.process = function (chunk, final) {\n        this.d.push(chunk, final);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return AsyncZipDeflate;\n}());\nexport { AsyncZipDeflate };\n// TODO: Better tree shaking\n/**\n * A zippable archive to which files can incrementally be added\n */\nvar Zip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an empty ZIP archive to which files can be added\n     * @param cb The callback to call whenever data for the generated ZIP archive\n     *           is available\n     */\n    function Zip(cb) {\n        this.ondata = cb;\n        this.u = [];\n        this.d = 1;\n    }\n    /**\n     * Adds a file to the ZIP archive\n     * @param file The file stream to add\n     */\n    Zip.prototype.add = function (file) {\n        var _this = this;\n        if (!this.ondata)\n            err(5);\n        // finishing or finished\n        if (this.d & 2)\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, false);\n        else {\n            var f = strToU8(file.filename), fl_1 = f.length;\n            var com = file.comment, o = com && strToU8(com);\n            var u = fl_1 != file.filename.length || (o && (com.length != o.length));\n            var hl_1 = fl_1 + exfl(file.extra) + 30;\n            if (fl_1 > 65535)\n                this.ondata(err(11, 0, 1), null, false);\n            var header = new u8(hl_1);\n            wzh(header, 0, file, f, u, -1);\n            var chks_1 = [header];\n            var pAll_1 = function () {\n                for (var _i = 0, chks_2 = chks_1; _i < chks_2.length; _i++) {\n                    var chk = chks_2[_i];\n                    _this.ondata(null, chk, false);\n                }\n                chks_1 = [];\n            };\n            var tr_1 = this.d;\n            this.d = 0;\n            var ind_1 = this.u.length;\n            var uf_1 = mrg(file, {\n                f: f,\n                u: u,\n                o: o,\n                t: function () {\n                    if (file.terminate)\n                        file.terminate();\n                },\n                r: function () {\n                    pAll_1();\n                    if (tr_1) {\n                        var nxt = _this.u[ind_1 + 1];\n                        if (nxt)\n                            nxt.r();\n                        else\n                            _this.d = 1;\n                    }\n                    tr_1 = 1;\n                }\n            });\n            var cl_1 = 0;\n            file.ondata = function (err, dat, final) {\n                if (err) {\n                    _this.ondata(err, dat, final);\n                    _this.terminate();\n                }\n                else {\n                    cl_1 += dat.length;\n                    chks_1.push(dat);\n                    if (final) {\n                        var dd = new u8(16);\n                        wbytes(dd, 0, 0x8074B50);\n                        wbytes(dd, 4, file.crc);\n                        wbytes(dd, 8, cl_1);\n                        wbytes(dd, 12, file.size);\n                        chks_1.push(dd);\n                        uf_1.c = cl_1, uf_1.b = hl_1 + cl_1 + 16, uf_1.crc = file.crc, uf_1.size = file.size;\n                        if (tr_1)\n                            uf_1.r();\n                        tr_1 = 1;\n                    }\n                    else if (tr_1)\n                        pAll_1();\n                }\n            };\n            this.u.push(uf_1);\n        }\n    };\n    /**\n     * Ends the process of adding files and prepares to emit the final chunks.\n     * This *must* be called after adding all desired files for the resulting\n     * ZIP file to work properly.\n     */\n    Zip.prototype.end = function () {\n        var _this = this;\n        if (this.d & 2) {\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, true);\n            return;\n        }\n        if (this.d)\n            this.e();\n        else\n            this.u.push({\n                r: function () {\n                    if (!(_this.d & 1))\n                        return;\n                    _this.u.splice(-1, 1);\n                    _this.e();\n                },\n                t: function () { }\n            });\n        this.d = 3;\n    };\n    Zip.prototype.e = function () {\n        var bt = 0, l = 0, tl = 0;\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            tl += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0);\n        }\n        var out = new u8(tl + 22);\n        for (var _b = 0, _c = this.u; _b < _c.length; _b++) {\n            var f = _c[_b];\n            wzh(out, bt, f, f.f, f.u, -f.c - 2, l, f.o);\n            bt += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0), l += f.b;\n        }\n        wzf(out, bt, this.u.length, tl, l);\n        this.ondata(null, out, true);\n        this.d = 2;\n    };\n    /**\n     * A method to terminate any internal workers used by the stream. Subsequent\n     * calls to add() will fail.\n     */\n    Zip.prototype.terminate = function () {\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            f.t();\n        }\n        this.d = 2;\n    };\n    return Zip;\n}());\nexport { Zip };\nexport function zip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var r = {};\n    fltn(data, '', r, opts);\n    var k = Object.keys(r);\n    var lft = k.length, o = 0, tot = 0;\n    var slft = lft, files = new Array(lft);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var cbf = function () {\n        var out = new u8(tot + 22), oe = o, cdl = tot - o;\n        tot = 0;\n        for (var i = 0; i < slft; ++i) {\n            var f = files[i];\n            try {\n                var l = f.c.length;\n                wzh(out, tot, f, f.f, f.u, l);\n                var badd = 30 + f.f.length + exfl(f.extra);\n                var loc = tot + badd;\n                out.set(f.c, loc);\n                wzh(out, o, f, f.f, f.u, l, tot, f.m), o += 16 + badd + (f.m ? f.m.length : 0), tot = loc + l;\n            }\n            catch (e) {\n                return cbd(e, null);\n            }\n        }\n        wzf(out, o, files.length, cdl, oe);\n        cbd(null, out);\n    };\n    if (!lft)\n        cbf();\n    var _loop_1 = function (i) {\n        var fn = k[i];\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var c = crc(), size = file.length;\n        c.p(file);\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        var compression = p.level == 0 ? 0 : 8;\n        var cbl = function (e, d) {\n            if (e) {\n                tAll();\n                cbd(e, null);\n            }\n            else {\n                var l = d.length;\n                files[i] = mrg(p, {\n                    size: size,\n                    crc: c.d(),\n                    c: d,\n                    f: f,\n                    m: m,\n                    u: s != fn.length || (m && (com.length != ms)),\n                    compression: compression\n                });\n                o += 30 + s + exl + l;\n                tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n                if (!--lft)\n                    cbf();\n            }\n        };\n        if (s > 65535)\n            cbl(err(11, 0, 1), null);\n        if (!compression)\n            cbl(null, file);\n        else if (size < 160000) {\n            try {\n                cbl(null, deflateSync(file, p));\n            }\n            catch (e) {\n                cbl(e, null);\n            }\n        }\n        else\n            term.push(deflate(file, p, cbl));\n    };\n    // Cannot use lft because it can decrease\n    for (var i = 0; i < slft; ++i) {\n        _loop_1(i);\n    }\n    return tAll;\n}\n/**\n * Synchronously creates a ZIP file. Prefer using `zip` for better performance\n * with more than one file.\n * @param data The directory structure for the ZIP archive\n * @param opts The main options, merged with per-file options\n * @returns The generated ZIP archive\n */\nexport function zipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var r = {};\n    var files = [];\n    fltn(data, '', r, opts);\n    var o = 0;\n    var tot = 0;\n    for (var fn in r) {\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var compression = p.level == 0 ? 0 : 8;\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        if (s > 65535)\n            err(11);\n        var d = compression ? deflateSync(file, p) : file, l = d.length;\n        var c = crc();\n        c.p(file);\n        files.push(mrg(p, {\n            size: file.length,\n            crc: c.d(),\n            c: d,\n            f: f,\n            m: m,\n            u: s != fn.length || (m && (com.length != ms)),\n            o: o,\n            compression: compression\n        }));\n        o += 30 + s + exl + l;\n        tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n    }\n    var out = new u8(tot + 22), oe = o, cdl = tot - o;\n    for (var i = 0; i < files.length; ++i) {\n        var f = files[i];\n        wzh(out, f.o, f, f.f, f.u, f.c.length);\n        var badd = 30 + f.f.length + exfl(f.extra);\n        out.set(f.c, f.o + badd);\n        wzh(out, o, f, f.f, f.u, f.c.length, f.o, f.m), o += 16 + badd + (f.m ? f.m.length : 0);\n    }\n    wzf(out, o, files.length, cdl, oe);\n    return out;\n}\n/**\n * Streaming pass-through decompression for ZIP archives\n */\nvar UnzipPassThrough = /*#__PURE__*/ (function () {\n    function UnzipPassThrough() {\n    }\n    UnzipPassThrough.prototype.push = function (data, final) {\n        this.ondata(null, data, final);\n    };\n    UnzipPassThrough.compression = 0;\n    return UnzipPassThrough;\n}());\nexport { UnzipPassThrough };\n/**\n * Streaming DEFLATE decompression for ZIP archives. Prefer AsyncZipInflate for\n * better performance.\n */\nvar UnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function UnzipInflate() {\n        var _this = this;\n        this.i = new Inflate(function (dat, final) {\n            _this.ondata(null, dat, final);\n        });\n    }\n    UnzipInflate.prototype.push = function (data, final) {\n        try {\n            this.i.push(data, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    UnzipInflate.compression = 8;\n    return UnzipInflate;\n}());\nexport { UnzipInflate };\n/**\n * Asynchronous streaming DEFLATE decompression for ZIP archives\n */\nvar AsyncUnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function AsyncUnzipInflate(_, sz) {\n        var _this = this;\n        if (sz < 320000) {\n            this.i = new Inflate(function (dat, final) {\n                _this.ondata(null, dat, final);\n            });\n        }\n        else {\n            this.i = new AsyncInflate(function (err, dat, final) {\n                _this.ondata(err, dat, final);\n            });\n            this.terminate = this.i.terminate;\n        }\n    }\n    AsyncUnzipInflate.prototype.push = function (data, final) {\n        if (this.i.terminate)\n            data = slc(data, 0);\n        this.i.push(data, final);\n    };\n    AsyncUnzipInflate.compression = 8;\n    return AsyncUnzipInflate;\n}());\nexport { AsyncUnzipInflate };\n/**\n * A ZIP archive decompression stream that emits files as they are discovered\n */\nvar Unzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a ZIP decompression stream\n     * @param cb The callback to call whenever a file in the ZIP archive is found\n     */\n    function Unzip(cb) {\n        this.onfile = cb;\n        this.k = [];\n        this.o = {\n            0: UnzipPassThrough\n        };\n        this.p = et;\n    }\n    /**\n     * Pushes a chunk to be unzipped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzip.prototype.push = function (chunk, final) {\n        var _this = this;\n        if (!this.onfile)\n            err(5);\n        if (!this.p)\n            err(4);\n        if (this.c > 0) {\n            var len = Math.min(this.c, chunk.length);\n            var toAdd = chunk.subarray(0, len);\n            this.c -= len;\n            if (this.d)\n                this.d.push(toAdd, !this.c);\n            else\n                this.k[0].push(toAdd);\n            chunk = chunk.subarray(len);\n            if (chunk.length)\n                return this.push(chunk, final);\n        }\n        else {\n            var f = 0, i = 0, is = void 0, buf = void 0;\n            if (!this.p.length)\n                buf = chunk;\n            else if (!chunk.length)\n                buf = this.p;\n            else {\n                buf = new u8(this.p.length + chunk.length);\n                buf.set(this.p), buf.set(chunk, this.p.length);\n            }\n            var l = buf.length, oc = this.c, add = oc && this.d;\n            var _loop_2 = function () {\n                var _a;\n                var sig = b4(buf, i);\n                if (sig == 0x4034B50) {\n                    f = 1, is = i;\n                    this_1.d = null;\n                    this_1.c = 0;\n                    var bf = b2(buf, i + 6), cmp_1 = b2(buf, i + 8), u = bf & 2048, dd = bf & 8, fnl = b2(buf, i + 26), es = b2(buf, i + 28);\n                    if (l > i + 30 + fnl + es) {\n                        var chks_3 = [];\n                        this_1.k.unshift(chks_3);\n                        f = 2;\n                        var sc_1 = b4(buf, i + 18), su_1 = b4(buf, i + 22);\n                        var fn_1 = strFromU8(buf.subarray(i + 30, i += 30 + fnl), !u);\n                        if (sc_1 == 4294967295) {\n                            _a = dd ? [-2] : z64e(buf, i), sc_1 = _a[0], su_1 = _a[1];\n                        }\n                        else if (dd)\n                            sc_1 = -1;\n                        i += es;\n                        this_1.c = sc_1;\n                        var d_1;\n                        var file_1 = {\n                            name: fn_1,\n                            compression: cmp_1,\n                            start: function () {\n                                if (!file_1.ondata)\n                                    err(5);\n                                if (!sc_1)\n                                    file_1.ondata(null, et, true);\n                                else {\n                                    var ctr = _this.o[cmp_1];\n                                    if (!ctr)\n                                        file_1.ondata(err(14, 'unknown compression type ' + cmp_1, 1), null, false);\n                                    d_1 = sc_1 < 0 ? new ctr(fn_1) : new ctr(fn_1, sc_1, su_1);\n                                    d_1.ondata = function (err, dat, final) { file_1.ondata(err, dat, final); };\n                                    for (var _i = 0, chks_4 = chks_3; _i < chks_4.length; _i++) {\n                                        var dat = chks_4[_i];\n                                        d_1.push(dat, false);\n                                    }\n                                    if (_this.k[0] == chks_3 && _this.c)\n                                        _this.d = d_1;\n                                    else\n                                        d_1.push(et, true);\n                                }\n                            },\n                            terminate: function () {\n                                if (d_1 && d_1.terminate)\n                                    d_1.terminate();\n                            }\n                        };\n                        if (sc_1 >= 0)\n                            file_1.size = sc_1, file_1.originalSize = su_1;\n                        this_1.onfile(file_1);\n                    }\n                    return \"break\";\n                }\n                else if (oc) {\n                    if (sig == 0x8074B50) {\n                        is = i += 12 + (oc == -2 && 8), f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                    else if (sig == 0x2014B50) {\n                        is = i -= 4, f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                }\n            };\n            var this_1 = this;\n            for (; i < l - 4; ++i) {\n                var state_1 = _loop_2();\n                if (state_1 === \"break\")\n                    break;\n            }\n            this.p = et;\n            if (oc < 0) {\n                var dat = f ? buf.subarray(0, is - 12 - (oc == -2 && 8) - (b4(buf, is - 16) == 0x8074B50 && 4)) : buf.subarray(0, i);\n                if (add)\n                    add.push(dat, !!f);\n                else\n                    this.k[+(f == 2)].push(dat);\n            }\n            if (f & 2)\n                return this.push(buf.subarray(i), final);\n            this.p = buf.subarray(i);\n        }\n        if (final) {\n            if (this.c)\n                err(13);\n            this.p = null;\n        }\n    };\n    /**\n     * Registers a decoder with the stream, allowing for files compressed with\n     * the compression type provided to be expanded correctly\n     * @param decoder The decoder constructor\n     */\n    Unzip.prototype.register = function (decoder) {\n        this.o[decoder.compression] = decoder;\n    };\n    return Unzip;\n}());\nexport { Unzip };\nvar mt = typeof queueMicrotask == 'function' ? queueMicrotask : typeof setTimeout == 'function' ? setTimeout : function (fn) { fn(); };\nexport function unzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var files = {};\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558) {\n            cbd(err(13, 0, 1), null);\n            return tAll;\n        }\n    }\n    ;\n    var lft = b2(data, e + 8);\n    if (lft) {\n        var c = lft;\n        var o = b4(data, e + 16);\n        var z = o == 4294967295 || c == 65535;\n        if (z) {\n            var ze = b4(data, e - 12);\n            z = b4(data, ze) == 0x6064B50;\n            if (z) {\n                c = lft = b4(data, ze + 32);\n                o = b4(data, ze + 48);\n            }\n        }\n        var fltr = opts && opts.filter;\n        var _loop_3 = function (i) {\n            var _a = zh(data, o, z), c_1 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n            o = no;\n            var cbl = function (e, d) {\n                if (e) {\n                    tAll();\n                    cbd(e, null);\n                }\n                else {\n                    if (d)\n                        files[fn] = d;\n                    if (!--lft)\n                        cbd(null, files);\n                }\n            };\n            if (!fltr || fltr({\n                name: fn,\n                size: sc,\n                originalSize: su,\n                compression: c_1\n            })) {\n                if (!c_1)\n                    cbl(null, slc(data, b, b + sc));\n                else if (c_1 == 8) {\n                    var infl = data.subarray(b, b + sc);\n                    // Synchronously decompress under 512KB, or barely-compressed data\n                    if (su < 524288 || sc > 0.8 * su) {\n                        try {\n                            cbl(null, inflateSync(infl, { out: new u8(su) }));\n                        }\n                        catch (e) {\n                            cbl(e, null);\n                        }\n                    }\n                    else\n                        term.push(inflate(infl, { size: su }, cbl));\n                }\n                else\n                    cbl(err(14, 'unknown compression type ' + c_1, 1), null);\n            }\n            else\n                cbl(null, null);\n        };\n        for (var i = 0; i < c; ++i) {\n            _loop_3(i);\n        }\n    }\n    else\n        cbd(null, {});\n    return tAll;\n}\n/**\n * Synchronously decompresses a ZIP archive. Prefer using `unzip` for better\n * performance with more than one file.\n * @param data The raw compressed ZIP file\n * @param opts The ZIP extraction options\n * @returns The decompressed files\n */\nexport function unzipSync(data, opts) {\n    var files = {};\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558)\n            err(13);\n    }\n    ;\n    var c = b2(data, e + 8);\n    if (!c)\n        return {};\n    var o = b4(data, e + 16);\n    var z = o == 4294967295 || c == 65535;\n    if (z) {\n        var ze = b4(data, e - 12);\n        z = b4(data, ze) == 0x6064B50;\n        if (z) {\n            c = b4(data, ze + 32);\n            o = b4(data, ze + 48);\n        }\n    }\n    var fltr = opts && opts.filter;\n    for (var i = 0; i < c; ++i) {\n        var _a = zh(data, o, z), c_2 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n        o = no;\n        if (!fltr || fltr({\n            name: fn,\n            size: sc,\n            originalSize: su,\n            compression: c_2\n        })) {\n            if (!c_2)\n                files[fn] = slc(data, b, b + sc);\n            else if (c_2 == 8)\n                files[fn] = inflateSync(data.subarray(b, b + sc), { out: new u8(su) });\n            else\n                err(14, 'unknown compression type ' + c_2);\n        }\n    }\n    return files;\n}\n", "function _arrayWithHoles(r) {\n  if (Array.isArray(r)) return r;\n}\nexport { _arrayWithHoles as default };", "function _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}\nexport { _iterableToArrayLimit as default };", "function _arrayLikeToArray(r, a) {\n  (null == a || a > r.length) && (a = r.length);\n  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];\n  return n;\n}\nexport { _arrayLikeToArray as default };", "import arrayLikeToArray from \"./arrayLikeToArray.js\";\nfunction _unsupportedIterableToArray(r, a) {\n  if (r) {\n    if (\"string\" == typeof r) return arrayLikeToArray(r, a);\n    var t = {}.toString.call(r).slice(8, -1);\n    return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? arrayLikeToArray(r, a) : void 0;\n  }\n}\nexport { _unsupportedIterableToArray as default };", "function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _nonIterableRest as default };", "import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nfunction _slicedToArray(r, e) {\n  return arrayWithHoles(r) || iterableToArrayLimit(r, e) || unsupportedIterableToArray(r, e) || nonIterableRest();\n}\nexport { _slicedToArray as default };", "export function decode(bytes, encoding = 'utf8') {\n    const decoder = new TextDecoder(encoding);\n    return decoder.decode(bytes);\n}\nconst encoder = new TextEncoder();\nexport function encode(str) {\n    return encoder.encode(str);\n}\n", "import { decode, encode } from './text';\nconst defaultByteLength = 1024 * 8;\nconst hostBigEndian = (() => {\n    const array = new Uint8Array(4);\n    const view = new Uint32Array(array.buffer);\n    return !((view[0] = 1) & array[0]);\n})();\nconst typedArrays = {\n    int8: globalThis.Int8Array,\n    uint8: globalThis.Uint8Array,\n    int16: globalThis.Int16Array,\n    uint16: globalThis.Uint16Array,\n    int32: globalThis.Int32Array,\n    uint32: globalThis.Uint32Array,\n    uint64: globalThis.BigUint64Array,\n    int64: globalThis.BigInt64Array,\n    float32: globalThis.Float32Array,\n    float64: globalThis.Float64Array,\n};\nexport class IOBuffer {\n    /**\n     * Reference to the internal ArrayBuffer object.\n     */\n    buffer;\n    /**\n     * Byte length of the internal ArrayBuffer.\n     */\n    byteLength;\n    /**\n     * Byte offset of the internal ArrayBuffer.\n     */\n    byteOffset;\n    /**\n     * Byte length of the internal ArrayBuffer.\n     */\n    length;\n    /**\n     * The current offset of the buffer's pointer.\n     */\n    offset;\n    lastWrittenByte;\n    littleEndian;\n    _data;\n    _mark;\n    _marks;\n    /**\n     * Create a new IOBuffer.\n     * @param data - The data to construct the IOBuffer with.\n     * If data is a number, it will be the new buffer's length<br>\n     * If data is `undefined`, the buffer will be initialized with a default length of 8Kb<br>\n     * If data is an ArrayBuffer, SharedArrayBuffer, an ArrayBufferView (Typed Array), an IOBuffer instance,\n     * or a Node.js Buffer, a view will be created over the underlying ArrayBuffer.\n     * @param options - An object for the options.\n     * @returns A new IOBuffer instance.\n     */\n    constructor(data = defaultByteLength, options = {}) {\n        let dataIsGiven = false;\n        if (typeof data === 'number') {\n            data = new ArrayBuffer(data);\n        }\n        else {\n            dataIsGiven = true;\n            this.lastWrittenByte = data.byteLength;\n        }\n        const offset = options.offset ? options.offset >>> 0 : 0;\n        const byteLength = data.byteLength - offset;\n        let dvOffset = offset;\n        if (ArrayBuffer.isView(data) || data instanceof IOBuffer) {\n            if (data.byteLength !== data.buffer.byteLength) {\n                dvOffset = data.byteOffset + offset;\n            }\n            data = data.buffer;\n        }\n        if (dataIsGiven) {\n            this.lastWrittenByte = byteLength;\n        }\n        else {\n            this.lastWrittenByte = 0;\n        }\n        this.buffer = data;\n        this.length = byteLength;\n        this.byteLength = byteLength;\n        this.byteOffset = dvOffset;\n        this.offset = 0;\n        this.littleEndian = true;\n        this._data = new DataView(this.buffer, dvOffset, byteLength);\n        this._mark = 0;\n        this._marks = [];\n    }\n    /**\n     * Checks if the memory allocated to the buffer is sufficient to store more\n     * bytes after the offset.\n     * @param byteLength - The needed memory in bytes.\n     * @returns `true` if there is sufficient space and `false` otherwise.\n     */\n    available(byteLength = 1) {\n        return this.offset + byteLength <= this.length;\n    }\n    /**\n     * Check if little-endian mode is used for reading and writing multi-byte\n     * values.\n     * @returns `true` if little-endian mode is used, `false` otherwise.\n     */\n    isLittleEndian() {\n        return this.littleEndian;\n    }\n    /**\n     * Set little-endian mode for reading and writing multi-byte values.\n     * @returns This.\n     */\n    setLittleEndian() {\n        this.littleEndian = true;\n        return this;\n    }\n    /**\n     * Check if big-endian mode is used for reading and writing multi-byte values.\n     * @returns `true` if big-endian mode is used, `false` otherwise.\n     */\n    isBigEndian() {\n        return !this.littleEndian;\n    }\n    /**\n     * Switches to big-endian mode for reading and writing multi-byte values.\n     * @returns This.\n     */\n    setBigEndian() {\n        this.littleEndian = false;\n        return this;\n    }\n    /**\n     * Move the pointer n bytes forward.\n     * @param n - Number of bytes to skip.\n     * @returns This.\n     */\n    skip(n = 1) {\n        this.offset += n;\n        return this;\n    }\n    /**\n     * Move the pointer n bytes backward.\n     * @param n - Number of bytes to move back.\n     * @returns This.\n     */\n    back(n = 1) {\n        this.offset -= n;\n        return this;\n    }\n    /**\n     * Move the pointer to the given offset.\n     * @param offset - The offset to move to.\n     * @returns This.\n     */\n    seek(offset) {\n        this.offset = offset;\n        return this;\n    }\n    /**\n     * Store the current pointer offset.\n     * @see {@link IOBuffer#reset}\n     * @returns This.\n     */\n    mark() {\n        this._mark = this.offset;\n        return this;\n    }\n    /**\n     * Move the pointer back to the last pointer offset set by mark.\n     * @see {@link IOBuffer#mark}\n     * @returns This.\n     */\n    reset() {\n        this.offset = this._mark;\n        return this;\n    }\n    /**\n     * Push the current pointer offset to the mark stack.\n     * @see {@link IOBuffer#popMark}\n     * @returns This.\n     */\n    pushMark() {\n        this._marks.push(this.offset);\n        return this;\n    }\n    /**\n     * Pop the last pointer offset from the mark stack, and set the current\n     * pointer offset to the popped value.\n     * @see {@link IOBuffer#pushMark}\n     * @returns This.\n     */\n    popMark() {\n        const offset = this._marks.pop();\n        if (offset === undefined) {\n            throw new Error('Mark stack empty');\n        }\n        this.seek(offset);\n        return this;\n    }\n    /**\n     * Move the pointer offset back to 0.\n     * @returns This.\n     */\n    rewind() {\n        this.offset = 0;\n        return this;\n    }\n    /**\n     * Make sure the buffer has sufficient memory to write a given byteLength at\n     * the current pointer offset.\n     * If the buffer's memory is insufficient, this method will create a new\n     * buffer (a copy) with a length that is twice (byteLength + current offset).\n     * @param byteLength - The needed memory in bytes.\n     * @returns This.\n     */\n    ensureAvailable(byteLength = 1) {\n        if (!this.available(byteLength)) {\n            const lengthNeeded = this.offset + byteLength;\n            const newLength = lengthNeeded * 2;\n            const newArray = new Uint8Array(newLength);\n            newArray.set(new Uint8Array(this.buffer));\n            this.buffer = newArray.buffer;\n            this.length = newLength;\n            this.byteLength = newLength;\n            this._data = new DataView(this.buffer);\n        }\n        return this;\n    }\n    /**\n     * Read a byte and return false if the byte's value is 0, or true otherwise.\n     * Moves pointer forward by one byte.\n     * @returns The read boolean.\n     */\n    readBoolean() {\n        return this.readUint8() !== 0;\n    }\n    /**\n     * Read a signed 8-bit integer and move pointer forward by 1 byte.\n     * @returns The read byte.\n     */\n    readInt8() {\n        return this._data.getInt8(this.offset++);\n    }\n    /**\n     * Read an unsigned 8-bit integer and move pointer forward by 1 byte.\n     * @returns The read byte.\n     */\n    readUint8() {\n        return this._data.getUint8(this.offset++);\n    }\n    /**\n     * Alias for {@link IOBuffer#readUint8}.\n     * @returns The read byte.\n     */\n    readByte() {\n        return this.readUint8();\n    }\n    /**\n     * Read `n` bytes and move pointer forward by `n` bytes.\n     * @param n - Number of bytes to read.\n     * @returns The read bytes.\n     */\n    readBytes(n = 1) {\n        return this.readArray(n, 'uint8');\n    }\n    /**\n     * Creates an array of corresponding to the type `type` and size `size`.\n     * For example type `uint8` will create a `Uint8Array`.\n     * @param size - size of the resulting array\n     * @param type - number type of elements to read\n     * @returns The read array.\n     */\n    readArray(size, type) {\n        const bytes = typedArrays[type].BYTES_PER_ELEMENT * size;\n        const offset = this.byteOffset + this.offset;\n        const slice = this.buffer.slice(offset, offset + bytes);\n        if (this.littleEndian === hostBigEndian &&\n            type !== 'uint8' &&\n            type !== 'int8') {\n            const slice = new Uint8Array(this.buffer.slice(offset, offset + bytes));\n            slice.reverse();\n            const returnArray = new typedArrays[type](slice.buffer);\n            this.offset += bytes;\n            returnArray.reverse();\n            return returnArray;\n        }\n        const returnArray = new typedArrays[type](slice);\n        this.offset += bytes;\n        return returnArray;\n    }\n    /**\n     * Read a 16-bit signed integer and move pointer forward by 2 bytes.\n     * @returns The read value.\n     */\n    readInt16() {\n        const value = this._data.getInt16(this.offset, this.littleEndian);\n        this.offset += 2;\n        return value;\n    }\n    /**\n     * Read a 16-bit unsigned integer and move pointer forward by 2 bytes.\n     * @returns The read value.\n     */\n    readUint16() {\n        const value = this._data.getUint16(this.offset, this.littleEndian);\n        this.offset += 2;\n        return value;\n    }\n    /**\n     * Read a 32-bit signed integer and move pointer forward by 4 bytes.\n     * @returns The read value.\n     */\n    readInt32() {\n        const value = this._data.getInt32(this.offset, this.littleEndian);\n        this.offset += 4;\n        return value;\n    }\n    /**\n     * Read a 32-bit unsigned integer and move pointer forward by 4 bytes.\n     * @returns The read value.\n     */\n    readUint32() {\n        const value = this._data.getUint32(this.offset, this.littleEndian);\n        this.offset += 4;\n        return value;\n    }\n    /**\n     * Read a 32-bit floating number and move pointer forward by 4 bytes.\n     * @returns The read value.\n     */\n    readFloat32() {\n        const value = this._data.getFloat32(this.offset, this.littleEndian);\n        this.offset += 4;\n        return value;\n    }\n    /**\n     * Read a 64-bit floating number and move pointer forward by 8 bytes.\n     * @returns The read value.\n     */\n    readFloat64() {\n        const value = this._data.getFloat64(this.offset, this.littleEndian);\n        this.offset += 8;\n        return value;\n    }\n    /**\n     * Read a 64-bit signed integer number and move pointer forward by 8 bytes.\n     * @returns The read value.\n     */\n    readBigInt64() {\n        const value = this._data.getBigInt64(this.offset, this.littleEndian);\n        this.offset += 8;\n        return value;\n    }\n    /**\n     * Read a 64-bit unsigned integer number and move pointer forward by 8 bytes.\n     * @returns The read value.\n     */\n    readBigUint64() {\n        const value = this._data.getBigUint64(this.offset, this.littleEndian);\n        this.offset += 8;\n        return value;\n    }\n    /**\n     * Read a 1-byte ASCII character and move pointer forward by 1 byte.\n     * @returns The read character.\n     */\n    readChar() {\n        // eslint-disable-next-line unicorn/prefer-code-point\n        return String.fromCharCode(this.readInt8());\n    }\n    /**\n     * Read `n` 1-byte ASCII characters and move pointer forward by `n` bytes.\n     * @param n - Number of characters to read.\n     * @returns The read characters.\n     */\n    readChars(n = 1) {\n        let result = '';\n        for (let i = 0; i < n; i++) {\n            result += this.readChar();\n        }\n        return result;\n    }\n    /**\n     * Read the next `n` bytes, return a UTF-8 decoded string and move pointer\n     * forward by `n` bytes.\n     * @param n - Number of bytes to read.\n     * @returns The decoded string.\n     */\n    readUtf8(n = 1) {\n        return decode(this.readBytes(n));\n    }\n    /**\n     * Read the next `n` bytes, return a string decoded with `encoding` and move pointer\n     * forward by `n` bytes.\n     * If no encoding is passed, the function is equivalent to @see {@link IOBuffer#readUtf8}\n     * @param n - Number of bytes to read.\n     * @param encoding - The encoding to use. Default is 'utf8'.\n     * @returns The decoded string.\n     */\n    decodeText(n = 1, encoding = 'utf8') {\n        return decode(this.readBytes(n), encoding);\n    }\n    /**\n     * Write 0xff if the passed value is truthy, 0x00 otherwise and move pointer\n     * forward by 1 byte.\n     * @param value - The value to write.\n     * @returns This.\n     */\n    writeBoolean(value) {\n        this.writeUint8(value ? 0xff : 0x00);\n        return this;\n    }\n    /**\n     * Write `value` as an 8-bit signed integer and move pointer forward by 1 byte.\n     * @param value - The value to write.\n     * @returns This.\n     */\n    writeInt8(value) {\n        this.ensureAvailable(1);\n        this._data.setInt8(this.offset++, value);\n        this._updateLastWrittenByte();\n        return this;\n    }\n    /**\n     * Write `value` as an 8-bit unsigned integer and move pointer forward by 1\n     * byte.\n     * @param value - The value to write.\n     * @returns This.\n     */\n    writeUint8(value) {\n        this.ensureAvailable(1);\n        this._data.setUint8(this.offset++, value);\n        this._updateLastWrittenByte();\n        return this;\n    }\n    /**\n     * An alias for {@link IOBuffer#writeUint8}.\n     * @param value - The value to write.\n     * @returns This.\n     */\n    writeByte(value) {\n        return this.writeUint8(value);\n    }\n    /**\n     * Write all elements of `bytes` as uint8 values and move pointer forward by\n     * `bytes.length` bytes.\n     * @param bytes - The array of bytes to write.\n     * @returns This.\n     */\n    writeBytes(bytes) {\n        this.ensureAvailable(bytes.length);\n        // eslint-disable-next-line @typescript-eslint/prefer-for-of\n        for (let i = 0; i < bytes.length; i++) {\n            this._data.setUint8(this.offset++, bytes[i]);\n        }\n        this._updateLastWrittenByte();\n        return this;\n    }\n    /**\n     * Write `value` as a 16-bit signed integer and move pointer forward by 2\n     * bytes.\n     * @param value - The value to write.\n     * @returns This.\n     */\n    writeInt16(value) {\n        this.ensureAvailable(2);\n        this._data.setInt16(this.offset, value, this.littleEndian);\n        this.offset += 2;\n        this._updateLastWrittenByte();\n        return this;\n    }\n    /**\n     * Write `value` as a 16-bit unsigned integer and move pointer forward by 2\n     * bytes.\n     * @param value - The value to write.\n     * @returns This.\n     */\n    writeUint16(value) {\n        this.ensureAvailable(2);\n        this._data.setUint16(this.offset, value, this.littleEndian);\n        this.offset += 2;\n        this._updateLastWrittenByte();\n        return this;\n    }\n    /**\n     * Write `value` as a 32-bit signed integer and move pointer forward by 4\n     * bytes.\n     * @param value - The value to write.\n     * @returns This.\n     */\n    writeInt32(value) {\n        this.ensureAvailable(4);\n        this._data.setInt32(this.offset, value, this.littleEndian);\n        this.offset += 4;\n        this._updateLastWrittenByte();\n        return this;\n    }\n    /**\n     * Write `value` as a 32-bit unsigned integer and move pointer forward by 4\n     * bytes.\n     * @param value - The value to write.\n     * @returns This.\n     */\n    writeUint32(value) {\n        this.ensureAvailable(4);\n        this._data.setUint32(this.offset, value, this.littleEndian);\n        this.offset += 4;\n        this._updateLastWrittenByte();\n        return this;\n    }\n    /**\n     * Write `value` as a 32-bit floating number and move pointer forward by 4\n     * bytes.\n     * @param value - The value to write.\n     * @returns This.\n     */\n    writeFloat32(value) {\n        this.ensureAvailable(4);\n        this._data.setFloat32(this.offset, value, this.littleEndian);\n        this.offset += 4;\n        this._updateLastWrittenByte();\n        return this;\n    }\n    /**\n     * Write `value` as a 64-bit floating number and move pointer forward by 8\n     * bytes.\n     * @param value - The value to write.\n     * @returns This.\n     */\n    writeFloat64(value) {\n        this.ensureAvailable(8);\n        this._data.setFloat64(this.offset, value, this.littleEndian);\n        this.offset += 8;\n        this._updateLastWrittenByte();\n        return this;\n    }\n    /**\n     * Write `value` as a 64-bit signed bigint and move pointer forward by 8\n     * bytes.\n     * @param value - The value to write.\n     * @returns This.\n     */\n    writeBigInt64(value) {\n        this.ensureAvailable(8);\n        this._data.setBigInt64(this.offset, value, this.littleEndian);\n        this.offset += 8;\n        this._updateLastWrittenByte();\n        return this;\n    }\n    /**\n     * Write `value` as a 64-bit unsigned bigint and move pointer forward by 8\n     * bytes.\n     * @param value - The value to write.\n     * @returns This.\n     */\n    writeBigUint64(value) {\n        this.ensureAvailable(8);\n        this._data.setBigUint64(this.offset, value, this.littleEndian);\n        this.offset += 8;\n        this._updateLastWrittenByte();\n        return this;\n    }\n    /**\n     * Write the charCode of `str`'s first character as an 8-bit unsigned integer\n     * and move pointer forward by 1 byte.\n     * @param str - The character to write.\n     * @returns This.\n     */\n    writeChar(str) {\n        // eslint-disable-next-line unicorn/prefer-code-point\n        return this.writeUint8(str.charCodeAt(0));\n    }\n    /**\n     * Write the charCodes of all `str`'s characters as 8-bit unsigned integers\n     * and move pointer forward by `str.length` bytes.\n     * @param str - The characters to write.\n     * @returns This.\n     */\n    writeChars(str) {\n        for (let i = 0; i < str.length; i++) {\n            // eslint-disable-next-line unicorn/prefer-code-point\n            this.writeUint8(str.charCodeAt(i));\n        }\n        return this;\n    }\n    /**\n     * UTF-8 encode and write `str` to the current pointer offset and move pointer\n     * forward according to the encoded length.\n     * @param str - The string to write.\n     * @returns This.\n     */\n    writeUtf8(str) {\n        return this.writeBytes(encode(str));\n    }\n    /**\n     * Export a Uint8Array view of the internal buffer.\n     * The view starts at the byte offset and its length\n     * is calculated to stop at the last written byte or the original length.\n     * @returns A new Uint8Array view.\n     */\n    toArray() {\n        return new Uint8Array(this.buffer, this.byteOffset, this.lastWrittenByte);\n    }\n    /**\n     *  Get the total number of bytes written so far, regardless of the current offset.\n     * @returns - Total number of bytes.\n     */\n    getWrittenByteLength() {\n        return this.lastWrittenByte - this.byteOffset;\n    }\n    /**\n     * Update the last written byte offset\n     * @private\n     */\n    _updateLastWrittenByte() {\n        if (this.offset > this.lastWrittenByte) {\n            this.lastWrittenByte = this.offset;\n        }\n    }\n}\n", "\n/*! pako 2.1.0 https://github.com/nodeca/pako @license (MIT AND Zlib) */\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//const Z_FILTERED          = 1;\n//const Z_HUFFMAN_ONLY      = 2;\n//const Z_RLE               = 3;\nconst Z_FIXED$1               = 4;\n//const Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nconst Z_BINARY              = 0;\nconst Z_TEXT                = 1;\n//const Z_ASCII             = 1; // = Z_TEXT\nconst Z_UNKNOWN$1             = 2;\n\n/*============================================================================*/\n\n\nfunction zero$1(buf) { let len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nconst STORED_BLOCK = 0;\nconst STATIC_TREES = 1;\nconst DYN_TREES    = 2;\n/* The three kinds of block type */\n\nconst MIN_MATCH$1    = 3;\nconst MAX_MATCH$1    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nconst LENGTH_CODES$1  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nconst LITERALS$1      = 256;\n/* number of literal bytes 0..255 */\n\nconst L_CODES$1       = LITERALS$1 + 1 + LENGTH_CODES$1;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nconst D_CODES$1       = 30;\n/* number of distance codes */\n\nconst BL_CODES$1      = 19;\n/* number of codes used to transfer the bit lengths */\n\nconst HEAP_SIZE$1     = 2 * L_CODES$1 + 1;\n/* maximum heap size */\n\nconst MAX_BITS$1      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nconst MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nconst END_BLOCK   = 256;\n/* end of block literal code */\n\nconst REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nconst REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nconst REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nconst extra_lbits =   /* extra bits for each length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]);\n\nconst extra_dbits =   /* extra bits for each distance code */\n  new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]);\n\nconst extra_blbits =  /* extra bits for each bit length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]);\n\nconst bl_order =\n  new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nconst DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nconst static_ltree  = new Array((L_CODES$1 + 2) * 2);\nzero$1(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nconst static_dtree  = new Array(D_CODES$1 * 2);\nzero$1(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nconst _dist_code    = new Array(DIST_CODE_LEN);\nzero$1(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nconst _length_code  = new Array(MAX_MATCH$1 - MIN_MATCH$1 + 1);\nzero$1(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nconst base_length   = new Array(LENGTH_CODES$1);\nzero$1(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nconst base_dist     = new Array(D_CODES$1);\nzero$1(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nlet static_l_desc;\nlet static_d_desc;\nlet static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nconst d_code = (dist) => {\n\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n};\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nconst put_short = (s, w) => {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n};\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nconst send_bits = (s, value, length) => {\n\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n};\n\n\nconst send_code = (s, c, tree) => {\n\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n};\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nconst bi_reverse = (code, len) => {\n\n  let res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nconst bi_flush = (s) => {\n\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n};\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nconst gen_bitlen = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n\n  const tree            = desc.dyn_tree;\n  const max_code        = desc.max_code;\n  const stree           = desc.stat_desc.static_tree;\n  const has_stree       = desc.stat_desc.has_stree;\n  const extra           = desc.stat_desc.extra_bits;\n  const base            = desc.stat_desc.extra_base;\n  const max_length      = desc.stat_desc.max_length;\n  let h;              /* heap index */\n  let n, m;           /* iterate over the tree elements */\n  let bits;           /* bit length */\n  let xbits;          /* extra bits */\n  let f;              /* frequency */\n  let overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE$1; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Tracev((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Tracev((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nconst gen_codes = (tree, max_code, bl_count) => {\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n\n  const next_code = new Array(MAX_BITS$1 + 1); /* next code value for each bit length */\n  let code = 0;              /* running code value */\n  let bits;                  /* bit index */\n  let n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS$1; bits++) {\n    code = (code + bl_count[bits - 1]) << 1;\n    next_code[bits] = code;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    let len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n};\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nconst tr_static_init = () => {\n\n  let n;        /* iterates over tree elements */\n  let bits;     /* bit counter */\n  let length;   /* length value */\n  let code;     /* code value */\n  let dist;     /* distance index */\n  const bl_count = new Array(MAX_BITS$1 + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES$1 - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES$1; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES$1 + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES$1; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS$1 + 1, L_CODES$1, MAX_BITS$1);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES$1, MAX_BITS$1);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES$1, MAX_BL_BITS);\n\n  //static_init_done = true;\n};\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nconst init_block = (s) => {\n\n  let n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES$1;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES$1;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES$1; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.sym_next = s.matches = 0;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nconst bi_windup = (s) =>\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n};\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nconst smaller = (tree, n, m, depth) => {\n\n  const _n2 = n * 2;\n  const _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n};\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nconst pqdownheap = (s, tree, k) => {\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n\n  const v = s.heap[k];\n  let j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n};\n\n\n// inlined manually\n// const SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nconst compress_block = (s, ltree, dtree) => {\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n\n  let dist;           /* distance of matched string */\n  let lc;             /* match length or unmatched char (if dist == 0) */\n  let sx = 0;         /* running index in sym_buf */\n  let code;           /* the code to send */\n  let extra;          /* number of extra bits to send */\n\n  if (s.sym_next !== 0) {\n    do {\n      dist = s.pending_buf[s.sym_buf + sx++] & 0xff;\n      dist += (s.pending_buf[s.sym_buf + sx++] & 0xff) << 8;\n      lc = s.pending_buf[s.sym_buf + sx++];\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS$1 + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and sym_buf is ok: */\n      //Assert(s->pending < s->lit_bufsize + sx, \"pendingBuf overflow\");\n\n    } while (sx < s.sym_next);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n};\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nconst build_tree = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n\n  const tree     = desc.dyn_tree;\n  const stree    = desc.stat_desc.static_tree;\n  const has_stree = desc.stat_desc.has_stree;\n  const elems    = desc.stat_desc.elems;\n  let n, m;          /* iterate over heap elements */\n  let max_code = -1; /* largest code with non zero frequency */\n  let node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE$1;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n};\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nconst scan_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nconst send_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nconst build_bl_tree = (s) => {\n\n  let max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES$1 - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n};\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nconst send_all_trees = (s, lcodes, dcodes, blcodes) => {\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n\n  let rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n};\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"block list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"allow list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nconst detect_data_type = (s) => {\n  /* block_mask is the bit mask of block-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  let block_mask = 0xf3ffc07f;\n  let n;\n\n  /* Check for non-textual (\"block-listed\") bytes. */\n  for (n = 0; n <= 31; n++, block_mask >>>= 1) {\n    if ((block_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"allow-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS$1; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"block-listed\" or \"allow-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n};\n\n\nlet static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nconst _tr_init$1 = (s) =>\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n};\n\n\n/* ===========================================================================\n * Send a stored block\n */\nconst _tr_stored_block$1 = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  bi_windup(s);        /* align on byte boundary */\n  put_short(s, stored_len);\n  put_short(s, ~stored_len);\n  if (stored_len) {\n    s.pending_buf.set(s.window.subarray(buf, buf + stored_len), s.pending);\n  }\n  s.pending += stored_len;\n};\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nconst _tr_align$1 = (s) => {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n};\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and write out the encoded block.\n */\nconst _tr_flush_block$1 = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  let opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  let max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN$1) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->sym_next / 3));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block$1(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED$1 || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n};\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nconst _tr_tally$1 = (s, dist, lc) => {\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist;\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist >> 8;\n  s.pending_buf[s.sym_buf + s.sym_next++] = lc;\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS$1 + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n  return (s.sym_next === s.sym_end);\n};\n\nvar _tr_init_1  = _tr_init$1;\nvar _tr_stored_block_1 = _tr_stored_block$1;\nvar _tr_flush_block_1  = _tr_flush_block$1;\nvar _tr_tally_1 = _tr_tally$1;\nvar _tr_align_1 = _tr_align$1;\n\nvar trees = {\n\t_tr_init: _tr_init_1,\n\t_tr_stored_block: _tr_stored_block_1,\n\t_tr_flush_block: _tr_flush_block_1,\n\t_tr_tally: _tr_tally_1,\n\t_tr_align: _tr_align_1\n};\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst adler32 = (adler, buf, len, pos) => {\n  let s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n};\n\n\nvar adler32_1 = adler32;\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nconst makeTable = () => {\n  let c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n};\n\n// Create table on load. Just 255 signed longs. Not a problem.\nconst crcTable = new Uint32Array(makeTable());\n\n\nconst crc32 = (crc, buf, len, pos) => {\n  const t = crcTable;\n  const end = pos + len;\n\n  crc ^= -1;\n\n  for (let i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n};\n\n\nvar crc32_1 = crc32;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar messages = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar constants$2 = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  Z_MEM_ERROR:       -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst { _tr_init, _tr_stored_block, _tr_flush_block, _tr_tally, _tr_align } = trees;\n\n\n\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$2, Z_PARTIAL_FLUSH, Z_FULL_FLUSH: Z_FULL_FLUSH$1, Z_FINISH: Z_FINISH$3, Z_BLOCK: Z_BLOCK$1,\n  Z_OK: Z_OK$3, Z_STREAM_END: Z_STREAM_END$3, Z_STREAM_ERROR: Z_STREAM_ERROR$2, Z_DATA_ERROR: Z_DATA_ERROR$2, Z_BUF_ERROR: Z_BUF_ERROR$1,\n  Z_DEFAULT_COMPRESSION: Z_DEFAULT_COMPRESSION$1,\n  Z_FILTERED, Z_HUFFMAN_ONLY, Z_RLE, Z_FIXED, Z_DEFAULT_STRATEGY: Z_DEFAULT_STRATEGY$1,\n  Z_UNKNOWN,\n  Z_DEFLATED: Z_DEFLATED$2\n} = constants$2;\n\n/*============================================================================*/\n\n\nconst MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nconst MAX_WBITS$1 = 15;\n/* 32K LZ77 window */\nconst DEF_MEM_LEVEL = 8;\n\n\nconst LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nconst LITERALS      = 256;\n/* number of literal bytes 0..255 */\nconst L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nconst D_CODES       = 30;\n/* number of distance codes */\nconst BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nconst HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nconst MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst MIN_MATCH = 3;\nconst MAX_MATCH = 258;\nconst MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nconst PRESET_DICT = 0x20;\n\nconst INIT_STATE    =  42;    /* zlib header -> BUSY_STATE */\n//#ifdef GZIP\nconst GZIP_STATE    =  57;    /* gzip header -> BUSY_STATE | EXTRA_STATE */\n//#endif\nconst EXTRA_STATE   =  69;    /* gzip extra block -> NAME_STATE */\nconst NAME_STATE    =  73;    /* gzip file name -> COMMENT_STATE */\nconst COMMENT_STATE =  91;    /* gzip comment -> HCRC_STATE */\nconst HCRC_STATE    = 103;    /* gzip header CRC -> BUSY_STATE */\nconst BUSY_STATE    = 113;    /* deflate -> FINISH_STATE */\nconst FINISH_STATE  = 666;    /* stream complete */\n\nconst BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nconst BS_BLOCK_DONE     = 2; /* block flush performed */\nconst BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nconst BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nconst OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nconst err = (strm, errorCode) => {\n  strm.msg = messages[errorCode];\n  return errorCode;\n};\n\nconst rank = (f) => {\n  return ((f) * 2) - ((f) > 4 ? 9 : 0);\n};\n\nconst zero = (buf) => {\n  let len = buf.length; while (--len >= 0) { buf[len] = 0; }\n};\n\n/* ===========================================================================\n * Slide the hash table when sliding the window down (could be avoided with 32\n * bit values at the expense of memory usage). We slide even when level == 0 to\n * keep the hash table consistent if we switch back to level > 0 later.\n */\nconst slide_hash = (s) => {\n  let n, m;\n  let p;\n  let wsize = s.w_size;\n\n  n = s.hash_size;\n  p = n;\n  do {\n    m = s.head[--p];\n    s.head[p] = (m >= wsize ? m - wsize : 0);\n  } while (--n);\n  n = wsize;\n//#ifndef FASTEST\n  p = n;\n  do {\n    m = s.prev[--p];\n    s.prev[p] = (m >= wsize ? m - wsize : 0);\n    /* If n is not on any hash chain, prev[n] is garbage but\n     * its value will never be used.\n     */\n  } while (--n);\n//#endif\n};\n\n/* eslint-disable new-cap */\nlet HASH_ZLIB = (s, prev, data) => ((prev << s.hash_shift) ^ data) & s.hash_mask;\n// This hash causes less collisions, https://github.com/nodeca/pako/issues/135\n// But breaks binary compatibility\n//let HASH_FAST = (s, prev, data) => ((prev << 8) + (prev >> 8) + (data << 4)) & s.hash_mask;\nlet HASH = HASH_ZLIB;\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output, except for\n * some deflate_stored() output, goes through this function so some\n * applications may wish to modify it to avoid allocating a large\n * strm->next_out buffer and copying into it. (See also read_buf()).\n */\nconst flush_pending = (strm) => {\n  const s = strm.state;\n\n  //_tr_flush_bits(s);\n  let len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  strm.output.set(s.pending_buf.subarray(s.pending_out, s.pending_out + len), strm.next_out);\n  strm.next_out  += len;\n  s.pending_out  += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending      -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n};\n\n\nconst flush_block_only = (s, last) => {\n  _tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n};\n\n\nconst put_byte = (s, b) => {\n  s.pending_buf[s.pending++] = b;\n};\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nconst putShortMSB = (s, b) => {\n\n  //  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n};\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nconst read_buf = (strm, buf, start, size) => {\n\n  let len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  buf.set(strm.input.subarray(strm.next_in, strm.next_in + len), start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32_1(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32_1(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n};\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nconst longest_match = (s, cur_match) => {\n\n  let chain_length = s.max_chain_length;      /* max hash chain length */\n  let scan = s.strstart; /* current string */\n  let match;                       /* matched string */\n  let len;                           /* length of current match */\n  let best_len = s.prev_length;              /* best match length so far */\n  let nice_match = s.nice_match;             /* stop if match long enough */\n  const limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  const _win = s.window; // shortcut\n\n  const wmask = s.w_mask;\n  const prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  const strend = s.strstart + MAX_MATCH;\n  let scan_end1  = _win[scan + best_len - 1];\n  let scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n};\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nconst fill_window = (s) => {\n\n  const _w_size = s.w_size;\n  let n, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      s.window.set(s.window.subarray(_w_size, _w_size + _w_size - more), 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n      if (s.insert > s.strstart) {\n        s.insert = s.strstart;\n      }\n      slide_hash(s);\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + 1]);\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    const curr = s.strstart + s.lookahead;\n//    let init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n};\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n *\n * In case deflateParams() is used to later switch to a non-zero compression\n * level, s->matches (otherwise unused when storing) keeps track of the number\n * of hash table slides to perform. If s->matches is 1, then one hash table\n * slide will be done when switching. If s->matches is 2, the maximum value\n * allowed here, then the hash table will be cleared, since two or more slides\n * is the same as a clear.\n *\n * deflate_stored() is written to minimize the number of times an input byte is\n * copied. It is most efficient with large input and output buffers, which\n * maximizes the opportunites to have a single copy from next_in to next_out.\n */\nconst deflate_stored = (s, flush) => {\n\n  /* Smallest worthy block size when not flushing or finishing. By default\n   * this is 32K. This can be as small as 507 bytes for memLevel == 1. For\n   * large input and output buffers, the stored block size will be larger.\n   */\n  let min_block = s.pending_buf_size - 5 > s.w_size ? s.w_size : s.pending_buf_size - 5;\n\n  /* Copy as many min_block or larger stored blocks directly to next_out as\n   * possible. If flushing, copy the remaining available input to next_out as\n   * stored blocks, if there is enough space.\n   */\n  let len, left, have, last = 0;\n  let used = s.strm.avail_in;\n  do {\n    /* Set len to the maximum size block that we can copy directly with the\n     * available input data and output space. Set left to how much of that\n     * would be copied from what's left in the window.\n     */\n    len = 65535/* MAX_STORED */;     /* maximum deflate stored block length */\n    have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    if (s.strm.avail_out < have) {         /* need room for header */\n      break;\n    }\n      /* maximum stored block length that will fit in avail_out: */\n    have = s.strm.avail_out - have;\n    left = s.strstart - s.block_start;  /* bytes left in window */\n    if (len > left + s.strm.avail_in) {\n      len = left + s.strm.avail_in;   /* limit len to the input */\n    }\n    if (len > have) {\n      len = have;             /* limit len to the output */\n    }\n\n    /* If the stored block would be less than min_block in length, or if\n     * unable to copy all of the available input when flushing, then try\n     * copying to the window and the pending buffer instead. Also don't\n     * write an empty block when flushing -- deflate() does that.\n     */\n    if (len < min_block && ((len === 0 && flush !== Z_FINISH$3) ||\n                        flush === Z_NO_FLUSH$2 ||\n                        len !== left + s.strm.avail_in)) {\n      break;\n    }\n\n    /* Make a dummy stored block in pending to get the header bytes,\n     * including any pending bits. This also updates the debugging counts.\n     */\n    last = flush === Z_FINISH$3 && len === left + s.strm.avail_in ? 1 : 0;\n    _tr_stored_block(s, 0, 0, last);\n\n    /* Replace the lengths in the dummy stored block with len. */\n    s.pending_buf[s.pending - 4] = len;\n    s.pending_buf[s.pending - 3] = len >> 8;\n    s.pending_buf[s.pending - 2] = ~len;\n    s.pending_buf[s.pending - 1] = ~len >> 8;\n\n    /* Write the stored block header bytes. */\n    flush_pending(s.strm);\n\n//#ifdef ZLIB_DEBUG\n//    /* Update debugging counts for the data about to be copied. */\n//    s->compressed_len += len << 3;\n//    s->bits_sent += len << 3;\n//#endif\n\n    /* Copy uncompressed bytes from the window to next_out. */\n    if (left) {\n      if (left > len) {\n        left = len;\n      }\n      //zmemcpy(s->strm->next_out, s->window + s->block_start, left);\n      s.strm.output.set(s.window.subarray(s.block_start, s.block_start + left), s.strm.next_out);\n      s.strm.next_out += left;\n      s.strm.avail_out -= left;\n      s.strm.total_out += left;\n      s.block_start += left;\n      len -= left;\n    }\n\n    /* Copy uncompressed bytes directly from next_in to next_out, updating\n     * the check value.\n     */\n    if (len) {\n      read_buf(s.strm, s.strm.output, s.strm.next_out, len);\n      s.strm.next_out += len;\n      s.strm.avail_out -= len;\n      s.strm.total_out += len;\n    }\n  } while (last === 0);\n\n  /* Update the sliding window with the last s->w_size bytes of the copied\n   * data, or append all of the copied data to the existing window if less\n   * than s->w_size bytes were copied. Also update the number of bytes to\n   * insert in the hash tables, in the event that deflateParams() switches to\n   * a non-zero compression level.\n   */\n  used -= s.strm.avail_in;    /* number of input bytes directly copied */\n  if (used) {\n    /* If any input was used, then no unused input remains in the window,\n     * therefore s->block_start == s->strstart.\n     */\n    if (used >= s.w_size) {  /* supplant the previous history */\n      s.matches = 2;     /* clear hash */\n      //zmemcpy(s->window, s->strm->next_in - s->w_size, s->w_size);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - s.w_size, s.strm.next_in), 0);\n      s.strstart = s.w_size;\n      s.insert = s.strstart;\n    }\n    else {\n      if (s.window_size - s.strstart <= used) {\n        /* Slide the window down. */\n        s.strstart -= s.w_size;\n        //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n        s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n        if (s.matches < 2) {\n          s.matches++;   /* add a pending slide_hash() */\n        }\n        if (s.insert > s.strstart) {\n          s.insert = s.strstart;\n        }\n      }\n      //zmemcpy(s->window + s->strstart, s->strm->next_in - used, used);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - used, s.strm.next_in), s.strstart);\n      s.strstart += used;\n      s.insert += used > s.w_size - s.insert ? s.w_size - s.insert : used;\n    }\n    s.block_start = s.strstart;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* If the last block was written to next_out, then done. */\n  if (last) {\n    return BS_FINISH_DONE;\n  }\n\n  /* If flushing and all input has been consumed, then done. */\n  if (flush !== Z_NO_FLUSH$2 && flush !== Z_FINISH$3 &&\n    s.strm.avail_in === 0 && s.strstart === s.block_start) {\n    return BS_BLOCK_DONE;\n  }\n\n  /* Fill the window with any remaining input. */\n  have = s.window_size - s.strstart;\n  if (s.strm.avail_in > have && s.block_start >= s.w_size) {\n    /* Slide the window down. */\n    s.block_start -= s.w_size;\n    s.strstart -= s.w_size;\n    //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n    s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n    if (s.matches < 2) {\n      s.matches++;       /* add a pending slide_hash() */\n    }\n    have += s.w_size;      /* more space now */\n    if (s.insert > s.strstart) {\n      s.insert = s.strstart;\n    }\n  }\n  if (have > s.strm.avail_in) {\n    have = s.strm.avail_in;\n  }\n  if (have) {\n    read_buf(s.strm, s.window, s.strstart, have);\n    s.strstart += have;\n    s.insert += have > s.w_size - s.insert ? s.w_size - s.insert : have;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* There was not enough avail_out to write a complete worthy or flushed\n   * stored block to next_out. Write a stored block to pending instead, if we\n   * have enough input for a worthy block, or if flushing and there is enough\n   * room for the remaining input as a stored block in the pending buffer.\n   */\n  have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    /* maximum stored block length that will fit in pending: */\n  have = s.pending_buf_size - have > 65535/* MAX_STORED */ ? 65535/* MAX_STORED */ : s.pending_buf_size - have;\n  min_block = have > s.w_size ? s.w_size : have;\n  left = s.strstart - s.block_start;\n  if (left >= min_block ||\n     ((left || flush === Z_FINISH$3) && flush !== Z_NO_FLUSH$2 &&\n     s.strm.avail_in === 0 && left <= have)) {\n    len = left > have ? have : left;\n    last = flush === Z_FINISH$3 && s.strm.avail_in === 0 &&\n         len === left ? 1 : 0;\n    _tr_stored_block(s, s.block_start, len, last);\n    s.block_start += len;\n    flush_pending(s.strm);\n  }\n\n  /* We've done all we can with the available input and output. */\n  return last ? BS_FINISH_STARTED : BS_NEED_MORE;\n};\n\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nconst deflate_fast = (s, flush) => {\n\n  let hash_head;        /* head of the hash chain */\n  let bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + 1]);\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nconst deflate_slow = (s, flush) => {\n\n  let hash_head;          /* head of hash chain */\n  let bflush;              /* set if current block must be flushed */\n\n  let max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = _tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n};\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nconst deflate_rle = (s, flush) => {\n\n  let bflush;            /* set if current block must be flushed */\n  let prev;              /* byte at distance one to match */\n  let scan, strend;      /* scan goes up to strend for length of run */\n\n  const _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nconst deflate_huff = (s, flush) => {\n\n  let bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH$2) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nconst configuration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nconst lm_init = (s) => {\n\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n};\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED$2; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new Uint16Array(HEAP_SIZE * 2);\n  this.dyn_dtree  = new Uint16Array((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new Uint16Array((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new Uint16Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new Uint16Array(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new Uint16Array(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.sym_buf = 0;        /* buffer for distances and literals/lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.sym_next = 0;      /* running index in sym_buf */\n  this.sym_end = 0;       /* symbol table full when sym_next reaches this */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\n/* =========================================================================\n * Check for a valid deflate stream state. Return 0 if ok, 1 if not.\n */\nconst deflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const s = strm.state;\n  if (!s || s.strm !== strm || (s.status !== INIT_STATE &&\n//#ifdef GZIP\n                                s.status !== GZIP_STATE &&\n//#endif\n                                s.status !== EXTRA_STATE &&\n                                s.status !== NAME_STATE &&\n                                s.status !== COMMENT_STATE &&\n                                s.status !== HCRC_STATE &&\n                                s.status !== BUSY_STATE &&\n                                s.status !== FINISH_STATE)) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst deflateResetKeep = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  const s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status =\n//#ifdef GZIP\n    s.wrap === 2 ? GZIP_STATE :\n//#endif\n    s.wrap ? INIT_STATE : BUSY_STATE;\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = -2;\n  _tr_init(s);\n  return Z_OK$3;\n};\n\n\nconst deflateReset = (strm) => {\n\n  const ret = deflateResetKeep(strm);\n  if (ret === Z_OK$3) {\n    lm_init(strm.state);\n  }\n  return ret;\n};\n\n\nconst deflateSetHeader = (strm, head) => {\n\n  if (deflateStateCheck(strm) || strm.state.wrap !== 2) {\n    return Z_STREAM_ERROR$2;\n  }\n  strm.state.gzhead = head;\n  return Z_OK$3;\n};\n\n\nconst deflateInit2 = (strm, level, method, windowBits, memLevel, strategy) => {\n\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR$2;\n  }\n  let wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION$1) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED$2 ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED || (windowBits === 8 && wrap !== 1)) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  const s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n  s.status = INIT_STATE;     /* to pass state test in deflateReset() */\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new Uint8Array(s.w_size * 2);\n  s.head = new Uint16Array(s.hash_size);\n  s.prev = new Uint16Array(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  /* We overlay pending_buf and sym_buf. This works since the average size\n   * for length/distance pairs over any compressed block is assured to be 31\n   * bits or less.\n   *\n   * Analysis: The longest fixed codes are a length code of 8 bits plus 5\n   * extra bits, for lengths 131 to 257. The longest fixed distance codes are\n   * 5 bits plus 13 extra bits, for distances 16385 to 32768. The longest\n   * possible fixed-codes length/distance pair is then 31 bits total.\n   *\n   * sym_buf starts one-fourth of the way into pending_buf. So there are\n   * three bytes in sym_buf for every four bytes in pending_buf. Each symbol\n   * in sym_buf is three bytes -- two for the distance and one for the\n   * literal/length. As each symbol is consumed, the pointer to the next\n   * sym_buf value to read moves forward three bytes. From that symbol, up to\n   * 31 bits are written to pending_buf. The closest the written pending_buf\n   * bits gets to the next sym_buf symbol to read is just before the last\n   * code is written. At that time, 31*(n-2) bits have been written, just\n   * after 24*(n-2) bits have been consumed from sym_buf. sym_buf starts at\n   * 8*n bits into pending_buf. (Note that the symbol buffer fills when n-1\n   * symbols are written.) The closest the writing gets to what is unread is\n   * then n+14 bits. Here n is lit_bufsize, which is 16384 by default, and\n   * can range from 128 to 32768.\n   *\n   * Therefore, at a minimum, there are 142 bits of space between what is\n   * written and what is read in the overlain buffers, so the symbols cannot\n   * be overwritten by the compressed data. That space is actually 139 bits,\n   * due to the three-bit fixed-code block header.\n   *\n   * That covers the case where either Z_FIXED is specified, forcing fixed\n   * codes, or when the use of fixed codes is chosen, because that choice\n   * results in a smaller compressed block than dynamic codes. That latter\n   * condition then assures that the above analysis also covers all dynamic\n   * blocks. A dynamic-code block will only be chosen to be emitted if it has\n   * fewer bits than a fixed-code block would for the same set of symbols.\n   * Therefore its average symbol length is assured to be less than 31. So\n   * the compressed data for a dynamic block also cannot overwrite the\n   * symbols from which it is being constructed.\n   */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n  s.pending_buf = new Uint8Array(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->sym_buf = s->pending_buf + s->lit_bufsize;\n  s.sym_buf = s.lit_bufsize;\n\n  //s->sym_end = (s->lit_bufsize - 1) * 3;\n  s.sym_end = (s.lit_bufsize - 1) * 3;\n  /* We avoid equality with lit_bufsize*3 because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n};\n\nconst deflateInit = (strm, level) => {\n\n  return deflateInit2(strm, level, Z_DEFLATED$2, MAX_WBITS$1, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY$1);\n};\n\n\n/* ========================================================================= */\nconst deflate$2 = (strm, flush) => {\n\n  if (deflateStateCheck(strm) || flush > Z_BLOCK$1 || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR$2) : Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n\n  if (!strm.output ||\n      (strm.avail_in !== 0 && !strm.input) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH$3)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR$1 : Z_STREAM_ERROR$2);\n  }\n\n  const old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH$3) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* Write the header */\n  if (s.status === INIT_STATE && s.wrap === 0) {\n    s.status = BUSY_STATE;\n  }\n  if (s.status === INIT_STATE) {\n    /* zlib header */\n    let header = (Z_DEFLATED$2 + ((s.w_bits - 8) << 4)) << 8;\n    let level_flags = -1;\n\n    if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n      level_flags = 0;\n    } else if (s.level < 6) {\n      level_flags = 1;\n    } else if (s.level === 6) {\n      level_flags = 2;\n    } else {\n      level_flags = 3;\n    }\n    header |= (level_flags << 6);\n    if (s.strstart !== 0) { header |= PRESET_DICT; }\n    header += 31 - (header % 31);\n\n    putShortMSB(s, header);\n\n    /* Save the adler32 of the preset dictionary: */\n    if (s.strstart !== 0) {\n      putShortMSB(s, strm.adler >>> 16);\n      putShortMSB(s, strm.adler & 0xffff);\n    }\n    strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n  }\n//#ifdef GZIP\n  if (s.status === GZIP_STATE) {\n    /* gzip header */\n    strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n    put_byte(s, 31);\n    put_byte(s, 139);\n    put_byte(s, 8);\n    if (!s.gzhead) { // s->gzhead == Z_NULL\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, OS_CODE);\n      s.status = BUSY_STATE;\n\n      /* Compression must start with an empty pending buffer */\n      flush_pending(strm);\n      if (s.pending !== 0) {\n        s.last_flush = -1;\n        return Z_OK$3;\n      }\n    }\n    else {\n      put_byte(s, (s.gzhead.text ? 1 : 0) +\n                  (s.gzhead.hcrc ? 2 : 0) +\n                  (!s.gzhead.extra ? 0 : 4) +\n                  (!s.gzhead.name ? 0 : 8) +\n                  (!s.gzhead.comment ? 0 : 16)\n      );\n      put_byte(s, s.gzhead.time & 0xff);\n      put_byte(s, (s.gzhead.time >> 8) & 0xff);\n      put_byte(s, (s.gzhead.time >> 16) & 0xff);\n      put_byte(s, (s.gzhead.time >> 24) & 0xff);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, s.gzhead.os & 0xff);\n      if (s.gzhead.extra && s.gzhead.extra.length) {\n        put_byte(s, s.gzhead.extra.length & 0xff);\n        put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n      }\n      if (s.gzhead.hcrc) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending, 0);\n      }\n      s.gzindex = 0;\n      s.status = EXTRA_STATE;\n    }\n  }\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let left = (s.gzhead.extra.length & 0xffff) - s.gzindex;\n      while (s.pending + left > s.pending_buf_size) {\n        let copy = s.pending_buf_size - s.pending;\n        // zmemcpy(s.pending_buf + s.pending,\n        //    s.gzhead.extra + s.gzindex, copy);\n        s.pending_buf.set(s.gzhead.extra.subarray(s.gzindex, s.gzindex + copy), s.pending);\n        s.pending = s.pending_buf_size;\n        //--- HCRC_UPDATE(beg) ---//\n        if (s.gzhead.hcrc && s.pending > beg) {\n          strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n        }\n        //---//\n        s.gzindex += copy;\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK$3;\n        }\n        beg = 0;\n        left -= copy;\n      }\n      // JS specific: s.gzhead.extra may be TypedArray or Array for backward compatibility\n      //              TypedArray.slice and TypedArray.from don't exist in IE10-IE11\n      let gzhead_extra = new Uint8Array(s.gzhead.extra);\n      // zmemcpy(s->pending_buf + s->pending,\n      //     s->gzhead->extra + s->gzindex, left);\n      s.pending_buf.set(gzhead_extra.subarray(s.gzindex, s.gzindex + left), s.pending);\n      s.pending += left;\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = NAME_STATE;\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK$3;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = COMMENT_STATE;\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK$3;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n    }\n    s.status = HCRC_STATE;\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK$3;\n        }\n      }\n      put_byte(s, strm.adler & 0xff);\n      put_byte(s, (strm.adler >> 8) & 0xff);\n      strm.adler = 0; //crc32(0L, Z_NULL, 0);\n    }\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n  }\n//#endif\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH$2 && s.status !== FINISH_STATE)) {\n    let bstate = s.level === 0 ? deflate_stored(s, flush) :\n                 s.strategy === Z_HUFFMAN_ONLY ? deflate_huff(s, flush) :\n                 s.strategy === Z_RLE ? deflate_rle(s, flush) :\n                 configuration_table[s.level].func(s, flush);\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK$3;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        _tr_align(s);\n      }\n      else if (flush !== Z_BLOCK$1) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        _tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH$1) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK$3;\n      }\n    }\n  }\n\n  if (flush !== Z_FINISH$3) { return Z_OK$3; }\n  if (s.wrap <= 0) { return Z_STREAM_END$3; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK$3 : Z_STREAM_END$3;\n};\n\n\nconst deflateEnd = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const status = strm.state.status;\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR$2) : Z_OK$3;\n};\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nconst deflateSetDictionary = (strm, dictionary) => {\n\n  let dictLength = dictionary.length;\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n  const wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32_1(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    let tmpDict = new Uint8Array(s.w_size);\n    tmpDict.set(dictionary.subarray(dictLength - s.w_size, dictLength), 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  const avail = strm.avail_in;\n  const next = strm.next_in;\n  const input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    let str = s.strstart;\n    let n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK$3;\n};\n\n\nvar deflateInit_1 = deflateInit;\nvar deflateInit2_1 = deflateInit2;\nvar deflateReset_1 = deflateReset;\nvar deflateResetKeep_1 = deflateResetKeep;\nvar deflateSetHeader_1 = deflateSetHeader;\nvar deflate_2$1 = deflate$2;\nvar deflateEnd_1 = deflateEnd;\nvar deflateSetDictionary_1 = deflateSetDictionary;\nvar deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.deflateBound = deflateBound;\nmodule.exports.deflateCopy = deflateCopy;\nmodule.exports.deflateGetDictionary = deflateGetDictionary;\nmodule.exports.deflateParams = deflateParams;\nmodule.exports.deflatePending = deflatePending;\nmodule.exports.deflatePrime = deflatePrime;\nmodule.exports.deflateTune = deflateTune;\n*/\n\nvar deflate_1$2 = {\n\tdeflateInit: deflateInit_1,\n\tdeflateInit2: deflateInit2_1,\n\tdeflateReset: deflateReset_1,\n\tdeflateResetKeep: deflateResetKeep_1,\n\tdeflateSetHeader: deflateSetHeader_1,\n\tdeflate: deflate_2$1,\n\tdeflateEnd: deflateEnd_1,\n\tdeflateSetDictionary: deflateSetDictionary_1,\n\tdeflateInfo: deflateInfo\n};\n\nconst _has = (obj, key) => {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\n\nvar assign = function (obj /*from1, from2, from3, ...*/) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    const source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (const p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// Join array of chunks to single array.\nvar flattenChunks = (chunks) => {\n  // calculate data length\n  let len = 0;\n\n  for (let i = 0, l = chunks.length; i < l; i++) {\n    len += chunks[i].length;\n  }\n\n  // join chunks\n  const result = new Uint8Array(len);\n\n  for (let i = 0, pos = 0, l = chunks.length; i < l; i++) {\n    let chunk = chunks[i];\n    result.set(chunk, pos);\n    pos += chunk.length;\n  }\n\n  return result;\n};\n\nvar common = {\n\tassign: assign,\n\tflattenChunks: flattenChunks\n};\n\n// String encode/decode helpers\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nlet STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nconst _utf8len = new Uint8Array(256);\nfor (let q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nvar string2buf = (str) => {\n  if (typeof TextEncoder === 'function' && TextEncoder.prototype.encode) {\n    return new TextEncoder().encode(str);\n  }\n\n  let buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new Uint8Array(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper\nconst buf2binstring = (buf, len) => {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if (buf.subarray && STR_APPLY_UIA_OK) {\n      return String.fromCharCode.apply(null, buf.length === len ? buf : buf.subarray(0, len));\n    }\n  }\n\n  let result = '';\n  for (let i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n};\n\n\n// convert array to string\nvar buf2string = (buf, max) => {\n  const len = max || buf.length;\n\n  if (typeof TextDecoder === 'function' && TextDecoder.prototype.decode) {\n    return new TextDecoder().decode(buf.subarray(0, max));\n  }\n\n  let i, out;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  const utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    let c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    let c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nvar utf8border = (buf, max) => {\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  let pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n\nvar strings = {\n\tstring2buf: string2buf,\n\tbuf2string: buf2string,\n\tutf8border: utf8border\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nvar zstream = ZStream;\n\nconst toString$1 = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$1, Z_SYNC_FLUSH, Z_FULL_FLUSH, Z_FINISH: Z_FINISH$2,\n  Z_OK: Z_OK$2, Z_STREAM_END: Z_STREAM_END$2,\n  Z_DEFAULT_COMPRESSION,\n  Z_DEFAULT_STRATEGY,\n  Z_DEFLATED: Z_DEFLATED$1\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n *   , chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate$1(options) {\n  this.options = common.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED$1,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY\n  }, options || {});\n\n  let opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new zstream();\n  this.strm.avail_out = 0;\n\n  let status = deflate_1$2.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK$2) {\n    throw new Error(messages[status]);\n  }\n\n  if (opt.header) {\n    deflate_1$2.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    let dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString$1.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = deflate_1$2.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK$2) {\n      throw new Error(messages[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must\n * have `flush_mode` Z_FINISH (or `true`). That will flush internal pending\n * buffers and call [[Deflate#onEnd]].\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  let status, _flush_mode;\n\n  if (this.ended) { return false; }\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH$2 : Z_NO_FLUSH$1;\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString$1.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    // Make sure avail_out > 6 to avoid repeating markers\n    if ((_flush_mode === Z_SYNC_FLUSH || _flush_mode === Z_FULL_FLUSH) && strm.avail_out <= 6) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    status = deflate_1$2.deflate(strm, _flush_mode);\n\n    // Ended => flush and finish\n    if (status === Z_STREAM_END$2) {\n      if (strm.next_out > 0) {\n        this.onData(strm.output.subarray(0, strm.next_out));\n      }\n      status = deflate_1$2.deflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return status === Z_OK$2;\n    }\n\n    // Flush if out buffer full\n    if (strm.avail_out === 0) {\n      this.onData(strm.output);\n      continue;\n    }\n\n    // Flush if requested and has data\n    if (_flush_mode > 0 && strm.next_out > 0) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array): output data.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK$2) {\n    this.result = common.flattenChunks(this.chunks);\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const data = new Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate$1(input, options) {\n  const deflator = new Deflate$1(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || messages[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate$1(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip$1(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate$1(input, options);\n}\n\n\nvar Deflate_1$1 = Deflate$1;\nvar deflate_2 = deflate$1;\nvar deflateRaw_1$1 = deflateRaw$1;\nvar gzip_1$1 = gzip$1;\nvar constants$1 = constants$2;\n\nvar deflate_1$1 = {\n\tDeflate: Deflate_1$1,\n\tdeflate: deflate_2,\n\tdeflateRaw: deflateRaw_1$1,\n\tgzip: gzip_1$1,\n\tconstants: constants$1\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nconst BAD$1 = 16209;       /* got a data error -- remain here until reset */\nconst TYPE$1 = 16191;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nvar inffast = function inflate_fast(strm, start) {\n  let _in;                    /* local strm.input */\n  let last;                   /* have enough input while in < last */\n  let _out;                   /* local strm.output */\n  let beg;                    /* inflate()'s initial strm.output */\n  let end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  let dmax;                   /* maximum distance from zlib header */\n//#endif\n  let wsize;                  /* window size or zero if not using window */\n  let whave;                  /* valid bytes in the window */\n  let wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  let s_window;               /* allocated sliding window, if wsize != 0 */\n  let hold;                   /* local strm.hold */\n  let bits;                   /* local strm.bits */\n  let lcode;                  /* local strm.lencode */\n  let dcode;                  /* local strm.distcode */\n  let lmask;                  /* mask for first level of length codes */\n  let dmask;                  /* mask for first level of distance codes */\n  let here;                   /* retrieved table entry */\n  let op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  let len;                    /* match length, unused bytes */\n  let dist;                   /* match distance */\n  let from;                   /* where to copy match from */\n  let from_source;\n\n\n  let input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  const state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD$1;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD$1;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD$1;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE$1;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD$1;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst MAXBITS = 15;\nconst ENOUGH_LENS$1 = 852;\nconst ENOUGH_DISTS$1 = 592;\n//const ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst CODES$1 = 0;\nconst LENS$1 = 1;\nconst DISTS$1 = 2;\n\nconst lbase = new Uint16Array([ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n]);\n\nconst lext = new Uint8Array([ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n]);\n\nconst dbase = new Uint16Array([ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n]);\n\nconst dext = new Uint8Array([ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n]);\n\nconst inflate_table = (type, lens, lens_index, codes, table, table_index, work, opts) =>\n{\n  const bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  let len = 0;               /* a code's length in bits */\n  let sym = 0;               /* index of code symbols */\n  let min = 0, max = 0;          /* minimum and maximum code lengths */\n  let root = 0;              /* number of index bits for root table */\n  let curr = 0;              /* number of index bits for current table */\n  let drop = 0;              /* code bits to drop for sub-table */\n  let left = 0;                   /* number of prefix codes available */\n  let used = 0;              /* code entries in table used */\n  let huff = 0;              /* Huffman code */\n  let incr;              /* for incrementing code, index */\n  let fill;              /* index for replicating entries */\n  let low;               /* low bits for current root entry */\n  let mask;              /* mask for low root bits */\n  let next;             /* next available space in table */\n  let base = null;     /* base value table to use */\n//  let shoextra;    /* extra bits table to use */\n  let match;                  /* use base and extra for symbol >= match */\n  const count = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  const offs = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  let extra = null;\n\n  let here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES$1 || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES$1) {\n    base = extra = work;    /* dummy value--not used */\n    match = 20;\n\n  } else if (type === LENS$1) {\n    base = lbase;\n    extra = lext;\n    match = 257;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    match = 0;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n    (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] + 1 < match) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] >= match) {\n      here_op = extra[work[sym] - match];\n      here_val = base[work[sym] - match];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n        (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n\n\nvar inftrees = inflate_table;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n\n\n\n\n\nconst CODES = 0;\nconst LENS = 1;\nconst DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_FINISH: Z_FINISH$1, Z_BLOCK, Z_TREES,\n  Z_OK: Z_OK$1, Z_STREAM_END: Z_STREAM_END$1, Z_NEED_DICT: Z_NEED_DICT$1, Z_STREAM_ERROR: Z_STREAM_ERROR$1, Z_DATA_ERROR: Z_DATA_ERROR$1, Z_MEM_ERROR: Z_MEM_ERROR$1, Z_BUF_ERROR,\n  Z_DEFLATED\n} = constants$2;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nconst    HEAD = 16180;       /* i: waiting for magic header */\nconst    FLAGS = 16181;      /* i: waiting for method and flags (gzip) */\nconst    TIME = 16182;       /* i: waiting for modification time (gzip) */\nconst    OS = 16183;         /* i: waiting for extra flags and operating system (gzip) */\nconst    EXLEN = 16184;      /* i: waiting for extra length (gzip) */\nconst    EXTRA = 16185;      /* i: waiting for extra bytes (gzip) */\nconst    NAME = 16186;       /* i: waiting for end of file name (gzip) */\nconst    COMMENT = 16187;    /* i: waiting for end of comment (gzip) */\nconst    HCRC = 16188;       /* i: waiting for header crc (gzip) */\nconst    DICTID = 16189;    /* i: waiting for dictionary check value */\nconst    DICT = 16190;      /* waiting for inflateSetDictionary() call */\nconst        TYPE = 16191;      /* i: waiting for type bits, including last-flag bit */\nconst        TYPEDO = 16192;    /* i: same, but skip check to exit inflate on new block */\nconst        STORED = 16193;    /* i: waiting for stored size (length and complement) */\nconst        COPY_ = 16194;     /* i/o: same as COPY below, but only first time in */\nconst        COPY = 16195;      /* i/o: waiting for input or output to copy stored block */\nconst        TABLE = 16196;     /* i: waiting for dynamic block table lengths */\nconst        LENLENS = 16197;   /* i: waiting for code length code lengths */\nconst        CODELENS = 16198;  /* i: waiting for length/lit and distance code lengths */\nconst            LEN_ = 16199;      /* i: same as LEN below, but only first time in */\nconst            LEN = 16200;       /* i: waiting for length/lit/eob code */\nconst            LENEXT = 16201;    /* i: waiting for length extra bits */\nconst            DIST = 16202;      /* i: waiting for distance code */\nconst            DISTEXT = 16203;   /* i: waiting for distance extra bits */\nconst            MATCH = 16204;     /* o: waiting for output space to copy string */\nconst            LIT = 16205;       /* o: waiting for output space to write literal */\nconst    CHECK = 16206;     /* i: waiting for 32-bit check value */\nconst    LENGTH = 16207;    /* i: waiting for 32-bit length (gzip) */\nconst    DONE = 16208;      /* finished check, done -- remain here until reset */\nconst    BAD = 16209;       /* got a data error -- remain here until reset */\nconst    MEM = 16210;       /* got an inflate() memory error -- remain here until reset */\nconst    SYNC = 16211;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nconst ENOUGH_LENS = 852;\nconst ENOUGH_DISTS = 592;\n//const ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst MAX_WBITS = 15;\n/* 32K LZ77 window */\nconst DEF_WBITS = MAX_WBITS;\n\n\nconst zswap32 = (q) => {\n\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n};\n\n\nfunction InflateState() {\n  this.strm = null;           /* pointer back to this zlib stream */\n  this.mode = 0;              /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip,\n                                 bit 2 true to validate check value */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib), or\n                                 -1 if raw or no header yet */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new Uint16Array(320); /* temporary storage for code lengths */\n  this.work = new Uint16Array(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new Int32Array(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\n\nconst inflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const state = strm.state;\n  if (!state || state.strm !== strm ||\n    state.mode < HEAD || state.mode > SYNC) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst inflateResetKeep = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.flags = -1;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new Int32Array(ENOUGH_LENS);\n  state.distcode = state.distdyn = new Int32Array(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK$1;\n};\n\n\nconst inflateReset = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n};\n\n\nconst inflateReset2 = (strm, windowBits) => {\n  let wrap;\n\n  /* get the state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 5;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR$1;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n};\n\n\nconst inflateInit2 = (strm, windowBits) => {\n\n  if (!strm) { return Z_STREAM_ERROR$1; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  const state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.strm = strm;\n  state.window = null/*Z_NULL*/;\n  state.mode = HEAD;     /* to pass state test in inflateReset2() */\n  const ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK$1) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n};\n\n\nconst inflateInit = (strm) => {\n\n  return inflateInit2(strm, DEF_WBITS);\n};\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nlet virgin = true;\n\nlet lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\n\nconst fixedtables = (state) => {\n\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    lenfix = new Int32Array(512);\n    distfix = new Int32Array(32);\n\n    /* literal/length table */\n    let sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inftrees(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inftrees(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n};\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nconst updatewindow = (strm, src, end, copy) => {\n\n  let dist;\n  const state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new Uint8Array(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    state.window.set(src.subarray(end - state.wsize, end), 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    state.window.set(src.subarray(end - copy, end - copy + dist), state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      state.window.set(src.subarray(end - copy, end), 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n};\n\n\nconst inflate$2 = (strm, flush) => {\n\n  let state;\n  let input, output;          // input/output buffers\n  let next;                   /* next input INDEX */\n  let put;                    /* next output INDEX */\n  let have, left;             /* available input and output */\n  let hold;                   /* bit buffer */\n  let bits;                   /* bits in bit buffer */\n  let _in, _out;              /* save starting available input and output */\n  let copy;                   /* number of stored or match bytes to copy */\n  let from;                   /* where to copy match bytes from */\n  let from_source;\n  let here = 0;               /* current decoding table entry */\n  let here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //let last;                   /* parent table entry */\n  let last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  let len;                    /* length to copy for repeats, bits to drop */\n  let ret;                    /* return code */\n  const hbuf = new Uint8Array(4);    /* buffer for gzip header crc calculation */\n  let opts;\n\n  let n; // temporary variable for NEED_BITS\n\n  const order = /* permutation of code lengths */\n    new Uint8Array([ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ]);\n\n\n  if (inflateStateCheck(strm) || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK$1;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          if (state.wbits === 0) {\n            state.wbits = 15;\n          }\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        if (len > 15 || len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n\n        // !!! pako patch. Force use `options.windowBits` if passed.\n        // Required to always use max window size by default.\n        state.dmax = 1 << state.wbits;\n        //state.dmax = 1 << len;\n\n        state.flags = 0;               /* indicate zlib header */\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32_1(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Uint8Array(state.head.extra_len);\n              }\n              state.head.extra.set(\n                input.subarray(\n                  next,\n                  // extra field is limited to 65536 bytes\n                  // - no need for additional size check\n                  next + copy\n                ),\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if ((state.flags & 0x0200) && (state.wrap & 4)) {\n              state.check = crc32_1(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT$1;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          output.set(input.subarray(next, next + copy), put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inftrees(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inffast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if ((state.wrap & 4) && _out) {\n            strm.adler = state.check =\n                /*UPDATE_CHECK(state.check, put - _out, _out);*/\n                (state.flags ? crc32_1(state.check, output, _out, put - _out) : adler32_1(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.wrap & 4) && (state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END$1;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR$1;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR$1;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR$1;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH$1))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) ;\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if ((state.wrap & 4) && _out) {\n    strm.adler = state.check = /*UPDATE_CHECK(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32_1(state.check, output, _out, strm.next_out - _out) : adler32_1(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH$1) && ret === Z_OK$1) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n};\n\n\nconst inflateEnd = (strm) => {\n\n  if (inflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  let state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK$1;\n};\n\n\nconst inflateGetHeader = (strm, head) => {\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR$1; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK$1;\n};\n\n\nconst inflateSetDictionary = (strm, dictionary) => {\n  const dictLength = dictionary.length;\n\n  let state;\n  let dictid;\n  let ret;\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32_1(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR$1;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR$1;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK$1;\n};\n\n\nvar inflateReset_1 = inflateReset;\nvar inflateReset2_1 = inflateReset2;\nvar inflateResetKeep_1 = inflateResetKeep;\nvar inflateInit_1 = inflateInit;\nvar inflateInit2_1 = inflateInit2;\nvar inflate_2$1 = inflate$2;\nvar inflateEnd_1 = inflateEnd;\nvar inflateGetHeader_1 = inflateGetHeader;\nvar inflateSetDictionary_1 = inflateSetDictionary;\nvar inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.inflateCodesUsed = inflateCodesUsed;\nmodule.exports.inflateCopy = inflateCopy;\nmodule.exports.inflateGetDictionary = inflateGetDictionary;\nmodule.exports.inflateMark = inflateMark;\nmodule.exports.inflatePrime = inflatePrime;\nmodule.exports.inflateSync = inflateSync;\nmodule.exports.inflateSyncPoint = inflateSyncPoint;\nmodule.exports.inflateUndermine = inflateUndermine;\nmodule.exports.inflateValidate = inflateValidate;\n*/\n\nvar inflate_1$2 = {\n\tinflateReset: inflateReset_1,\n\tinflateReset2: inflateReset2_1,\n\tinflateResetKeep: inflateResetKeep_1,\n\tinflateInit: inflateInit_1,\n\tinflateInit2: inflateInit2_1,\n\tinflate: inflate_2$1,\n\tinflateEnd: inflateEnd_1,\n\tinflateGetHeader: inflateGetHeader_1,\n\tinflateSetDictionary: inflateSetDictionary_1,\n\tinflateInfo: inflateInfo\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nvar gzheader = GZheader;\n\nconst toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH, Z_FINISH,\n  Z_OK, Z_STREAM_END, Z_NEED_DICT, Z_STREAM_ERROR, Z_DATA_ERROR, Z_MEM_ERROR\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n * const chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate$1(options) {\n  this.options = common.assign({\n    chunkSize: 1024 * 64,\n    windowBits: 15,\n    to: ''\n  }, options || {});\n\n  const opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new zstream();\n  this.strm.avail_out = 0;\n\n  let status  = inflate_1$2.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(messages[status]);\n  }\n\n  this.header = new gzheader();\n\n  inflate_1$2.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = inflate_1$2.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== Z_OK) {\n        throw new Error(messages[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer): input data\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE\n *   flush modes. See constants. Skipped or `false` means Z_NO_FLUSH,\n *   `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. If end of stream detected,\n * [[Inflate#onEnd]] will be called.\n *\n * `flush_mode` is not needed for normal operation, because end of stream\n * detected automatically. You may try to use it for advanced things, but\n * this functionality was not tested.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  const dictionary = this.options.dictionary;\n  let status, _flush_mode, last_avail_out;\n\n  if (this.ended) return false;\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH : Z_NO_FLUSH;\n\n  // Convert data if needed\n  if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = inflate_1$2.inflate(strm, _flush_mode);\n\n    if (status === Z_NEED_DICT && dictionary) {\n      status = inflate_1$2.inflateSetDictionary(strm, dictionary);\n\n      if (status === Z_OK) {\n        status = inflate_1$2.inflate(strm, _flush_mode);\n      } else if (status === Z_DATA_ERROR) {\n        // Replace code with more verbose\n        status = Z_NEED_DICT;\n      }\n    }\n\n    // Skip snyc markers if more data follows and not raw mode\n    while (strm.avail_in > 0 &&\n           status === Z_STREAM_END &&\n           strm.state.wrap > 0 &&\n           data[strm.next_in] !== 0)\n    {\n      inflate_1$2.inflateReset(strm);\n      status = inflate_1$2.inflate(strm, _flush_mode);\n    }\n\n    switch (status) {\n      case Z_STREAM_ERROR:\n      case Z_DATA_ERROR:\n      case Z_NEED_DICT:\n      case Z_MEM_ERROR:\n        this.onEnd(status);\n        this.ended = true;\n        return false;\n    }\n\n    // Remember real `avail_out` value, because we may patch out buffer content\n    // to align utf8 strings boundaries.\n    last_avail_out = strm.avail_out;\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === Z_STREAM_END) {\n\n        if (this.options.to === 'string') {\n\n          let next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          let tail = strm.next_out - next_out_utf8;\n          let utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail & realign counters\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) strm.output.set(strm.output.subarray(next_out_utf8, next_out_utf8 + tail), 0);\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(strm.output.length === strm.next_out ? strm.output : strm.output.subarray(0, strm.next_out));\n        }\n      }\n    }\n\n    // Must repeat iteration if out buffer is full\n    if (status === Z_OK && last_avail_out === 0) continue;\n\n    // Finalize if end of stream reached.\n    if (status === Z_STREAM_END) {\n      status = inflate_1$2.inflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return true;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|String): output data. When string output requested,\n *   each chunk will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = common.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako');\n * const input = pako.deflate(new Uint8Array([1,2,3,4,5,6,7,8,9]));\n * let output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err) {\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate$1(input, options) {\n  const inflator = new Inflate$1(options);\n\n  inflator.push(input);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) throw inflator.msg || messages[inflator.err];\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate$1(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nvar Inflate_1$1 = Inflate$1;\nvar inflate_2 = inflate$1;\nvar inflateRaw_1$1 = inflateRaw$1;\nvar ungzip$1 = inflate$1;\nvar constants = constants$2;\n\nvar inflate_1$1 = {\n\tInflate: Inflate_1$1,\n\tinflate: inflate_2,\n\tinflateRaw: inflateRaw_1$1,\n\tungzip: ungzip$1,\n\tconstants: constants\n};\n\nconst { Deflate, deflate, deflateRaw, gzip } = deflate_1$1;\n\nconst { Inflate, inflate, inflateRaw, ungzip } = inflate_1$1;\n\n\n\nvar Deflate_1 = Deflate;\nvar deflate_1 = deflate;\nvar deflateRaw_1 = deflateRaw;\nvar gzip_1 = gzip;\nvar Inflate_1 = Inflate;\nvar inflate_1 = inflate;\nvar inflateRaw_1 = inflateRaw;\nvar ungzip_1 = ungzip;\nvar constants_1 = constants$2;\n\nvar pako = {\n\tDeflate: Deflate_1,\n\tdeflate: deflate_1,\n\tdeflateRaw: deflateRaw_1,\n\tgzip: gzip_1,\n\tInflate: Inflate_1,\n\tinflate: inflate_1,\n\tinflateRaw: inflateRaw_1,\n\tungzip: ungzip_1,\n\tconstants: constants_1\n};\n\nexport { Deflate_1 as Deflate, Inflate_1 as Inflate, constants_1 as constants, pako as default, deflate_1 as deflate, deflateRaw_1 as deflateRaw, gzip_1 as gzip, inflate_1 as inflate, inflateRaw_1 as inflateRaw, ungzip_1 as ungzip };\n", "const crcTable = [];\nfor (let n = 0; n < 256; n++) {\n    let c = n;\n    for (let k = 0; k < 8; k++) {\n        if (c & 1) {\n            c = 0xedb88320 ^ (c >>> 1);\n        }\n        else {\n            c = c >>> 1;\n        }\n    }\n    crcTable[n] = c;\n}\nconst initialCrc = 0xffffffff;\nfunction updateCrc(currentCrc, data, length) {\n    let c = currentCrc;\n    for (let n = 0; n < length; n++) {\n        c = crcTable[(c ^ data[n]) & 0xff] ^ (c >>> 8);\n    }\n    return c;\n}\nfunction crc(data, length) {\n    return (updateCrc(initialCrc, data, length) ^ initialCrc) >>> 0;\n}\nexport function checkCrc(buffer, crcLength, chunkName) {\n    const expectedCrc = buffer.readUint32();\n    const actualCrc = crc(new Uint8Array(buffer.buffer, buffer.byteOffset + buffer.offset - crcLength - 4, crcLength), crcLength); // \"- 4\" because we already advanced by reading the CRC\n    if (actualCrc !== expectedCrc) {\n        throw new Error(`CRC mismatch for chunk ${chunkName}. Expected ${expectedCrc}, found ${actualCrc}`);\n    }\n}\nexport function writeCrc(buffer, length) {\n    buffer.writeUint32(crc(new Uint8Array(buffer.buffer, buffer.byteOffset + buffer.offset - length, length), length));\n}\n", "export function unfilterNone(currentLine, newLine, bytesPerLine) {\n    for (let i = 0; i < bytesPerLine; i++) {\n        newLine[i] = currentLine[i];\n    }\n}\nexport function unfilterSub(currentLine, newLine, bytesPerLine, bytesPerPixel) {\n    let i = 0;\n    for (; i < bytesPerPixel; i++) {\n        // just copy first bytes\n        newLine[i] = currentLine[i];\n    }\n    for (; i < bytesPerLine; i++) {\n        newLine[i] = (currentLine[i] + newLine[i - bytesPerPixel]) & 0xff;\n    }\n}\nexport function unfilterUp(currentLine, newLine, prevLine, bytesPerLine) {\n    let i = 0;\n    if (prevLine.length === 0) {\n        // just copy bytes for first line\n        for (; i < bytesPerLine; i++) {\n            newLine[i] = currentLine[i];\n        }\n    }\n    else {\n        for (; i < bytesPerLine; i++) {\n            newLine[i] = (currentLine[i] + prevLine[i]) & 0xff;\n        }\n    }\n}\nexport function unfilterAverage(currentLine, newLine, prevLine, bytesPerLine, bytesPerPixel) {\n    let i = 0;\n    if (prevLine.length === 0) {\n        for (; i < bytesPerPixel; i++) {\n            newLine[i] = currentLine[i];\n        }\n        for (; i < bytesPerLine; i++) {\n            newLine[i] = (currentLine[i] + (newLine[i - bytesPerPixel] >> 1)) & 0xff;\n        }\n    }\n    else {\n        for (; i < bytesPerPixel; i++) {\n            newLine[i] = (currentLine[i] + (prevLine[i] >> 1)) & 0xff;\n        }\n        for (; i < bytesPerLine; i++) {\n            newLine[i] =\n                (currentLine[i] + ((newLine[i - bytesPerPixel] + prevLine[i]) >> 1)) &\n                    0xff;\n        }\n    }\n}\nexport function unfilterPaeth(currentLine, newLine, prevLine, bytesPerLine, bytesPerPixel) {\n    let i = 0;\n    if (prevLine.length === 0) {\n        for (; i < bytesPerPixel; i++) {\n            newLine[i] = currentLine[i];\n        }\n        for (; i < bytesPerLine; i++) {\n            newLine[i] = (currentLine[i] + newLine[i - bytesPerPixel]) & 0xff;\n        }\n    }\n    else {\n        for (; i < bytesPerPixel; i++) {\n            newLine[i] = (currentLine[i] + prevLine[i]) & 0xff;\n        }\n        for (; i < bytesPerLine; i++) {\n            newLine[i] =\n                (currentLine[i] +\n                    paethPredictor(newLine[i - bytesPerPixel], prevLine[i], prevLine[i - bytesPerPixel])) &\n                    0xff;\n        }\n    }\n}\nfunction paethPredictor(a, b, c) {\n    const p = a + b - c;\n    const pa = Math.abs(p - a);\n    const pb = Math.abs(p - b);\n    const pc = Math.abs(p - c);\n    if (pa <= pb && pa <= pc)\n        return a;\n    else if (pb <= pc)\n        return b;\n    else\n        return c;\n}\n", "import { unfilterAverage, unfilterNone, unfilterPaeth, unfilterSub, unfilterUp, } from './unfilter';\n/**\n * Apllies filter on scanline based on the filter type.\n * @param filterType - The filter type to apply.\n * @param currentLine - The current line of pixel data.\n * @param newLine - The new line of pixel data.\n * @param prevLine - The previous line of pixel data.\n * @param passLineBytes - The number of bytes in the pass line.\n * @param bytesPerPixel - The number of bytes per pixel.\n */\nexport function applyUnfilter(filterType, currentLine, newLine, prevLine, passLineBytes, bytesPerPixel) {\n    switch (filterType) {\n        case 0:\n            unfilterNone(currentLine, newLine, passLineBytes);\n            break;\n        case 1:\n            unfilterSub(currentLine, newLine, passLineBytes, bytesPerPixel);\n            break;\n        case 2:\n            unfilterUp(currentLine, newLine, prevLine, passLineBytes);\n            break;\n        case 3:\n            unfilterAverage(currentLine, newLine, prevLine, passLineBytes, bytesPerPixel);\n            break;\n        case 4:\n            unfilterPaeth(currentLine, newLine, prevLine, passLineBytes, bytesPerPixel);\n            break;\n        default:\n            throw new Error(`Unsupported filter: ${filterType}`);\n    }\n}\n", "import { applyUnfilter } from './applyUnfilter';\nconst uint16 = new Uint16Array([0x00ff]);\nconst uint8 = new Uint8Array(uint16.buffer);\nconst osIsLittleEndian = uint8[0] === 0xff;\n/**\n * Decodes the Adam7 interlaced PNG data.\n *\n * @param params - DecodeInterlaceNullParams\n * @returns - array of pixel data.\n */\nexport function decodeInterlaceAdam7(params) {\n    const { data, width, height, channels, depth } = params;\n    // Adam7 interlacing pattern\n    const passes = [\n        { x: 0, y: 0, xStep: 8, yStep: 8 }, // Pass 1\n        { x: 4, y: 0, xStep: 8, yStep: 8 }, // Pass 2\n        { x: 0, y: 4, xStep: 4, yStep: 8 }, // Pass 3\n        { x: 2, y: 0, xStep: 4, yStep: 4 }, // Pass 4\n        { x: 0, y: 2, xStep: 2, yStep: 4 }, // Pass 5\n        { x: 1, y: 0, xStep: 2, yStep: 2 }, // Pass 6\n        { x: 0, y: 1, xStep: 1, yStep: 2 }, // Pass 7\n    ];\n    const bytesPerPixel = Math.ceil(depth / 8) * channels;\n    const resultData = new Uint8Array(height * width * bytesPerPixel);\n    let offset = 0;\n    // Process each pass\n    for (let passIndex = 0; passIndex < 7; passIndex++) {\n        const pass = passes[passIndex];\n        // Calculate pass dimensions\n        const passWidth = Math.ceil((width - pass.x) / pass.xStep);\n        const passHeight = Math.ceil((height - pass.y) / pass.yStep);\n        if (passWidth <= 0 || passHeight <= 0)\n            continue;\n        const passLineBytes = passWidth * bytesPerPixel;\n        const prevLine = new Uint8Array(passLineBytes);\n        // Process each scanline in this pass\n        for (let y = 0; y < passHeight; y++) {\n            // First byte is the filter type\n            const filterType = data[offset++];\n            const currentLine = data.subarray(offset, offset + passLineBytes);\n            offset += passLineBytes;\n            // Create a new line for the unfiltered data\n            const newLine = new Uint8Array(passLineBytes);\n            // Apply the appropriate unfilter\n            applyUnfilter(filterType, currentLine, newLine, prevLine, passLineBytes, bytesPerPixel);\n            prevLine.set(newLine);\n            for (let x = 0; x < passWidth; x++) {\n                const outputX = pass.x + x * pass.xStep;\n                const outputY = pass.y + y * pass.yStep;\n                if (outputX >= width || outputY >= height)\n                    continue;\n                for (let i = 0; i < bytesPerPixel; i++) {\n                    resultData[(outputY * width + outputX) * bytesPerPixel + i] =\n                        newLine[x * bytesPerPixel + i];\n                }\n            }\n        }\n    }\n    if (depth === 16) {\n        const uint16Data = new Uint16Array(resultData.buffer);\n        if (osIsLittleEndian) {\n            for (let k = 0; k < uint16Data.length; k++) {\n                // PNG is always big endian. Swap the bytes.\n                uint16Data[k] = swap16(uint16Data[k]);\n            }\n        }\n        return uint16Data;\n    }\n    else {\n        return resultData;\n    }\n}\nfunction swap16(val) {\n    return ((val & 0xff) << 8) | ((val >> 8) & 0xff);\n}\n", "import { unfilterAverage, unfilterNone, unfilterPaeth, unfilterSub, unfilterUp, } from './unfilter';\nconst uint16 = new Uint16Array([0x00ff]);\nconst uint8 = new Uint8Array(uint16.buffer);\nconst osIsLittleEndian = uint8[0] === 0xff;\nconst empty = new Uint8Array(0);\nexport function decodeInterlaceNull(params) {\n    const { data, width, height, channels, depth } = params;\n    const bytesPerPixel = Math.ceil(depth / 8) * channels;\n    const bytesPerLine = Math.ceil((depth / 8) * channels * width);\n    const newData = new Uint8Array(height * bytesPerLine);\n    let prevLine = empty;\n    let offset = 0;\n    let currentLine;\n    let newLine;\n    for (let i = 0; i < height; i++) {\n        currentLine = data.subarray(offset + 1, offset + 1 + bytesPerLine);\n        newLine = newData.subarray(i * bytesPerLine, (i + 1) * bytesPerLine);\n        switch (data[offset]) {\n            case 0:\n                unfilterNone(currentLine, newLine, bytesPerLine);\n                break;\n            case 1:\n                unfilterSub(currentLine, newLine, bytesPerLine, bytesPerPixel);\n                break;\n            case 2:\n                unfilterUp(currentLine, newLine, prevLine, bytesPerLine);\n                break;\n            case 3:\n                unfilterAverage(currentLine, newLine, prevLine, bytesPerLine, bytesPerPixel);\n                break;\n            case 4:\n                unfilterPaeth(currentLine, newLine, prevLine, bytesPerLine, bytesPerPixel);\n                break;\n            default:\n                throw new Error(`Unsupported filter: ${data[offset]}`);\n        }\n        prevLine = newLine;\n        offset += bytesPerLine + 1;\n    }\n    if (depth === 16) {\n        const uint16Data = new Uint16Array(newData.buffer);\n        if (osIsLittleEndian) {\n            for (let k = 0; k < uint16Data.length; k++) {\n                // PNG is always big endian. Swap the bytes.\n                uint16Data[k] = swap16(uint16Data[k]);\n            }\n        }\n        return uint16Data;\n    }\n    else {\n        return newData;\n    }\n}\nfunction swap16(val) {\n    return ((val & 0xff) << 8) | ((val >> 8) & 0xff);\n}\n", "// https://www.w3.org/TR/PNG/#5PNG-file-signature\nconst pngSignature = Uint8Array.of(137, 80, 78, 71, 13, 10, 26, 10);\nexport function writeSignature(buffer) {\n    buffer.writeBytes(pngSignature);\n}\nexport function checkSignature(buffer) {\n    if (!hasPngSignature(buffer.readBytes(pngSignature.length))) {\n        throw new Error('wrong PNG signature');\n    }\n}\nexport function hasPngSignature(array) {\n    if (array.length < pngSignature.length) {\n        return false;\n    }\n    for (let i = 0; i < pngSignature.length; i++) {\n        if (array[i] !== pngSignature[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n", "import { writeCrc } from './crc';\n// https://www.w3.org/TR/png/#11tEXt\nexport const textChunkName = 'tEXt';\nconst NULL = 0;\nconst latin1Decoder = new TextDecoder('latin1');\nfunction validateKeyword(keyword) {\n    validateLatin1(keyword);\n    if (keyword.length === 0 || keyword.length > 79) {\n        throw new Error('keyword length must be between 1 and 79');\n    }\n}\n// eslint-disable-next-line no-control-regex\nconst latin1Regex = /^[\\u0000-\\u00FF]*$/;\nfunction validateLatin1(text) {\n    if (!latin1Regex.test(text)) {\n        throw new Error('invalid latin1 text');\n    }\n}\nexport function decodetEXt(text, buffer, length) {\n    const keyword = readKeyword(buffer);\n    text[keyword] = readLatin1(buffer, length - keyword.length - 1);\n}\nexport function encodetEXt(buffer, keyword, text) {\n    validateKeyword(keyword);\n    validateLatin1(text);\n    const length = keyword.length + 1 /* NULL */ + text.length;\n    buffer.writeUint32(length);\n    buffer.writeChars(textChunkName);\n    buffer.writeChars(keyword);\n    buffer.writeByte(NULL);\n    buffer.writeChars(text);\n    writeCrc(buffer, length + 4);\n}\n// https://www.w3.org/TR/png/#11keywords\nexport function readKeyword(buffer) {\n    buffer.mark();\n    while (buffer.readByte() !== NULL) {\n        /* advance */\n    }\n    const end = buffer.offset;\n    buffer.reset();\n    const keyword = latin1Decoder.decode(buffer.readBytes(end - buffer.offset - 1));\n    // NULL\n    buffer.skip(1);\n    validateKeyword(keyword);\n    return keyword;\n}\nexport function readLatin1(buffer, length) {\n    return latin1Decoder.decode(buffer.readBytes(length));\n}\n", "export const ColorType = {\n    UNKNOWN: -1,\n    GREYSCALE: 0,\n    TRUECOLOUR: 2,\n    INDEXED_COLOUR: 3,\n    GREYSCALE_ALPHA: 4,\n    TRUECOLOUR_ALPHA: 6,\n};\nexport const CompressionMethod = {\n    UNKNOWN: -1,\n    DEFLATE: 0,\n};\nexport const FilterMethod = {\n    UNKNOWN: -1,\n    ADAPTIVE: 0,\n};\nexport const InterlaceMethod = {\n    UNKNOWN: -1,\n    NO_INTERLACE: 0,\n    ADAM7: 1,\n};\nexport const DisposeOpType = {\n    NONE: 0,\n    BACKGROUND: 1,\n    PREVIOUS: 2,\n};\nexport const BlendOpType = {\n    SOURCE: 0,\n    OVER: 1,\n};\n", "import { IOBuffer } from 'iobuffer';\nimport { inflate, Inflate as Inflator } from 'pako';\nimport { checkCrc } from './helpers/crc';\nimport { decodeInterlaceAdam7 } from './helpers/decodeInterlaceAdam7';\nimport { decodeInterlaceNull } from './helpers/decodeInterlaceNull';\nimport { checkSignature } from './helpers/signature';\nimport { decodetEXt, readKeyword, textChunkName } from './helpers/text';\nimport { ColorType, CompressionMethod, DisposeOpType, FilterMethod, InterlaceMethod, BlendOpType, } from './internalTypes';\nexport default class PngDecoder extends IOBuffer {\n    _checkCrc;\n    _inflator;\n    _png;\n    _apng;\n    _end;\n    _hasPalette;\n    _palette;\n    _hasTransparency;\n    _transparency;\n    _compressionMethod;\n    _filterMethod;\n    _interlaceMethod;\n    _colorType;\n    _isAnimated;\n    _numberOfFrames;\n    _numberOfPlays;\n    _frames;\n    _writingDataChunks;\n    constructor(data, options = {}) {\n        super(data);\n        const { checkCrc = false } = options;\n        this._checkCrc = checkCrc;\n        this._inflator = new Inflator();\n        this._png = {\n            width: -1,\n            height: -1,\n            channels: -1,\n            data: new Uint8Array(0),\n            depth: 1,\n            text: {},\n        };\n        this._apng = {\n            width: -1,\n            height: -1,\n            channels: -1,\n            depth: 1,\n            numberOfFrames: 1,\n            numberOfPlays: 0,\n            text: {},\n            frames: [],\n        };\n        this._end = false;\n        this._hasPalette = false;\n        this._palette = [];\n        this._hasTransparency = false;\n        this._transparency = new Uint16Array(0);\n        this._compressionMethod = CompressionMethod.UNKNOWN;\n        this._filterMethod = FilterMethod.UNKNOWN;\n        this._interlaceMethod = InterlaceMethod.UNKNOWN;\n        this._colorType = ColorType.UNKNOWN;\n        this._isAnimated = false;\n        this._numberOfFrames = 1;\n        this._numberOfPlays = 0;\n        this._frames = [];\n        this._writingDataChunks = false;\n        // PNG is always big endian\n        // https://www.w3.org/TR/PNG/#7Integers-and-byte-order\n        this.setBigEndian();\n    }\n    decode() {\n        checkSignature(this);\n        while (!this._end) {\n            const length = this.readUint32();\n            const type = this.readChars(4);\n            this.decodeChunk(length, type);\n        }\n        this.decodeImage();\n        return this._png;\n    }\n    decodeApng() {\n        checkSignature(this);\n        while (!this._end) {\n            const length = this.readUint32();\n            const type = this.readChars(4);\n            this.decodeApngChunk(length, type);\n        }\n        this.decodeApngImage();\n        return this._apng;\n    }\n    // https://www.w3.org/TR/PNG/#5Chunk-layout\n    decodeChunk(length, type) {\n        const offset = this.offset;\n        switch (type) {\n            // 11.2 Critical chunks\n            case 'IHDR': // 11.2.2 IHDR Image header\n                this.decodeIHDR();\n                break;\n            case 'PLTE': // 11.2.3 PLTE Palette\n                this.decodePLTE(length);\n                break;\n            case 'IDAT': // 11.2.4 IDAT Image data\n                this.decodeIDAT(length);\n                break;\n            case 'IEND': // 11.2.5 IEND Image trailer\n                this._end = true;\n                break;\n            // 11.3 Ancillary chunks\n            case 'tRNS': // 11.3.2.1 tRNS Transparency\n                this.decodetRNS(length);\n                break;\n            case 'iCCP': // 11.3.3.3 iCCP Embedded ICC profile\n                this.decodeiCCP(length);\n                break;\n            case textChunkName: // 11.3.4.3 tEXt Textual data\n                decodetEXt(this._png.text, this, length);\n                break;\n            case 'pHYs': // 11.3.5.3 pHYs Physical pixel dimensions\n                this.decodepHYs();\n                break;\n            default:\n                this.skip(length);\n                break;\n        }\n        if (this.offset - offset !== length) {\n            throw new Error(`Length mismatch while decoding chunk ${type}`);\n        }\n        if (this._checkCrc) {\n            checkCrc(this, length + 4, type);\n        }\n        else {\n            this.skip(4);\n        }\n    }\n    decodeApngChunk(length, type) {\n        const offset = this.offset;\n        if (type !== 'fdAT' && type !== 'IDAT' && this._writingDataChunks) {\n            this.pushDataToFrame();\n        }\n        switch (type) {\n            case 'acTL':\n                this.decodeACTL();\n                break;\n            case 'fcTL':\n                this.decodeFCTL();\n                break;\n            case 'fdAT':\n                this.decodeFDAT(length);\n                break;\n            default:\n                this.decodeChunk(length, type);\n                this.offset = offset + length;\n                break;\n        }\n        if (this.offset - offset !== length) {\n            throw new Error(`Length mismatch while decoding chunk ${type}`);\n        }\n        if (this._checkCrc) {\n            checkCrc(this, length + 4, type);\n        }\n        else {\n            this.skip(4);\n        }\n    }\n    // https://www.w3.org/TR/PNG/#11IHDR\n    decodeIHDR() {\n        const image = this._png;\n        image.width = this.readUint32();\n        image.height = this.readUint32();\n        image.depth = checkBitDepth(this.readUint8());\n        const colorType = this.readUint8();\n        this._colorType = colorType;\n        let channels;\n        switch (colorType) {\n            case ColorType.GREYSCALE:\n                channels = 1;\n                break;\n            case ColorType.TRUECOLOUR:\n                channels = 3;\n                break;\n            case ColorType.INDEXED_COLOUR:\n                channels = 1;\n                break;\n            case ColorType.GREYSCALE_ALPHA:\n                channels = 2;\n                break;\n            case ColorType.TRUECOLOUR_ALPHA:\n                channels = 4;\n                break;\n            // Kept for exhaustiveness.\n            // eslint-disable-next-line unicorn/no-useless-switch-case\n            case ColorType.UNKNOWN:\n            default:\n                throw new Error(`Unknown color type: ${colorType}`);\n        }\n        this._png.channels = channels;\n        this._compressionMethod = this.readUint8();\n        if (this._compressionMethod !== CompressionMethod.DEFLATE) {\n            throw new Error(`Unsupported compression method: ${this._compressionMethod}`);\n        }\n        this._filterMethod = this.readUint8();\n        this._interlaceMethod = this.readUint8();\n    }\n    decodeACTL() {\n        this._numberOfFrames = this.readUint32();\n        this._numberOfPlays = this.readUint32();\n        this._isAnimated = true;\n    }\n    decodeFCTL() {\n        const image = {\n            sequenceNumber: this.readUint32(),\n            width: this.readUint32(),\n            height: this.readUint32(),\n            xOffset: this.readUint32(),\n            yOffset: this.readUint32(),\n            delayNumber: this.readUint16(),\n            delayDenominator: this.readUint16(),\n            disposeOp: this.readUint8(),\n            blendOp: this.readUint8(),\n            data: new Uint8Array(0),\n        };\n        this._frames.push(image);\n    }\n    // https://www.w3.org/TR/PNG/#11PLTE\n    decodePLTE(length) {\n        if (length % 3 !== 0) {\n            throw new RangeError(`PLTE field length must be a multiple of 3. Got ${length}`);\n        }\n        const l = length / 3;\n        this._hasPalette = true;\n        const palette = [];\n        this._palette = palette;\n        for (let i = 0; i < l; i++) {\n            palette.push([this.readUint8(), this.readUint8(), this.readUint8()]);\n        }\n    }\n    // https://www.w3.org/TR/PNG/#11IDAT\n    decodeIDAT(length) {\n        this._writingDataChunks = true;\n        const dataLength = length;\n        const dataOffset = this.offset + this.byteOffset;\n        this._inflator.push(new Uint8Array(this.buffer, dataOffset, dataLength));\n        if (this._inflator.err) {\n            throw new Error(`Error while decompressing the data: ${this._inflator.err}`);\n        }\n        this.skip(length);\n    }\n    decodeFDAT(length) {\n        this._writingDataChunks = true;\n        let dataLength = length;\n        let dataOffset = this.offset + this.byteOffset;\n        dataOffset += 4;\n        dataLength -= 4;\n        this._inflator.push(new Uint8Array(this.buffer, dataOffset, dataLength));\n        if (this._inflator.err) {\n            throw new Error(`Error while decompressing the data: ${this._inflator.err}`);\n        }\n        this.skip(length);\n    }\n    // https://www.w3.org/TR/PNG/#11tRNS\n    decodetRNS(length) {\n        switch (this._colorType) {\n            case ColorType.GREYSCALE:\n            case ColorType.TRUECOLOUR: {\n                if (length % 2 !== 0) {\n                    throw new RangeError(`tRNS chunk length must be a multiple of 2. Got ${length}`);\n                }\n                if (length / 2 > this._png.width * this._png.height) {\n                    throw new Error(`tRNS chunk contains more alpha values than there are pixels (${length / 2} vs ${this._png.width * this._png.height})`);\n                }\n                this._hasTransparency = true;\n                this._transparency = new Uint16Array(length / 2);\n                for (let i = 0; i < length / 2; i++) {\n                    this._transparency[i] = this.readUint16();\n                }\n                break;\n            }\n            case ColorType.INDEXED_COLOUR: {\n                if (length > this._palette.length) {\n                    throw new Error(`tRNS chunk contains more alpha values than there are palette colors (${length} vs ${this._palette.length})`);\n                }\n                let i = 0;\n                for (; i < length; i++) {\n                    const alpha = this.readByte();\n                    this._palette[i].push(alpha);\n                }\n                for (; i < this._palette.length; i++) {\n                    this._palette[i].push(255);\n                }\n                break;\n            }\n            // Kept for exhaustiveness.\n            /* eslint-disable unicorn/no-useless-switch-case */\n            case ColorType.UNKNOWN:\n            case ColorType.GREYSCALE_ALPHA:\n            case ColorType.TRUECOLOUR_ALPHA:\n            default: {\n                throw new Error(`tRNS chunk is not supported for color type ${this._colorType}`);\n            }\n            /* eslint-enable unicorn/no-useless-switch-case */\n        }\n    }\n    // https://www.w3.org/TR/PNG/#11iCCP\n    decodeiCCP(length) {\n        const name = readKeyword(this);\n        const compressionMethod = this.readUint8();\n        if (compressionMethod !== CompressionMethod.DEFLATE) {\n            throw new Error(`Unsupported iCCP compression method: ${compressionMethod}`);\n        }\n        const compressedProfile = this.readBytes(length - name.length - 2);\n        this._png.iccEmbeddedProfile = {\n            name,\n            profile: inflate(compressedProfile),\n        };\n    }\n    // https://www.w3.org/TR/PNG/#11pHYs\n    decodepHYs() {\n        const ppuX = this.readUint32();\n        const ppuY = this.readUint32();\n        const unitSpecifier = this.readByte();\n        this._png.resolution = { x: ppuX, y: ppuY, unit: unitSpecifier };\n    }\n    decodeApngImage() {\n        this._apng.width = this._png.width;\n        this._apng.height = this._png.height;\n        this._apng.channels = this._png.channels;\n        this._apng.depth = this._png.depth;\n        this._apng.numberOfFrames = this._numberOfFrames;\n        this._apng.numberOfPlays = this._numberOfPlays;\n        this._apng.text = this._png.text;\n        this._apng.resolution = this._png.resolution;\n        for (let i = 0; i < this._numberOfFrames; i++) {\n            const newFrame = {\n                sequenceNumber: this._frames[i].sequenceNumber,\n                delayNumber: this._frames[i].delayNumber,\n                delayDenominator: this._frames[i].delayDenominator,\n                data: this._apng.depth === 8\n                    ? new Uint8Array(this._apng.width * this._apng.height * this._apng.channels)\n                    : new Uint16Array(this._apng.width * this._apng.height * this._apng.channels),\n            };\n            const frame = this._frames.at(i);\n            if (frame) {\n                frame.data = decodeInterlaceNull({\n                    data: frame.data,\n                    width: frame.width,\n                    height: frame.height,\n                    channels: this._apng.channels,\n                    depth: this._apng.depth,\n                });\n                if (this._hasPalette) {\n                    this._apng.palette = this._palette;\n                }\n                if (this._hasTransparency) {\n                    this._apng.transparency = this._transparency;\n                }\n                if (i === 0 ||\n                    (frame.xOffset === 0 &&\n                        frame.yOffset === 0 &&\n                        frame.width === this._png.width &&\n                        frame.height === this._png.height)) {\n                    newFrame.data = frame.data;\n                }\n                else {\n                    const prevFrame = this._apng.frames.at(i - 1);\n                    this.disposeFrame(frame, prevFrame, newFrame);\n                    this.addFrameDataToCanvas(newFrame, frame);\n                }\n                this._apng.frames.push(newFrame);\n            }\n        }\n        return this._apng;\n    }\n    disposeFrame(frame, prevFrame, imageFrame) {\n        switch (frame.disposeOp) {\n            case DisposeOpType.NONE:\n                break;\n            case DisposeOpType.BACKGROUND:\n                for (let row = 0; row < this._png.height; row++) {\n                    for (let col = 0; col < this._png.width; col++) {\n                        const index = (row * frame.width + col) * this._png.channels;\n                        for (let channel = 0; channel < this._png.channels; channel++) {\n                            imageFrame.data[index + channel] = 0;\n                        }\n                    }\n                }\n                break;\n            case DisposeOpType.PREVIOUS:\n                imageFrame.data.set(prevFrame.data);\n                break;\n            default:\n                throw new Error('Unknown disposeOp');\n        }\n    }\n    addFrameDataToCanvas(imageFrame, frame) {\n        const maxValue = 1 << this._png.depth;\n        const calculatePixelIndices = (row, col) => {\n            const index = ((row + frame.yOffset) * this._png.width + frame.xOffset + col) *\n                this._png.channels;\n            const frameIndex = (row * frame.width + col) * this._png.channels;\n            return { index, frameIndex };\n        };\n        switch (frame.blendOp) {\n            case BlendOpType.SOURCE:\n                for (let row = 0; row < frame.height; row++) {\n                    for (let col = 0; col < frame.width; col++) {\n                        const { index, frameIndex } = calculatePixelIndices(row, col);\n                        for (let channel = 0; channel < this._png.channels; channel++) {\n                            imageFrame.data[index + channel] =\n                                frame.data[frameIndex + channel];\n                        }\n                    }\n                }\n                break;\n            // https://www.w3.org/TR/png-3/#13Alpha-channel-processing\n            case BlendOpType.OVER:\n                for (let row = 0; row < frame.height; row++) {\n                    for (let col = 0; col < frame.width; col++) {\n                        const { index, frameIndex } = calculatePixelIndices(row, col);\n                        for (let channel = 0; channel < this._png.channels; channel++) {\n                            const sourceAlpha = frame.data[frameIndex + this._png.channels - 1] / maxValue;\n                            const foregroundValue = channel % (this._png.channels - 1) === 0\n                                ? 1\n                                : frame.data[frameIndex + channel];\n                            const value = Math.floor(sourceAlpha * foregroundValue +\n                                (1 - sourceAlpha) * imageFrame.data[index + channel]);\n                            imageFrame.data[index + channel] += value;\n                        }\n                    }\n                }\n                break;\n            default:\n                throw new Error('Unknown blendOp');\n        }\n    }\n    decodeImage() {\n        if (this._inflator.err) {\n            throw new Error(`Error while decompressing the data: ${this._inflator.err}`);\n        }\n        const data = this._isAnimated\n            ? (this._frames?.at(0)).data\n            : this._inflator.result;\n        if (this._filterMethod !== FilterMethod.ADAPTIVE) {\n            throw new Error(`Filter method ${this._filterMethod} not supported`);\n        }\n        if (this._interlaceMethod === InterlaceMethod.NO_INTERLACE) {\n            this._png.data = decodeInterlaceNull({\n                data: data,\n                width: this._png.width,\n                height: this._png.height,\n                channels: this._png.channels,\n                depth: this._png.depth,\n            });\n        }\n        else if (this._interlaceMethod === InterlaceMethod.ADAM7) {\n            this._png.data = decodeInterlaceAdam7({\n                data: data,\n                width: this._png.width,\n                height: this._png.height,\n                channels: this._png.channels,\n                depth: this._png.depth,\n            });\n        }\n        else {\n            throw new Error(`Interlace method ${this._interlaceMethod} not supported`);\n        }\n        if (this._hasPalette) {\n            this._png.palette = this._palette;\n        }\n        if (this._hasTransparency) {\n            this._png.transparency = this._transparency;\n        }\n    }\n    pushDataToFrame() {\n        const result = this._inflator.result;\n        const lastFrame = this._frames.at(-1);\n        if (lastFrame) {\n            lastFrame.data = result;\n        }\n        else {\n            this._frames.push({\n                sequenceNumber: 0,\n                width: this._png.width,\n                height: this._png.height,\n                xOffset: 0,\n                yOffset: 0,\n                delayNumber: 0,\n                delayDenominator: 0,\n                disposeOp: DisposeOpType.NONE,\n                blendOp: BlendOpType.SOURCE,\n                data: result,\n            });\n        }\n        this._inflator = new Inflator();\n        this._writingDataChunks = false;\n    }\n}\nfunction checkBitDepth(value) {\n    if (value !== 1 &&\n        value !== 2 &&\n        value !== 4 &&\n        value !== 8 &&\n        value !== 16) {\n        throw new Error(`invalid bit depth: ${value}`);\n    }\n    return value;\n}\n", "export var ResolutionUnitSpecifier;\n(function (ResolutionUnitSpecifier) {\n    /**\n     * Unit is unknown\n     */\n    ResolutionUnitSpecifier[ResolutionUnitSpecifier[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /**\n     * Unit is the metre\n     */\n    ResolutionUnitSpecifier[ResolutionUnitSpecifier[\"METRE\"] = 1] = \"METRE\";\n})(ResolutionUnitSpecifier || (ResolutionUnitSpecifier = {}));\n", "import PngDecoder from './PngDecoder';\nimport PngEncoder from './PngEncoder';\nexport { hasPngSignature } from './helpers/signature';\nexport * from './types';\nfunction decodePng(data, options) {\n    const decoder = new PngDecoder(data, options);\n    return decoder.decode();\n}\nfunction encodePng(png, options) {\n    const encoder = new PngEncoder(png, options);\n    return encoder.encode();\n}\nfunction decodeApng(data, options) {\n    const decoder = new PngDecoder(data, options);\n    return decoder.decodeApng();\n}\nexport { decodePng as decode, encodePng as encode, decodeApng };\nexport { convertIndexedToRgb } from './convertIndexedToRgb';\n", "/** @license\n *\n * jsPDF - PDF Document creation from JavaScript\n * Version 3.0.2 Built on 2025-08-26T11:48:30.930Z\n *                      CommitID 00000000\n *\n * Copyright (c) 2010-2021 James Hall <james@parall.ax>, https://github.com/MrRio/jsPDF\n *               2015-2021 yWorks GmbH, http://www.yworks.com\n *               2015-2021 Lukas Holländer <lukas.hollaender@yworks.com>, https://github.com/HackbrettXXX\n *               2016-2018 Aras Abbasi <aras.abbasi@gmail.com>\n *               2010 Aaron Spike, https://github.com/acspike\n *               2012 Willow Systems Corporation, https://github.com/willowsystems\n *               2012 Pablo Hess, https://github.com/pablohess\n *               2012 Florian Jenett, https://github.com/fjenett\n *               2013 Warren Weckesser, https://github.com/warrenweckesser\n *               2013 Youssef Beddad, https://github.com/lifof\n *               2013 Lee Driscoll, https://github.com/lsdriscoll\n *               2013 Stefan Slonevskiy, https://github.com/stefslon\n *               2013 Jeremy Morel, https://github.com/jmorel\n *               2013 Christoph Hartmann, https://github.com/chris-rock\n *               2014 Juan Pablo Gaviria, https://github.com/juanpgaviria\n *               2014 James Makes, https://github.com/dollaruw\n *               2014 Diego Casorran, https://github.com/diegocr\n *               2014 Steven Spungin, https://github.com/Flamenco\n *               2014 Kenneth Glassey, https://github.com/Gavvers\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n * Contributor(s):\n *    siefkenj, ahwolf, rickygu, Midnith, saintclair, eaparango,\n *    kim3er, mfo, alnorth, Flamenco\n */\n\nimport t from\"@babel/runtime/helpers/typeof\";import{zlibSync as e}from\"fflate\";import n from\"@babel/runtime/helpers/slicedToArray\";import{decode as r}from\"fast-png\";var i=function(){return\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this}();function a(){i.console&&\"function\"==typeof i.console.log&&i.console.log.apply(i.console,arguments)}var o={log:a,warn:function(t){i.console&&(\"function\"==typeof i.console.warn?i.console.warn.apply(i.console,arguments):a.call(null,arguments))},error:function(t){i.console&&(\"function\"==typeof i.console.error?i.console.error.apply(i.console,arguments):a(t))}};function s(t,e,n){var r=new XMLHttpRequest;r.open(\"GET\",t),r.responseType=\"blob\",r.onload=function(){l(r.response,e,n)},r.onerror=function(){o.error(\"could not download file\")},r.send()}function u(t){var e=new XMLHttpRequest;e.open(\"HEAD\",t,!1);try{e.send()}catch(n){}return e.status>=200&&e.status<=299}function c(t){try{t.dispatchEvent(new MouseEvent(\"click\"))}catch(n){var e=document.createEvent(\"MouseEvents\");e.initMouseEvent(\"click\",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),t.dispatchEvent(e)}}var l=i.saveAs||(\"object\"!==(\"undefined\"==typeof window?\"undefined\":t(window))||window!==i?function(){}:\"undefined\"!=typeof HTMLAnchorElement&&\"download\"in HTMLAnchorElement.prototype?function(t,e,n){var r=i.URL||i.webkitURL,a=document.createElement(\"a\");e=e||t.name||\"download\",a.download=e,a.rel=\"noopener\",\"string\"==typeof t?(a.href=t,a.origin!==location.origin?u(a.href)?s(t,e,n):c(a,a.target=\"_blank\"):c(a)):(a.href=r.createObjectURL(t),setTimeout(function(){r.revokeObjectURL(a.href)},4e4),setTimeout(function(){c(a)},0))}:\"msSaveOrOpenBlob\"in navigator?function(e,n,r){if(n=n||e.name||\"download\",\"string\"==typeof e)if(u(e))s(e,n,r);else{var i=document.createElement(\"a\");i.href=e,i.target=\"_blank\",setTimeout(function(){c(i)})}else navigator.msSaveOrOpenBlob(function(e,n){return void 0===n?n={autoBom:!1}:\"object\"!==t(n)&&(o.warn(\"Deprecated: Expected third argument to be a object\"),n={autoBom:!n}),n.autoBom&&/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(e.type)?new Blob([String.fromCharCode(65279),e],{type:e.type}):e}(e,r),n)}:function(e,n,r,a){if((a=a||open(\"\",\"_blank\"))&&(a.document.title=a.document.body.innerText=\"downloading...\"),\"string\"==typeof e)return s(e,n,r);var o=\"application/octet-stream\"===e.type,u=/constructor/i.test(i.HTMLElement)||i.safari,c=/CriOS\\/[\\d]+/.test(navigator.userAgent);if((c||o&&u)&&\"object\"===(\"undefined\"==typeof FileReader?\"undefined\":t(FileReader))){var l=new FileReader;l.onloadend=function(){var t=l.result;t=c?t:t.replace(/^data:[^;]*;/,\"data:attachment/file;\"),a?a.location.href=t:location=t,a=null},l.readAsDataURL(e)}else{var h=i.URL||i.webkitURL,f=h.createObjectURL(e);a?a.location=f:location.href=f,a=null,setTimeout(function(){h.revokeObjectURL(f)},4e4)}});\n/**\n * A class to parse color values\n * @author Stoyan Stefanov <sstoo@gmail.com>\n * {@link   http://www.phpied.com/rgb-color-parser-in-javascript/}\n * @license Use it if you like it\n */function h(t){var e;t=t||\"\",this.ok=!1,\"#\"==t.charAt(0)&&(t=t.substr(1,6)),t={aliceblue:\"f0f8ff\",antiquewhite:\"faebd7\",aqua:\"00ffff\",aquamarine:\"7fffd4\",azure:\"f0ffff\",beige:\"f5f5dc\",bisque:\"ffe4c4\",black:\"000000\",blanchedalmond:\"ffebcd\",blue:\"0000ff\",blueviolet:\"8a2be2\",brown:\"a52a2a\",burlywood:\"deb887\",cadetblue:\"5f9ea0\",chartreuse:\"7fff00\",chocolate:\"d2691e\",coral:\"ff7f50\",cornflowerblue:\"6495ed\",cornsilk:\"fff8dc\",crimson:\"dc143c\",cyan:\"00ffff\",darkblue:\"00008b\",darkcyan:\"008b8b\",darkgoldenrod:\"b8860b\",darkgray:\"a9a9a9\",darkgreen:\"006400\",darkkhaki:\"bdb76b\",darkmagenta:\"8b008b\",darkolivegreen:\"556b2f\",darkorange:\"ff8c00\",darkorchid:\"9932cc\",darkred:\"8b0000\",darksalmon:\"e9967a\",darkseagreen:\"8fbc8f\",darkslateblue:\"483d8b\",darkslategray:\"2f4f4f\",darkturquoise:\"00ced1\",darkviolet:\"9400d3\",deeppink:\"ff1493\",deepskyblue:\"00bfff\",dimgray:\"696969\",dodgerblue:\"1e90ff\",feldspar:\"d19275\",firebrick:\"b22222\",floralwhite:\"fffaf0\",forestgreen:\"228b22\",fuchsia:\"ff00ff\",gainsboro:\"dcdcdc\",ghostwhite:\"f8f8ff\",gold:\"ffd700\",goldenrod:\"daa520\",gray:\"808080\",green:\"008000\",greenyellow:\"adff2f\",honeydew:\"f0fff0\",hotpink:\"ff69b4\",indianred:\"cd5c5c\",indigo:\"4b0082\",ivory:\"fffff0\",khaki:\"f0e68c\",lavender:\"e6e6fa\",lavenderblush:\"fff0f5\",lawngreen:\"7cfc00\",lemonchiffon:\"fffacd\",lightblue:\"add8e6\",lightcoral:\"f08080\",lightcyan:\"e0ffff\",lightgoldenrodyellow:\"fafad2\",lightgrey:\"d3d3d3\",lightgreen:\"90ee90\",lightpink:\"ffb6c1\",lightsalmon:\"ffa07a\",lightseagreen:\"20b2aa\",lightskyblue:\"87cefa\",lightslateblue:\"8470ff\",lightslategray:\"778899\",lightsteelblue:\"b0c4de\",lightyellow:\"ffffe0\",lime:\"00ff00\",limegreen:\"32cd32\",linen:\"faf0e6\",magenta:\"ff00ff\",maroon:\"800000\",mediumaquamarine:\"66cdaa\",mediumblue:\"0000cd\",mediumorchid:\"ba55d3\",mediumpurple:\"9370d8\",mediumseagreen:\"3cb371\",mediumslateblue:\"7b68ee\",mediumspringgreen:\"00fa9a\",mediumturquoise:\"48d1cc\",mediumvioletred:\"c71585\",midnightblue:\"191970\",mintcream:\"f5fffa\",mistyrose:\"ffe4e1\",moccasin:\"ffe4b5\",navajowhite:\"ffdead\",navy:\"000080\",oldlace:\"fdf5e6\",olive:\"808000\",olivedrab:\"6b8e23\",orange:\"ffa500\",orangered:\"ff4500\",orchid:\"da70d6\",palegoldenrod:\"eee8aa\",palegreen:\"98fb98\",paleturquoise:\"afeeee\",palevioletred:\"d87093\",papayawhip:\"ffefd5\",peachpuff:\"ffdab9\",peru:\"cd853f\",pink:\"ffc0cb\",plum:\"dda0dd\",powderblue:\"b0e0e6\",purple:\"800080\",red:\"ff0000\",rosybrown:\"bc8f8f\",royalblue:\"4169e1\",saddlebrown:\"8b4513\",salmon:\"fa8072\",sandybrown:\"f4a460\",seagreen:\"2e8b57\",seashell:\"fff5ee\",sienna:\"a0522d\",silver:\"c0c0c0\",skyblue:\"87ceeb\",slateblue:\"6a5acd\",slategray:\"708090\",snow:\"fffafa\",springgreen:\"00ff7f\",steelblue:\"4682b4\",tan:\"d2b48c\",teal:\"008080\",thistle:\"d8bfd8\",tomato:\"ff6347\",turquoise:\"40e0d0\",violet:\"ee82ee\",violetred:\"d02090\",wheat:\"f5deb3\",white:\"ffffff\",whitesmoke:\"f5f5f5\",yellow:\"ffff00\",yellowgreen:\"9acd32\"}[t=(t=t.replace(/ /g,\"\")).toLowerCase()]||t;for(var n=[{re:/^rgb\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/,example:[\"rgb(123, 234, 45)\",\"rgb(255,234,245)\"],process:function(t){return[parseInt(t[1]),parseInt(t[2]),parseInt(t[3])]}},{re:/^(\\w{2})(\\w{2})(\\w{2})$/,example:[\"#00ff00\",\"336699\"],process:function(t){return[parseInt(t[1],16),parseInt(t[2],16),parseInt(t[3],16)]}},{re:/^(\\w{1})(\\w{1})(\\w{1})$/,example:[\"#fb0\",\"f0f\"],process:function(t){return[parseInt(t[1]+t[1],16),parseInt(t[2]+t[2],16),parseInt(t[3]+t[3],16)]}}],r=0;r<n.length;r++){var i=n[r].re,a=n[r].process,o=i.exec(t);o&&(e=a(o),this.r=e[0],this.g=e[1],this.b=e[2],this.ok=!0)}this.r=this.r<0||isNaN(this.r)?0:this.r>255?255:this.r,this.g=this.g<0||isNaN(this.g)?0:this.g>255?255:this.g,this.b=this.b<0||isNaN(this.b)?0:this.b>255?255:this.b,this.toRGB=function(){return\"rgb(\"+this.r+\", \"+this.g+\", \"+this.b+\")\"},this.toHex=function(){var t=this.r.toString(16),e=this.g.toString(16),n=this.b.toString(16);return 1==t.length&&(t=\"0\"+t),1==e.length&&(e=\"0\"+e),1==n.length&&(n=\"0\"+n),\"#\"+t+e+n}}var f=i.atob.bind(i),d=i.btoa.bind(i);\n/**\n * @license\n * Joseph Myers does not specify a particular license for his work.\n *\n * Author: Joseph Myers\n * Accessed from: http://www.myersdaily.org/joseph/javascript/md5.js\n *\n * Modified by: Owen Leong\n */\nfunction p(t,e){var n=t[0],r=t[1],i=t[2],a=t[3];n=m(n,r,i,a,e[0],7,-680876936),a=m(a,n,r,i,e[1],12,-389564586),i=m(i,a,n,r,e[2],17,606105819),r=m(r,i,a,n,e[3],22,-1044525330),n=m(n,r,i,a,e[4],7,-176418897),a=m(a,n,r,i,e[5],12,1200080426),i=m(i,a,n,r,e[6],17,-1473231341),r=m(r,i,a,n,e[7],22,-45705983),n=m(n,r,i,a,e[8],7,1770035416),a=m(a,n,r,i,e[9],12,-1958414417),i=m(i,a,n,r,e[10],17,-42063),r=m(r,i,a,n,e[11],22,-1990404162),n=m(n,r,i,a,e[12],7,1804603682),a=m(a,n,r,i,e[13],12,-40341101),i=m(i,a,n,r,e[14],17,-1502002290),n=v(n,r=m(r,i,a,n,e[15],22,1236535329),i,a,e[1],5,-165796510),a=v(a,n,r,i,e[6],9,-1069501632),i=v(i,a,n,r,e[11],14,643717713),r=v(r,i,a,n,e[0],20,-373897302),n=v(n,r,i,a,e[5],5,-701558691),a=v(a,n,r,i,e[10],9,38016083),i=v(i,a,n,r,e[15],14,-660478335),r=v(r,i,a,n,e[4],20,-405537848),n=v(n,r,i,a,e[9],5,568446438),a=v(a,n,r,i,e[14],9,-1019803690),i=v(i,a,n,r,e[3],14,-187363961),r=v(r,i,a,n,e[8],20,1163531501),n=v(n,r,i,a,e[13],5,-1444681467),a=v(a,n,r,i,e[2],9,-51403784),i=v(i,a,n,r,e[7],14,1735328473),n=b(n,r=v(r,i,a,n,e[12],20,-1926607734),i,a,e[5],4,-378558),a=b(a,n,r,i,e[8],11,-2022574463),i=b(i,a,n,r,e[11],16,1839030562),r=b(r,i,a,n,e[14],23,-35309556),n=b(n,r,i,a,e[1],4,-1530992060),a=b(a,n,r,i,e[4],11,1272893353),i=b(i,a,n,r,e[7],16,-155497632),r=b(r,i,a,n,e[10],23,-1094730640),n=b(n,r,i,a,e[13],4,681279174),a=b(a,n,r,i,e[0],11,-358537222),i=b(i,a,n,r,e[3],16,-722521979),r=b(r,i,a,n,e[6],23,76029189),n=b(n,r,i,a,e[9],4,-640364487),a=b(a,n,r,i,e[12],11,-421815835),i=b(i,a,n,r,e[15],16,530742520),n=y(n,r=b(r,i,a,n,e[2],23,-995338651),i,a,e[0],6,-198630844),a=y(a,n,r,i,e[7],10,1126891415),i=y(i,a,n,r,e[14],15,-1416354905),r=y(r,i,a,n,e[5],21,-57434055),n=y(n,r,i,a,e[12],6,1700485571),a=y(a,n,r,i,e[3],10,-1894986606),i=y(i,a,n,r,e[10],15,-1051523),r=y(r,i,a,n,e[1],21,-2054922799),n=y(n,r,i,a,e[8],6,1873313359),a=y(a,n,r,i,e[15],10,-30611744),i=y(i,a,n,r,e[6],15,-1560198380),r=y(r,i,a,n,e[13],21,1309151649),n=y(n,r,i,a,e[4],6,-145523070),a=y(a,n,r,i,e[11],10,-1120210379),i=y(i,a,n,r,e[2],15,718787259),r=y(r,i,a,n,e[9],21,-343485551),t[0]=P(n,t[0]),t[1]=P(r,t[1]),t[2]=P(i,t[2]),t[3]=P(a,t[3])}function g(t,e,n,r,i,a){return e=P(P(e,t),P(r,a)),P(e<<i|e>>>32-i,n)}function m(t,e,n,r,i,a,o){return g(e&n|~e&r,t,e,i,a,o)}function v(t,e,n,r,i,a,o){return g(e&r|n&~r,t,e,i,a,o)}function b(t,e,n,r,i,a,o){return g(e^n^r,t,e,i,a,o)}function y(t,e,n,r,i,a,o){return g(n^(e|~r),t,e,i,a,o)}function w(t){var e,n=t.length,r=[1732584193,-271733879,-1732584194,271733878];for(e=64;e<=t.length;e+=64)p(r,N(t.substring(e-64,e)));t=t.substring(e-64);var i=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];for(e=0;e<t.length;e++)i[e>>2]|=t.charCodeAt(e)<<(e%4<<3);if(i[e>>2]|=128<<(e%4<<3),e>55)for(p(r,i),e=0;e<16;e++)i[e]=0;return i[14]=8*n,p(r,i),r}function N(t){var e,n=[];for(e=0;e<64;e+=4)n[e>>2]=t.charCodeAt(e)+(t.charCodeAt(e+1)<<8)+(t.charCodeAt(e+2)<<16)+(t.charCodeAt(e+3)<<24);return n}var L=\"0123456789abcdef\".split(\"\");function x(t){for(var e=\"\",n=0;n<4;n++)e+=L[t>>8*n+4&15]+L[t>>8*n&15];return e}function A(t){return String.fromCharCode(255&t,(65280&t)>>8,(16711680&t)>>16,(4278190080&t)>>24)}function S(t){return w(t).map(A).join(\"\")}var _=\"5d41402abc4b2a76b9719d911017c592\"!=function(t){for(var e=0;e<t.length;e++)t[e]=x(t[e]);return t.join(\"\")}(w(\"hello\"));function P(t,e){if(_){var n=(65535&t)+(65535&e);return(t>>16)+(e>>16)+(n>>16)<<16|65535&n}return t+e&4294967295}\n/**\n * @license\n * FPDF is released under a permissive license: there is no usage restriction.\n * You may embed it freely in your application (commercial or not), with or\n * without modifications.\n *\n * Reference: http://www.fpdf.org/en/script/script37.php\n */function k(t,e){var n,r,i,a;if(t!==n){for(var o=(i=t,a=1+(256/t.length|0),new Array(a+1).join(i)),s=[],u=0;u<256;u++)s[u]=u;var c=0;for(u=0;u<256;u++){var l=s[u];c=(c+l+o.charCodeAt(u))%256,s[u]=s[c],s[c]=l}n=t,r=s}else s=r;var h=e.length,f=0,d=0,p=\"\";for(u=0;u<h;u++)d=(d+(l=s[f=(f+1)%256]))%256,s[f]=s[d],s[d]=l,o=s[(s[f]+s[d])%256],p+=String.fromCharCode(e.charCodeAt(u)^o);return p}\n/**\n * @license\n * Licensed under the MIT License.\n * http://opensource.org/licenses/mit-license\n * Author: Owen Leong (@owenl131)\n * Date: 15 Oct 2020\n * References:\n * https://www.cs.cmu.edu/~dst/Adobe/Gallery/anon21jul01-pdf-encryption.txt\n * https://github.com/foliojs/pdfkit/blob/master/lib/security.js\n * http://www.fpdf.org/en/script/script37.php\n */var F={print:4,modify:8,copy:16,\"annot-forms\":32};function I(t,e,n,r){this.v=1,this.r=2;var i=192;t.forEach(function(t){if(void 0!==F.perm)throw new Error(\"Invalid permission: \"+t);i+=F[t]}),this.padding=\"(¿N^NuAd\\0NVÿú\u0001\\b..\\0¶Ðh>/\\f©þdSiz\";var a=(e+this.padding).substr(0,32),o=(n+this.padding).substr(0,32);this.O=this.processOwnerPassword(a,o),this.P=-(1+(255^i)),this.encryptionKey=S(a+this.O+this.lsbFirstWord(this.P)+this.hexToBytes(r)).substr(0,5),this.U=k(this.encryptionKey,this.padding)}function j(t){if(/[^\\u0000-\\u00ff]/.test(t))throw new Error(\"Invalid PDF Name Object: \"+t+\", Only accept ASCII characters.\");for(var e=\"\",n=t.length,r=0;r<n;r++){var i=t.charCodeAt(r);e+=i<33||35===i||37===i||40===i||41===i||47===i||60===i||62===i||91===i||93===i||123===i||125===i||i>126?\"#\"+(\"0\"+i.toString(16)).slice(-2):t[r]}return e}function C(e){if(\"object\"!==t(e))throw new Error(\"Invalid Context passed to initialize PubSub (jsPDF-module)\");var n={};this.subscribe=function(t,e,r){if(r=r||!1,\"string\"!=typeof t||\"function\"!=typeof e||\"boolean\"!=typeof r)throw new Error(\"Invalid arguments passed to PubSub.subscribe (jsPDF-module)\");n.hasOwnProperty(t)||(n[t]={});var i=Math.random().toString(35);return n[t][i]=[e,!!r],i},this.unsubscribe=function(t){for(var e in n)if(n[e][t])return delete n[e][t],0===Object.keys(n[e]).length&&delete n[e],!0;return!1},this.publish=function(t){if(n.hasOwnProperty(t)){var r=Array.prototype.slice.call(arguments,1),a=[];for(var s in n[t]){var u=n[t][s];try{u[0].apply(e,r)}catch(c){i.console&&o.error(\"jsPDF PubSub Error\",c.message,c)}u[1]&&a.push(s)}a.length&&a.forEach(this.unsubscribe)}},this.getTopics=function(){return n}}function O(t){if(!(this instanceof O))return new O(t);var e=\"opacity,stroke-opacity\".split(\",\");for(var n in t)t.hasOwnProperty(n)&&e.indexOf(n)>=0&&(this[n]=t[n]);this.id=\"\",this.objectNumber=-1}function B(t,e){this.gState=t,this.matrix=e,this.id=\"\",this.objectNumber=-1}function M(t,e,n,r,i){if(!(this instanceof M))return new M(t,e,n,r,i);this.type=\"axial\"===t?2:3,this.coords=e,this.colors=n,B.call(this,r,i)}function q(t,e,n,r,i){if(!(this instanceof q))return new q(t,e,n,r,i);this.boundingBox=t,this.xStep=e,this.yStep=n,this.stream=\"\",this.cloneIndex=0,B.call(this,r,i)}function E(e){var n,r=\"string\"==typeof arguments[0]?arguments[0]:\"p\",a=arguments[1],s=arguments[2],u=arguments[3],c=[],f=1,p=16,g=\"S\",m=null;\"object\"===t(e=e||{})&&(r=e.orientation,a=e.unit||a,s=e.format||s,u=e.compress||e.compressPdf||u,null!==(m=e.encryption||null)&&(m.userPassword=m.userPassword||\"\",m.ownerPassword=m.ownerPassword||\"\",m.userPermissions=m.userPermissions||[]),f=\"number\"==typeof e.userUnit?Math.abs(e.userUnit):1,void 0!==e.precision&&(n=e.precision),void 0!==e.floatPrecision&&(p=e.floatPrecision),g=e.defaultPathOperation||\"S\"),c=e.filters||(!0===u?[\"FlateEncode\"]:c),a=a||\"mm\",r=(\"\"+(r||\"P\")).toLowerCase();var v=e.putOnlyUsedFonts||!1,b={},y={internal:{},__private__:{}};y.__private__.PubSub=C;var w=\"1.3\",N=y.__private__.getPdfVersion=function(){return w};y.__private__.setPdfVersion=function(t){w=t};var L={a0:[2383.94,3370.39],a1:[1683.78,2383.94],a2:[1190.55,1683.78],a3:[841.89,1190.55],a4:[595.28,841.89],a5:[419.53,595.28],a6:[297.64,419.53],a7:[209.76,297.64],a8:[147.4,209.76],a9:[104.88,147.4],a10:[73.7,104.88],b0:[2834.65,4008.19],b1:[2004.09,2834.65],b2:[1417.32,2004.09],b3:[1000.63,1417.32],b4:[708.66,1000.63],b5:[498.9,708.66],b6:[354.33,498.9],b7:[249.45,354.33],b8:[175.75,249.45],b9:[124.72,175.75],b10:[87.87,124.72],c0:[2599.37,3676.54],c1:[1836.85,2599.37],c2:[1298.27,1836.85],c3:[918.43,1298.27],c4:[649.13,918.43],c5:[459.21,649.13],c6:[323.15,459.21],c7:[229.61,323.15],c8:[161.57,229.61],c9:[113.39,161.57],c10:[79.37,113.39],dl:[311.81,623.62],letter:[612,792],\"government-letter\":[576,756],legal:[612,1008],\"junior-legal\":[576,360],ledger:[1224,792],tabloid:[792,1224],\"credit-card\":[153,243]};y.__private__.getPageFormats=function(){return L};var x=y.__private__.getPageFormat=function(t){return L[t]};s=s||\"a4\";var A=\"compat\",S=\"advanced\",_=A;function P(){this.saveGraphicsState(),lt(new Wt(St,0,0,-St,0,Ln()*St).toString()+\" cm\"),this.setFontSize(this.getFontSize()/St),g=\"n\",_=S}function k(){this.restoreGraphicsState(),g=\"S\",_=A}var F=y.__private__.combineFontStyleAndFontWeight=function(t,e){if(\"bold\"==t&&\"normal\"==e||\"bold\"==t&&400==e||\"normal\"==t&&\"italic\"==e||\"bold\"==t&&\"italic\"==e)throw new Error(\"Invalid Combination of fontweight and fontstyle\");return e&&(t=400==e||\"normal\"===e?\"italic\"===t?\"italic\":\"normal\":700!=e&&\"bold\"!==e||\"normal\"!==t?(700==e?\"bold\":e)+\"\"+t:\"bold\"),t};y.advancedAPI=function(t){var e=_===A;return e&&P.call(this),\"function\"!=typeof t||(t(this),e&&k.call(this)),this},y.compatAPI=function(t){var e=_===S;return e&&k.call(this),\"function\"!=typeof t||(t(this),e&&P.call(this)),this},y.isAdvancedAPI=function(){return _===S};var B,R=function(t){if(_!==S)throw new Error(t+\" is only available in 'advanced' API mode. You need to call advancedAPI() first.\")},D=y.roundToPrecision=y.__private__.roundToPrecision=function(t,e){var r=n||e;if(isNaN(t)||isNaN(r))throw new Error(\"Invalid argument passed to jsPDF.roundToPrecision\");return t.toFixed(r).replace(/0+$/,\"\")};B=y.hpf=y.__private__.hpf=\"number\"==typeof p?function(t){if(isNaN(t))throw new Error(\"Invalid argument passed to jsPDF.hpf\");return D(t,p)}:\"smart\"===p?function(t){if(isNaN(t))throw new Error(\"Invalid argument passed to jsPDF.hpf\");return D(t,t>-1&&t<1?16:5)}:function(t){if(isNaN(t))throw new Error(\"Invalid argument passed to jsPDF.hpf\");return D(t,16)};var T=y.f2=y.__private__.f2=function(t){if(isNaN(t))throw new Error(\"Invalid argument passed to jsPDF.f2\");return D(t,2)},z=y.__private__.f3=function(t){if(isNaN(t))throw new Error(\"Invalid argument passed to jsPDF.f3\");return D(t,3)},U=y.scale=y.__private__.scale=function(t){if(isNaN(t))throw new Error(\"Invalid argument passed to jsPDF.scale\");return _===A?t*St:_===S?t:void 0},H=function(t){return U(function(t){return _===A?Ln()-t:_===S?t:void 0}(t))};y.__private__.setPrecision=y.setPrecision=function(t){\"number\"==typeof parseInt(t,10)&&(n=parseInt(t,10))};var W,V=\"00000000000000000000000000000000\",G=y.__private__.getFileId=function(){return V},Y=y.__private__.setFileId=function(t){return V=void 0!==t&&/^[a-fA-F0-9]{32}$/.test(t)?t.toUpperCase():V.split(\"\").map(function(){return\"ABCDEF0123456789\".charAt(Math.floor(16*Math.random()))}).join(\"\"),null!==m&&(je=new I(m.userPermissions,m.userPassword,m.ownerPassword,V)),V};y.setFileId=function(t){return Y(t),this},y.getFileId=function(){return G()};var J=y.__private__.convertDateToPDFDate=function(t){var e=t.getTimezoneOffset(),n=e<0?\"+\":\"-\",r=Math.floor(Math.abs(e/60)),i=Math.abs(e%60),a=[n,Q(r),\"'\",Q(i),\"'\"].join(\"\");return[\"D:\",t.getFullYear(),Q(t.getMonth()+1),Q(t.getDate()),Q(t.getHours()),Q(t.getMinutes()),Q(t.getSeconds()),a].join(\"\")},X=y.__private__.convertPDFDateToDate=function(t){var e=parseInt(t.substr(2,4),10),n=parseInt(t.substr(6,2),10)-1,r=parseInt(t.substr(8,2),10),i=parseInt(t.substr(10,2),10),a=parseInt(t.substr(12,2),10),o=parseInt(t.substr(14,2),10);return new Date(e,n,r,i,a,o,0)},K=y.__private__.setCreationDate=function(t){var e;if(void 0===t&&(t=new Date),t instanceof Date)e=J(t);else{if(!/^D:(20[0-2][0-9]|203[0-7]|19[7-9][0-9])(0[0-9]|1[0-2])([0-2][0-9]|3[0-1])(0[0-9]|1[0-9]|2[0-3])(0[0-9]|[1-5][0-9])(0[0-9]|[1-5][0-9])(\\+0[0-9]|\\+1[0-4]|-0[0-9]|-1[0-1])'(0[0-9]|[1-5][0-9])'?$/.test(t))throw new Error(\"Invalid argument passed to jsPDF.setCreationDate\");e=t}return W=e},Z=y.__private__.getCreationDate=function(t){var e=W;return\"jsDate\"===t&&(e=X(W)),e};y.setCreationDate=function(t){return K(t),this},y.getCreationDate=function(t){return Z(t)};var $,Q=y.__private__.padd2=function(t){return(\"0\"+parseInt(t)).slice(-2)},tt=y.__private__.padd2Hex=function(t){return(\"00\"+(t=t.toString())).substr(t.length)},et=0,nt=[],rt=[],it=0,at=[],ot=[],st=!1,ut=rt;y.__private__.setCustomOutputDestination=function(t){st=!0,ut=t};var ct=function(t){st||(ut=t)};y.__private__.resetCustomOutputDestination=function(){st=!1,ut=rt};var lt=y.__private__.out=function(t){return t=t.toString(),it+=t.length+1,ut.push(t),ut},ht=y.__private__.write=function(t){return lt(1===arguments.length?t.toString():Array.prototype.join.call(arguments,\" \"))},ft=y.__private__.getArrayBuffer=function(t){for(var e=t.length,n=new ArrayBuffer(e),r=new Uint8Array(n);e--;)r[e]=t.charCodeAt(e);return n},dt=[[\"Helvetica\",\"helvetica\",\"normal\",\"WinAnsiEncoding\"],[\"Helvetica-Bold\",\"helvetica\",\"bold\",\"WinAnsiEncoding\"],[\"Helvetica-Oblique\",\"helvetica\",\"italic\",\"WinAnsiEncoding\"],[\"Helvetica-BoldOblique\",\"helvetica\",\"bolditalic\",\"WinAnsiEncoding\"],[\"Courier\",\"courier\",\"normal\",\"WinAnsiEncoding\"],[\"Courier-Bold\",\"courier\",\"bold\",\"WinAnsiEncoding\"],[\"Courier-Oblique\",\"courier\",\"italic\",\"WinAnsiEncoding\"],[\"Courier-BoldOblique\",\"courier\",\"bolditalic\",\"WinAnsiEncoding\"],[\"Times-Roman\",\"times\",\"normal\",\"WinAnsiEncoding\"],[\"Times-Bold\",\"times\",\"bold\",\"WinAnsiEncoding\"],[\"Times-Italic\",\"times\",\"italic\",\"WinAnsiEncoding\"],[\"Times-BoldItalic\",\"times\",\"bolditalic\",\"WinAnsiEncoding\"],[\"ZapfDingbats\",\"zapfdingbats\",\"normal\",null],[\"Symbol\",\"symbol\",\"normal\",null]];y.__private__.getStandardFonts=function(){return dt};var pt=e.fontSize||16;y.__private__.setFontSize=y.setFontSize=function(t){return pt=_===S?t/St:t,this};var gt,mt=y.__private__.getFontSize=y.getFontSize=function(){return _===A?pt:pt*St},vt=e.R2L||!1;y.__private__.setR2L=y.setR2L=function(t){return vt=t,this},y.__private__.getR2L=y.getR2L=function(){return vt};var bt,yt=y.__private__.setZoomMode=function(t){if(/^(?:\\d+\\.\\d*|\\d*\\.\\d+|\\d+)%$/.test(t))gt=t;else if(isNaN(t)){if(-1===[void 0,null,\"fullwidth\",\"fullheight\",\"fullpage\",\"original\"].indexOf(t))throw new Error('zoom must be Integer (e.g. 2), a percentage Value (e.g. 300%) or fullwidth, fullheight, fullpage, original. \"'+t+'\" is not recognized.');gt=t}else gt=parseInt(t,10)};y.__private__.getZoomMode=function(){return gt};var wt,Nt=y.__private__.setPageMode=function(t){if(-1==[void 0,null,\"UseNone\",\"UseOutlines\",\"UseThumbs\",\"FullScreen\"].indexOf(t))throw new Error('Page mode must be one of UseNone, UseOutlines, UseThumbs, or FullScreen. \"'+t+'\" is not recognized.');bt=t};y.__private__.getPageMode=function(){return bt};var Lt=y.__private__.setLayoutMode=function(t){if(-1==[void 0,null,\"continuous\",\"single\",\"twoleft\",\"tworight\",\"two\"].indexOf(t))throw new Error('Layout mode must be one of continuous, single, twoleft, tworight. \"'+t+'\" is not recognized.');wt=t};y.__private__.getLayoutMode=function(){return wt},y.__private__.setDisplayMode=y.setDisplayMode=function(t,e,n){return yt(t),Lt(e),Nt(n),this};var xt={title:\"\",subject:\"\",author:\"\",keywords:\"\",creator:\"\"};y.__private__.getDocumentProperty=function(t){if(-1===Object.keys(xt).indexOf(t))throw new Error(\"Invalid argument passed to jsPDF.getDocumentProperty\");return xt[t]},y.__private__.getDocumentProperties=function(){return xt},y.__private__.setDocumentProperties=y.setProperties=y.setDocumentProperties=function(t){for(var e in xt)xt.hasOwnProperty(e)&&t[e]&&(xt[e]=t[e]);return this},y.__private__.setDocumentProperty=function(t,e){if(-1===Object.keys(xt).indexOf(t))throw new Error(\"Invalid arguments passed to jsPDF.setDocumentProperty\");return xt[t]=e};var At,St,_t,Pt,kt,Ft={},It={},jt=[],Ct={},Ot={},Bt={},Mt={},qt=null,Et=0,Rt=[],Dt=new C(y),Tt=e.hotfixes||[],zt={},Ut={},Ht=[],Wt=function t(e,n,r,i,a,o){if(!(this instanceof t))return new t(e,n,r,i,a,o);isNaN(e)&&(e=1),isNaN(n)&&(n=0),isNaN(r)&&(r=0),isNaN(i)&&(i=1),isNaN(a)&&(a=0),isNaN(o)&&(o=0),this._matrix=[e,n,r,i,a,o]};Object.defineProperty(Wt.prototype,\"sx\",{get:function(){return this._matrix[0]},set:function(t){this._matrix[0]=t}}),Object.defineProperty(Wt.prototype,\"shy\",{get:function(){return this._matrix[1]},set:function(t){this._matrix[1]=t}}),Object.defineProperty(Wt.prototype,\"shx\",{get:function(){return this._matrix[2]},set:function(t){this._matrix[2]=t}}),Object.defineProperty(Wt.prototype,\"sy\",{get:function(){return this._matrix[3]},set:function(t){this._matrix[3]=t}}),Object.defineProperty(Wt.prototype,\"tx\",{get:function(){return this._matrix[4]},set:function(t){this._matrix[4]=t}}),Object.defineProperty(Wt.prototype,\"ty\",{get:function(){return this._matrix[5]},set:function(t){this._matrix[5]=t}}),Object.defineProperty(Wt.prototype,\"a\",{get:function(){return this._matrix[0]},set:function(t){this._matrix[0]=t}}),Object.defineProperty(Wt.prototype,\"b\",{get:function(){return this._matrix[1]},set:function(t){this._matrix[1]=t}}),Object.defineProperty(Wt.prototype,\"c\",{get:function(){return this._matrix[2]},set:function(t){this._matrix[2]=t}}),Object.defineProperty(Wt.prototype,\"d\",{get:function(){return this._matrix[3]},set:function(t){this._matrix[3]=t}}),Object.defineProperty(Wt.prototype,\"e\",{get:function(){return this._matrix[4]},set:function(t){this._matrix[4]=t}}),Object.defineProperty(Wt.prototype,\"f\",{get:function(){return this._matrix[5]},set:function(t){this._matrix[5]=t}}),Object.defineProperty(Wt.prototype,\"rotation\",{get:function(){return Math.atan2(this.shx,this.sx)}}),Object.defineProperty(Wt.prototype,\"scaleX\",{get:function(){return this.decompose().scale.sx}}),Object.defineProperty(Wt.prototype,\"scaleY\",{get:function(){return this.decompose().scale.sy}}),Object.defineProperty(Wt.prototype,\"isIdentity\",{get:function(){return 1===this.sx&&0===this.shy&&0===this.shx&&1===this.sy&&0===this.tx&&0===this.ty}}),Wt.prototype.join=function(t){return[this.sx,this.shy,this.shx,this.sy,this.tx,this.ty].map(B).join(t)},Wt.prototype.multiply=function(t){var e=t.sx*this.sx+t.shy*this.shx,n=t.sx*this.shy+t.shy*this.sy,r=t.shx*this.sx+t.sy*this.shx,i=t.shx*this.shy+t.sy*this.sy,a=t.tx*this.sx+t.ty*this.shx+this.tx,o=t.tx*this.shy+t.ty*this.sy+this.ty;return new Wt(e,n,r,i,a,o)},Wt.prototype.decompose=function(){var t=this.sx,e=this.shy,n=this.shx,r=this.sy,i=this.tx,a=this.ty,o=Math.sqrt(t*t+e*e),s=(t/=o)*n+(e/=o)*r;n-=t*s,r-=e*s;var u=Math.sqrt(n*n+r*r);return s/=u,t*(r/=u)<e*(n/=u)&&(t=-t,e=-e,s=-s,o=-o),{scale:new Wt(o,0,0,u,0,0),translate:new Wt(1,0,0,1,i,a),rotate:new Wt(t,e,-e,t,0,0),skew:new Wt(1,0,s,1,0,0)}},Wt.prototype.toString=function(t){return this.join(\" \")},Wt.prototype.inversed=function(){var t=this.sx,e=this.shy,n=this.shx,r=this.sy,i=this.tx,a=this.ty,o=1/(t*r-e*n),s=r*o,u=-e*o,c=-n*o,l=t*o;return new Wt(s,u,c,l,-s*i-c*a,-u*i-l*a)},Wt.prototype.applyToPoint=function(t){var e=t.x*this.sx+t.y*this.shx+this.tx,n=t.x*this.shy+t.y*this.sy+this.ty;return new gn(e,n)},Wt.prototype.applyToRectangle=function(t){var e=this.applyToPoint(t),n=this.applyToPoint(new gn(t.x+t.w,t.y+t.h));return new mn(e.x,e.y,n.x-e.x,n.y-e.y)},Wt.prototype.clone=function(){var t=this.sx,e=this.shy,n=this.shx,r=this.sy,i=this.tx,a=this.ty;return new Wt(t,e,n,r,i,a)},y.Matrix=Wt;var Vt=y.matrixMult=function(t,e){return e.multiply(t)},Gt=new Wt(1,0,0,1,0,0);y.unitMatrix=y.identityMatrix=Gt;var Yt=function(t,e){if(!Ot[t]){var n=(e instanceof M?\"Sh\":\"P\")+(Object.keys(Ct).length+1).toString(10);e.id=n,Ot[t]=n,Ct[n]=e,Dt.publish(\"addPattern\",e)}};y.ShadingPattern=M,y.TilingPattern=q,y.addShadingPattern=function(t,e){return R(\"addShadingPattern()\"),Yt(t,e),this},y.beginTilingPattern=function(t){R(\"beginTilingPattern()\"),bn(t.boundingBox[0],t.boundingBox[1],t.boundingBox[2]-t.boundingBox[0],t.boundingBox[3]-t.boundingBox[1],t.matrix)},y.endTilingPattern=function(t,e){R(\"endTilingPattern()\"),e.stream=ot[$].join(\"\\n\"),Yt(t,e),Dt.publish(\"endTilingPattern\",e),Ht.pop().restore()};var Jt,Xt=y.__private__.newObject=function(){var t=Kt();return Zt(t,!0),t},Kt=y.__private__.newObjectDeferred=function(){return et++,nt[et]=function(){return it},et},Zt=function(t,e){return e=\"boolean\"==typeof e&&e,nt[t]=it,e&&lt(t+\" 0 obj\"),t},$t=y.__private__.newAdditionalObject=function(){var t={objId:Kt(),content:\"\"};return at.push(t),t},Qt=Kt(),te=Kt(),ee=y.__private__.decodeColorString=function(t){var e=t.split(\" \");if(2!==e.length||\"g\"!==e[1]&&\"G\"!==e[1])5!==e.length||\"k\"!==e[4]&&\"K\"!==e[4]||(e=[(1-e[0])*(1-e[3]),(1-e[1])*(1-e[3]),(1-e[2])*(1-e[3]),\"r\"]);else{var n=parseFloat(e[0]);e=[n,n,n,\"r\"]}for(var r=\"#\",i=0;i<3;i++)r+=(\"0\"+Math.floor(255*parseFloat(e[i])).toString(16)).slice(-2);return r},ne=y.__private__.encodeColorString=function(e){var n;\"string\"==typeof e&&(e={ch1:e});var r=e.ch1,i=e.ch2,a=e.ch3,o=e.ch4,s=\"draw\"===e.pdfColorType?[\"G\",\"RG\",\"K\"]:[\"g\",\"rg\",\"k\"];if(\"string\"==typeof r&&\"#\"!==r.charAt(0)){var u=new h(r);if(u.ok)r=u.toHex();else if(!/^\\d*\\.?\\d*$/.test(r))throw new Error('Invalid color \"'+r+'\" passed to jsPDF.encodeColorString.')}if(\"string\"==typeof r&&/^#[0-9A-Fa-f]{3}$/.test(r)&&(r=\"#\"+r[1]+r[1]+r[2]+r[2]+r[3]+r[3]),\"string\"==typeof r&&/^#[0-9A-Fa-f]{6}$/.test(r)){var c=parseInt(r.substr(1),16);r=c>>16&255,i=c>>8&255,a=255&c}if(void 0===i||void 0===o&&r===i&&i===a)n=\"string\"==typeof r?r+\" \"+s[0]:2===e.precision?T(r/255)+\" \"+s[0]:z(r/255)+\" \"+s[0];else if(void 0===o||\"object\"===t(o)){if(o&&!isNaN(o.a)&&0===o.a)return[\"1.\",\"1.\",\"1.\",s[1]].join(\" \");n=\"string\"==typeof r?[r,i,a,s[1]].join(\" \"):2===e.precision?[T(r/255),T(i/255),T(a/255),s[1]].join(\" \"):[z(r/255),z(i/255),z(a/255),s[1]].join(\" \")}else n=\"string\"==typeof r?[r,i,a,o,s[2]].join(\" \"):2===e.precision?[T(r),T(i),T(a),T(o),s[2]].join(\" \"):[z(r),z(i),z(a),z(o),s[2]].join(\" \");return n},re=y.__private__.getFilters=function(){return c},ie=y.__private__.putStream=function(t){var e=(t=t||{}).data||\"\",n=t.filters||re(),r=t.alreadyAppliedFilters||[],i=t.addLength1||!1,a=e.length,o=t.objectId,s=function(t){return t};if(null!==m&&void 0===o)throw new Error(\"ObjectId must be passed to putStream for file encryption\");null!==m&&(s=je.encryptor(o,0));var u={};!0===n&&(n=[\"FlateEncode\"]);var c=t.additionalKeyValues||[],l=(u=void 0!==E.API.processDataByFilters?E.API.processDataByFilters(e,n):{data:e,reverseChain:[]}).reverseChain+(Array.isArray(r)?r.join(\" \"):r.toString());if(0!==u.data.length&&(c.push({key:\"Length\",value:u.data.length}),!0===i&&c.push({key:\"Length1\",value:a})),0!=l.length)if(l.split(\"/\").length-1==1)c.push({key:\"Filter\",value:l});else{c.push({key:\"Filter\",value:\"[\"+l+\"]\"});for(var h=0;h<c.length;h+=1)if(\"DecodeParms\"===c[h].key){for(var f=[],d=0;d<u.reverseChain.split(\"/\").length-1;d+=1)f.push(\"null\");f.push(c[h].value),c[h].value=\"[\"+f.join(\" \")+\"]\"}}lt(\"<<\");for(var p=0;p<c.length;p++)lt(\"/\"+c[p].key+\" \"+c[p].value);lt(\">>\"),0!==u.data.length&&(lt(\"stream\"),lt(s(u.data)),lt(\"endstream\"))},ae=y.__private__.putPage=function(t){var e=t.number,n=t.data,r=t.objId,i=t.contentsObjId;Zt(r,!0),lt(\"<</Type /Page\"),lt(\"/Parent \"+t.rootDictionaryObjId+\" 0 R\"),lt(\"/Resources \"+t.resourceDictionaryObjId+\" 0 R\"),lt(\"/MediaBox [\"+parseFloat(B(t.mediaBox.bottomLeftX))+\" \"+parseFloat(B(t.mediaBox.bottomLeftY))+\" \"+B(t.mediaBox.topRightX)+\" \"+B(t.mediaBox.topRightY)+\"]\"),null!==t.cropBox&&lt(\"/CropBox [\"+B(t.cropBox.bottomLeftX)+\" \"+B(t.cropBox.bottomLeftY)+\" \"+B(t.cropBox.topRightX)+\" \"+B(t.cropBox.topRightY)+\"]\"),null!==t.bleedBox&&lt(\"/BleedBox [\"+B(t.bleedBox.bottomLeftX)+\" \"+B(t.bleedBox.bottomLeftY)+\" \"+B(t.bleedBox.topRightX)+\" \"+B(t.bleedBox.topRightY)+\"]\"),null!==t.trimBox&&lt(\"/TrimBox [\"+B(t.trimBox.bottomLeftX)+\" \"+B(t.trimBox.bottomLeftY)+\" \"+B(t.trimBox.topRightX)+\" \"+B(t.trimBox.topRightY)+\"]\"),null!==t.artBox&&lt(\"/ArtBox [\"+B(t.artBox.bottomLeftX)+\" \"+B(t.artBox.bottomLeftY)+\" \"+B(t.artBox.topRightX)+\" \"+B(t.artBox.topRightY)+\"]\"),\"number\"==typeof t.userUnit&&1!==t.userUnit&&lt(\"/UserUnit \"+t.userUnit),Dt.publish(\"putPage\",{objId:r,pageContext:Rt[e],pageNumber:e,page:n}),lt(\"/Contents \"+i+\" 0 R\"),lt(\">>\"),lt(\"endobj\");var a=n.join(\"\\n\");return _===S&&(a+=\"\\nQ\"),Zt(i,!0),ie({data:a,filters:re(),objectId:i}),lt(\"endobj\"),r},oe=y.__private__.putPages=function(){var t,e,n=[];for(t=1;t<=Et;t++)Rt[t].objId=Kt(),Rt[t].contentsObjId=Kt();for(t=1;t<=Et;t++)n.push(ae({number:t,data:ot[t],objId:Rt[t].objId,contentsObjId:Rt[t].contentsObjId,mediaBox:Rt[t].mediaBox,cropBox:Rt[t].cropBox,bleedBox:Rt[t].bleedBox,trimBox:Rt[t].trimBox,artBox:Rt[t].artBox,userUnit:Rt[t].userUnit,rootDictionaryObjId:Qt,resourceDictionaryObjId:te}));Zt(Qt,!0),lt(\"<</Type /Pages\");var r=\"/Kids [\";for(e=0;e<Et;e++)r+=n[e]+\" 0 R \";lt(r+\"]\"),lt(\"/Count \"+Et),lt(\">>\"),lt(\"endobj\"),Dt.publish(\"postPutPages\")},se=function(t){Dt.publish(\"putFont\",{font:t,out:lt,newObject:Xt,putStream:ie}),!0!==t.isAlreadyPutted&&(t.objectNumber=Xt(),lt(\"<<\"),lt(\"/Type /Font\"),lt(\"/BaseFont /\"+j(t.postScriptName)),lt(\"/Subtype /Type1\"),\"string\"==typeof t.encoding&&lt(\"/Encoding /\"+t.encoding),lt(\"/FirstChar 32\"),lt(\"/LastChar 255\"),lt(\">>\"),lt(\"endobj\"))},ue=function(t){t.objectNumber=Xt();var e=[];e.push({key:\"Type\",value:\"/XObject\"}),e.push({key:\"Subtype\",value:\"/Form\"}),e.push({key:\"BBox\",value:\"[\"+[B(t.x),B(t.y),B(t.x+t.width),B(t.y+t.height)].join(\" \")+\"]\"}),e.push({key:\"Matrix\",value:\"[\"+t.matrix.toString()+\"]\"});var n=t.pages[1].join(\"\\n\");ie({data:n,additionalKeyValues:e,objectId:t.objectNumber}),lt(\"endobj\")},ce=function(t,e){e||(e=21);var n=Xt(),r=function(t,e){var n,r=[],i=1/(e-1);for(n=0;n<1;n+=i)r.push(n);if(r.push(1),0!=t[0].offset){var a={offset:0,color:t[0].color};t.unshift(a)}if(1!=t[t.length-1].offset){var o={offset:1,color:t[t.length-1].color};t.push(o)}for(var s=\"\",u=0,c=0;c<r.length;c++){for(n=r[c];n>t[u+1].offset;)u++;var l=t[u].offset,h=(n-l)/(t[u+1].offset-l),f=t[u].color,d=t[u+1].color;s+=tt(Math.round((1-h)*f[0]+h*d[0]).toString(16))+tt(Math.round((1-h)*f[1]+h*d[1]).toString(16))+tt(Math.round((1-h)*f[2]+h*d[2]).toString(16))}return s.trim()}(t.colors,e),i=[];i.push({key:\"FunctionType\",value:\"0\"}),i.push({key:\"Domain\",value:\"[0.0 1.0]\"}),i.push({key:\"Size\",value:\"[\"+e+\"]\"}),i.push({key:\"BitsPerSample\",value:\"8\"}),i.push({key:\"Range\",value:\"[0.0 1.0 0.0 1.0 0.0 1.0]\"}),i.push({key:\"Decode\",value:\"[0.0 1.0 0.0 1.0 0.0 1.0]\"}),ie({data:r,additionalKeyValues:i,alreadyAppliedFilters:[\"/ASCIIHexDecode\"],objectId:n}),lt(\"endobj\"),t.objectNumber=Xt(),lt(\"<< /ShadingType \"+t.type),lt(\"/ColorSpace /DeviceRGB\");var a=\"/Coords [\"+B(parseFloat(t.coords[0]))+\" \"+B(parseFloat(t.coords[1]))+\" \";2===t.type?a+=B(parseFloat(t.coords[2]))+\" \"+B(parseFloat(t.coords[3])):a+=B(parseFloat(t.coords[2]))+\" \"+B(parseFloat(t.coords[3]))+\" \"+B(parseFloat(t.coords[4]))+\" \"+B(parseFloat(t.coords[5])),lt(a+=\"]\"),t.matrix&&lt(\"/Matrix [\"+t.matrix.toString()+\"]\"),lt(\"/Function \"+n+\" 0 R\"),lt(\"/Extend [true true]\"),lt(\">>\"),lt(\"endobj\")},le=function(t,e){var n=Kt(),r=Xt();e.push({resourcesOid:n,objectOid:r}),t.objectNumber=r;var i=[];i.push({key:\"Type\",value:\"/Pattern\"}),i.push({key:\"PatternType\",value:\"1\"}),i.push({key:\"PaintType\",value:\"1\"}),i.push({key:\"TilingType\",value:\"1\"}),i.push({key:\"BBox\",value:\"[\"+t.boundingBox.map(B).join(\" \")+\"]\"}),i.push({key:\"XStep\",value:B(t.xStep)}),i.push({key:\"YStep\",value:B(t.yStep)}),i.push({key:\"Resources\",value:n+\" 0 R\"}),t.matrix&&i.push({key:\"Matrix\",value:\"[\"+t.matrix.toString()+\"]\"}),ie({data:t.stream,additionalKeyValues:i,objectId:t.objectNumber}),lt(\"endobj\")},he=function(t){for(var e in t.objectNumber=Xt(),lt(\"<<\"),t)switch(e){case\"opacity\":lt(\"/ca \"+T(t[e]));break;case\"stroke-opacity\":lt(\"/CA \"+T(t[e]))}lt(\">>\"),lt(\"endobj\")},fe=function(t){Zt(t.resourcesOid,!0),lt(\"<<\"),lt(\"/ProcSet [/PDF /Text /ImageB /ImageC /ImageI]\"),function(){for(var t in lt(\"/Font <<\"),Ft)Ft.hasOwnProperty(t)&&(!1===v||!0===v&&b.hasOwnProperty(t))&&lt(\"/\"+t+\" \"+Ft[t].objectNumber+\" 0 R\");lt(\">>\")}(),function(){if(Object.keys(Ct).length>0){for(var t in lt(\"/Shading <<\"),Ct)Ct.hasOwnProperty(t)&&Ct[t]instanceof M&&Ct[t].objectNumber>=0&&lt(\"/\"+t+\" \"+Ct[t].objectNumber+\" 0 R\");Dt.publish(\"putShadingPatternDict\"),lt(\">>\")}}(),function(t){if(Object.keys(Ct).length>0){for(var e in lt(\"/Pattern <<\"),Ct)Ct.hasOwnProperty(e)&&Ct[e]instanceof y.TilingPattern&&Ct[e].objectNumber>=0&&Ct[e].objectNumber<t&&lt(\"/\"+e+\" \"+Ct[e].objectNumber+\" 0 R\");Dt.publish(\"putTilingPatternDict\"),lt(\">>\")}}(t.objectOid),function(){if(Object.keys(Bt).length>0){var t;for(t in lt(\"/ExtGState <<\"),Bt)Bt.hasOwnProperty(t)&&Bt[t].objectNumber>=0&&lt(\"/\"+t+\" \"+Bt[t].objectNumber+\" 0 R\");Dt.publish(\"putGStateDict\"),lt(\">>\")}}(),function(){for(var t in lt(\"/XObject <<\"),zt)zt.hasOwnProperty(t)&&zt[t].objectNumber>=0&&lt(\"/\"+t+\" \"+zt[t].objectNumber+\" 0 R\");Dt.publish(\"putXobjectDict\"),lt(\">>\")}(),lt(\">>\"),lt(\"endobj\")},de=function(t){It[t.fontName]=It[t.fontName]||{},It[t.fontName][t.fontStyle]=t.id},pe=function(t,e,n,r,i){var a={id:\"F\"+(Object.keys(Ft).length+1).toString(10),postScriptName:t,fontName:e,fontStyle:n,encoding:r,isStandardFont:i||!1,metadata:{}};return Dt.publish(\"addFont\",{font:a,instance:this}),Ft[a.id]=a,de(a),a.id},ge=y.__private__.pdfEscape=y.pdfEscape=function(t,e){return function(t,e){var n,r,i,a,o,s,u,c,l;if(i=(e=e||{}).sourceEncoding||\"Unicode\",o=e.outputEncoding,(e.autoencode||o)&&Ft[At].metadata&&Ft[At].metadata[i]&&Ft[At].metadata[i].encoding&&(a=Ft[At].metadata[i].encoding,!o&&Ft[At].encoding&&(o=Ft[At].encoding),!o&&a.codePages&&(o=a.codePages[0]),\"string\"==typeof o&&(o=a[o]),o)){for(u=!1,s=[],n=0,r=t.length;n<r;n++)(c=o[t.charCodeAt(n)])?s.push(String.fromCharCode(c)):s.push(t[n]),s[n].charCodeAt(0)>>8&&(u=!0);t=s.join(\"\")}for(n=t.length;void 0===u&&0!==n;)t.charCodeAt(n-1)>>8&&(u=!0),n--;if(!u)return t;for(s=e.noBOM?[]:[254,255],n=0,r=t.length;n<r;n++){if((l=(c=t.charCodeAt(n))>>8)>>8)throw new Error(\"Character at position \"+n+\" of string '\"+t+\"' exceeds 16bits. Cannot be encoded into UCS-2 BE\");s.push(l),s.push(c-(l<<8))}return String.fromCharCode.apply(void 0,s)}(t,e).replace(/\\\\/g,\"\\\\\\\\\").replace(/\\(/g,\"\\\\(\").replace(/\\)/g,\"\\\\)\")},me=y.__private__.beginPage=function(t){ot[++Et]=[],Rt[Et]={objId:0,contentsObjId:0,userUnit:Number(f),artBox:null,bleedBox:null,cropBox:null,trimBox:null,mediaBox:{bottomLeftX:0,bottomLeftY:0,topRightX:Number(t[0]),topRightY:Number(t[1])}},ye(Et),ct(ot[$])},ve=function(t,e){var n,i,a;switch(r=e||r,\"string\"==typeof t&&(n=x(t.toLowerCase()),Array.isArray(n)&&(i=n[0],a=n[1])),Array.isArray(t)&&(i=t[0]*St,a=t[1]*St),isNaN(i)&&(i=s[0],a=s[1]),(i>14400||a>14400)&&(o.warn(\"A page in a PDF can not be wider or taller than 14400 userUnit. jsPDF limits the width/height to 14400\"),i=Math.min(14400,i),a=Math.min(14400,a)),s=[i,a],r.substr(0,1)){case\"l\":a>i&&(s=[a,i]);break;case\"p\":i>a&&(s=[a,i])}me(s),Ze(Xe),lt(on),0!==fn&&lt(fn+\" J\"),0!==dn&&lt(dn+\" j\"),Dt.publish(\"addPage\",{pageNumber:Et})},be=function(t){t>0&&t<=Et&&(ot.splice(t,1),Rt.splice(t,1),Et--,$>Et&&($=Et),this.setPage($))},ye=function(t){t>0&&t<=Et&&($=t)},we=y.__private__.getNumberOfPages=y.getNumberOfPages=function(){return ot.length-1},Ne=function(t,e,n){var r,i=void 0;return n=n||{},t=void 0!==t?t:Ft[At].fontName,e=void 0!==e?e:Ft[At].fontStyle,r=t.toLowerCase(),void 0!==It[r]&&void 0!==It[r][e]?i=It[r][e]:void 0!==It[t]&&void 0!==It[t][e]?i=It[t][e]:!1===n.disableWarning&&o.warn(\"Unable to look up font label for font '\"+t+\"', '\"+e+\"'. Refer to getFontList() for available fonts.\"),i||n.noFallback||null==(i=It.times[e])&&(i=It.times.normal),i},Le=y.__private__.putInfo=function(){var t=Xt(),e=function(t){return t};for(var n in null!==m&&(e=je.encryptor(t,0)),lt(\"<<\"),lt(\"/Producer (\"+ge(e(\"jsPDF \"+E.version))+\")\"),xt)xt.hasOwnProperty(n)&&xt[n]&&lt(\"/\"+n.substr(0,1).toUpperCase()+n.substr(1)+\" (\"+ge(e(xt[n]))+\")\");lt(\"/CreationDate (\"+ge(e(W))+\")\"),lt(\">>\"),lt(\"endobj\")},xe=y.__private__.putCatalog=function(t){var e=(t=t||{}).rootDictionaryObjId||Qt;switch(Xt(),lt(\"<<\"),lt(\"/Type /Catalog\"),lt(\"/Pages \"+e+\" 0 R\"),gt||(gt=\"fullwidth\"),gt){case\"fullwidth\":lt(\"/OpenAction [3 0 R /FitH null]\");break;case\"fullheight\":lt(\"/OpenAction [3 0 R /FitV null]\");break;case\"fullpage\":lt(\"/OpenAction [3 0 R /Fit]\");break;case\"original\":lt(\"/OpenAction [3 0 R /XYZ null null 1]\");break;default:var n=\"\"+gt;\"%\"===n.substr(n.length-1)&&(gt=parseInt(gt)/100),\"number\"==typeof gt&&lt(\"/OpenAction [3 0 R /XYZ null null \"+T(gt)+\"]\")}switch(wt||(wt=\"continuous\"),wt){case\"continuous\":lt(\"/PageLayout /OneColumn\");break;case\"single\":lt(\"/PageLayout /SinglePage\");break;case\"two\":case\"twoleft\":lt(\"/PageLayout /TwoColumnLeft\");break;case\"tworight\":lt(\"/PageLayout /TwoColumnRight\")}bt&&lt(\"/PageMode /\"+bt),Dt.publish(\"putCatalog\"),lt(\">>\"),lt(\"endobj\")},Ae=y.__private__.putTrailer=function(){lt(\"trailer\"),lt(\"<<\"),lt(\"/Size \"+(et+1)),lt(\"/Root \"+et+\" 0 R\"),lt(\"/Info \"+(et-1)+\" 0 R\"),null!==m&&lt(\"/Encrypt \"+je.oid+\" 0 R\"),lt(\"/ID [ <\"+V+\"> <\"+V+\"> ]\"),lt(\">>\")},Se=y.__private__.putHeader=function(){lt(\"%PDF-\"+w),lt(\"%ºß¬à\")},_e=y.__private__.putXRef=function(){var t=\"0000000000\";lt(\"xref\"),lt(\"0 \"+(et+1)),lt(\"0000000000 65535 f \");for(var e=1;e<=et;e++)\"function\"==typeof nt[e]?lt((t+nt[e]()).slice(-10)+\" 00000 n \"):void 0!==nt[e]?lt((t+nt[e]).slice(-10)+\" 00000 n \"):lt(\"0000000000 00000 n \")},Pe=y.__private__.buildDocument=function(){var t;et=0,it=0,rt=[],nt=[],at=[],Qt=Kt(),te=Kt(),ct(rt),Dt.publish(\"buildDocument\"),Se(),oe(),function(){Dt.publish(\"putAdditionalObjects\");for(var t=0;t<at.length;t++){var e=at[t];Zt(e.objId,!0),lt(e.content),lt(\"endobj\")}Dt.publish(\"postPutAdditionalObjects\")}(),t=[],function(){for(var t in Ft)Ft.hasOwnProperty(t)&&(!1===v||!0===v&&b.hasOwnProperty(t))&&se(Ft[t])}(),function(){var t;for(t in Bt)Bt.hasOwnProperty(t)&&he(Bt[t])}(),function(){for(var t in zt)zt.hasOwnProperty(t)&&ue(zt[t])}(),function(t){var e;for(e in Ct)Ct.hasOwnProperty(e)&&(Ct[e]instanceof M?ce(Ct[e]):Ct[e]instanceof q&&le(Ct[e],t))}(t),Dt.publish(\"putResources\"),t.forEach(fe),fe({resourcesOid:te,objectOid:Number.MAX_SAFE_INTEGER}),Dt.publish(\"postPutResources\"),null!==m&&(je.oid=Xt(),lt(\"<<\"),lt(\"/Filter /Standard\"),lt(\"/V \"+je.v),lt(\"/R \"+je.r),lt(\"/U <\"+je.toHexString(je.U)+\">\"),lt(\"/O <\"+je.toHexString(je.O)+\">\"),lt(\"/P \"+je.P),lt(\">>\"),lt(\"endobj\")),Le(),xe();var e=it;return _e(),Ae(),lt(\"startxref\"),lt(\"\"+e),lt(\"%%EOF\"),ct(ot[$]),rt.join(\"\\n\")},ke=y.__private__.getBlob=function(t){return new Blob([ft(t)],{type:\"application/pdf\"})},Fe=y.output=y.__private__.output=(Jt=function(t,e){switch(\"string\"==typeof(e=e||{})?e={filename:e}:e.filename=e.filename||\"generated.pdf\",t){case void 0:return Pe();case\"save\":y.save(e.filename);break;case\"arraybuffer\":return ft(Pe());case\"blob\":return ke(Pe());case\"bloburi\":case\"bloburl\":if(void 0!==i.URL&&\"function\"==typeof i.URL.createObjectURL)return i.URL&&i.URL.createObjectURL(ke(Pe()))||void 0;o.warn(\"bloburl is not supported by your system, because URL.createObjectURL is not supported by your browser.\");break;case\"datauristring\":case\"dataurlstring\":var n=\"\",r=Pe();try{n=d(r)}catch(m){n=d(unescape(encodeURIComponent(r)))}return\"data:application/pdf;filename=\"+e.filename+\";base64,\"+n;case\"pdfobjectnewwindow\":if(\"[object Window]\"===Object.prototype.toString.call(i)){var a=\"https://cdnjs.cloudflare.com/ajax/libs/pdfobject/2.1.1/pdfobject.min.js\",s=' integrity=\"sha512-4ze/a9/4jqu+tX9dfOqJYSvyYd5M6qum/3HpCLr+/Jqf0whc37VUbkpNGHR7/8pSnCFw47T1fmIpwBV7UySh3g==\" crossorigin=\"anonymous\"';e.pdfObjectUrl&&(a=e.pdfObjectUrl,s=\"\");var u='<html><style>html, body { padding: 0; margin: 0; } iframe { width: 100%; height: 100%; border: 0;}  </style><body><script src=\"'+a+'\"'+s+'><\\/script><script >PDFObject.embed(\"'+this.output(\"dataurlstring\")+'\", '+JSON.stringify(e)+\");<\\/script></body></html>\",c=i.open();return null!==c&&c.document.write(u),c}throw new Error(\"The option pdfobjectnewwindow just works in a browser-environment.\");case\"pdfjsnewwindow\":if(\"[object Window]\"===Object.prototype.toString.call(i)){var l='<html><style>html, body { padding: 0; margin: 0; } iframe { width: 100%; height: 100%; border: 0;}  </style><body><iframe id=\"pdfViewer\" src=\"'+(e.pdfJsUrl||\"examples/PDF.js/web/viewer.html\")+\"?file=&downloadName=\"+e.filename+'\" width=\"500px\" height=\"400px\" /></body></html>',h=i.open();if(null!==h){h.document.write(l);var f=this;h.document.documentElement.querySelector(\"#pdfViewer\").onload=function(){h.document.title=e.filename,h.document.documentElement.querySelector(\"#pdfViewer\").contentWindow.PDFViewerApplication.open(f.output(\"bloburl\"))}}return h}throw new Error(\"The option pdfjsnewwindow just works in a browser-environment.\");case\"dataurlnewwindow\":if(\"[object Window]\"!==Object.prototype.toString.call(i))throw new Error(\"The option dataurlnewwindow just works in a browser-environment.\");var p='<html><style>html, body { padding: 0; margin: 0; } iframe { width: 100%; height: 100%; border: 0;}  </style><body><iframe src=\"'+this.output(\"datauristring\",e)+'\"></iframe></body></html>',g=i.open();if(null!==g&&(g.document.write(p),g.document.title=e.filename),g||\"undefined\"==typeof safari)return g;break;case\"datauri\":case\"dataurl\":return i.document.location.href=this.output(\"datauristring\",e);default:return null}},Jt.foo=function(){try{return Jt.apply(this,arguments)}catch(n){var t=n.stack||\"\";~t.indexOf(\" at \")&&(t=t.split(\" at \")[1]);var e=\"Error in function \"+t.split(\"\\n\")[0].split(\"<\")[0]+\": \"+n.message;if(!i.console)throw new Error(e);i.console.error(e,n),i.alert&&alert(e)}},Jt.foo.bar=Jt,Jt.foo),Ie=function(t){return!0===Array.isArray(Tt)&&Tt.indexOf(t)>-1};switch(a){case\"pt\":St=1;break;case\"mm\":St=72/25.4;break;case\"cm\":St=72/2.54;break;case\"in\":St=72;break;case\"px\":St=1==Ie(\"px_scaling\")?.75:96/72;break;case\"pc\":case\"em\":St=12;break;case\"ex\":St=6;break;default:if(\"number\"!=typeof a)throw new Error(\"Invalid unit: \"+a);St=a}var je=null;K(),Y();var Ce=y.__private__.getPageInfo=y.getPageInfo=function(t){if(isNaN(t)||t%1!=0)throw new Error(\"Invalid argument passed to jsPDF.getPageInfo\");return{objId:Rt[t].objId,pageNumber:t,pageContext:Rt[t]}},Oe=y.__private__.getPageInfoByObjId=function(t){if(isNaN(t)||t%1!=0)throw new Error(\"Invalid argument passed to jsPDF.getPageInfoByObjId\");for(var e in Rt)if(Rt[e].objId===t)break;return Ce(e)},Be=y.__private__.getCurrentPageInfo=y.getCurrentPageInfo=function(){return{objId:Rt[$].objId,pageNumber:$,pageContext:Rt[$]}};y.addPage=function(){return ve.apply(this,arguments),this},y.setPage=function(){return ye.apply(this,arguments),ct.call(this,ot[$]),this},y.insertPage=function(t){return this.addPage(),this.movePage($,t),this},y.movePage=function(t,e){var n,r;if(t>e){n=ot[t],r=Rt[t];for(var i=t;i>e;i--)ot[i]=ot[i-1],Rt[i]=Rt[i-1];ot[e]=n,Rt[e]=r,this.setPage(e)}else if(t<e){n=ot[t],r=Rt[t];for(var a=t;a<e;a++)ot[a]=ot[a+1],Rt[a]=Rt[a+1];ot[e]=n,Rt[e]=r,this.setPage(e)}return this},y.deletePage=function(){return be.apply(this,arguments),this},y.__private__.text=y.text=function(e,n,r,i,a){var o,s,u,c,l,h,f,d,p,g=(i=i||{}).scope||this;if(\"number\"==typeof e&&\"number\"==typeof n&&(\"string\"==typeof r||Array.isArray(r))){var m=r;r=n,n=e,e=m}if(arguments[3]instanceof Wt==0?(u=arguments[4],c=arguments[5],\"object\"===t(f=arguments[3])&&null!==f||(\"string\"==typeof u&&(c=u,u=null),\"string\"==typeof f&&(c=f,f=null),\"number\"==typeof f&&(u=f,f=null),i={flags:f,angle:u,align:c})):(R(\"The transform parameter of text() with a Matrix value\"),p=a),isNaN(n)||isNaN(r)||null==e)throw new Error(\"Invalid arguments passed to jsPDF.text\");if(0===e.length)return g;var v,y=\"\",w=\"number\"==typeof i.lineHeightFactor?i.lineHeightFactor:Je,N=g.internal.scaleFactor;function L(t){return t=t.split(\"\\t\").join(Array(i.TabLen||9).join(\" \")),ge(t,f)}function x(t){for(var e,n=t.concat(),r=[],i=n.length;i--;)\"string\"==typeof(e=n.shift())?r.push(e):Array.isArray(t)&&(1===e.length||void 0===e[1]&&void 0===e[2])?r.push(e[0]):r.push([e[0],e[1],e[2]]);return r}function A(t,e){var n;if(\"string\"==typeof t)n=e(t)[0];else if(Array.isArray(t)){for(var r,i,a=t.concat(),o=[],s=a.length;s--;)\"string\"==typeof(r=a.shift())?o.push(e(r)[0]):Array.isArray(r)&&\"string\"==typeof r[0]&&(i=e(r[0],r[1],r[2]),o.push([i[0],i[1],i[2]]));n=o}return n}var P=!1,k=!0;if(\"string\"==typeof e)P=!0;else if(Array.isArray(e)){var F=e.concat();s=[];for(var I,j=F.length;j--;)(\"string\"!=typeof(I=F.shift())||Array.isArray(I)&&\"string\"!=typeof I[0])&&(k=!1);P=k}if(!1===P)throw new Error('Type of text must be string or Array. \"'+e+'\" is not recognized.');\"string\"==typeof e&&(e=e.match(/[\\r?\\n]/)?e.split(/\\r\\n|\\r|\\n/g):[e]);var C=pt/g.internal.scaleFactor,O=C*(w-1);switch(i.baseline){case\"bottom\":r-=O;break;case\"top\":r+=C-O;break;case\"hanging\":r+=C-2*O;break;case\"middle\":r+=C/2-O}if((h=i.maxWidth||0)>0&&(\"string\"==typeof e?e=g.splitTextToSize(e,h):\"[object Array]\"===Object.prototype.toString.call(e)&&(e=e.reduce(function(t,e){return t.concat(g.splitTextToSize(e,h))},[]))),o={text:e,x:n,y:r,options:i,mutex:{pdfEscape:ge,activeFontKey:At,fonts:Ft,activeFontSize:pt}},Dt.publish(\"preProcessText\",o),e=o.text,u=(i=o.options).angle,p instanceof Wt==0&&u&&\"number\"==typeof u){u*=Math.PI/180,0===i.rotationDirection&&(u=-u),_===S&&(u=-u);var M=Math.cos(u),q=Math.sin(u);p=new Wt(M,q,-q,M,0,0)}else u&&u instanceof Wt&&(p=u);_!==S||p||(p=Gt),void 0!==(l=i.charSpace||ln)&&(y+=B(U(l))+\" Tc\\n\",this.setCharSpace(this.getCharSpace()||0)),void 0!==(d=i.horizontalScale)&&(y+=B(100*d)+\" Tz\\n\"),i.lang;var E=-1,D=void 0!==i.renderingMode?i.renderingMode:i.stroke,T=g.internal.getCurrentPageInfo().pageContext;switch(D){case 0:case!1:case\"fill\":E=0;break;case 1:case!0:case\"stroke\":E=1;break;case 2:case\"fillThenStroke\":E=2;break;case 3:case\"invisible\":E=3;break;case 4:case\"fillAndAddForClipping\":E=4;break;case 5:case\"strokeAndAddPathForClipping\":E=5;break;case 6:case\"fillThenStrokeAndAddToPathForClipping\":E=6;break;case 7:case\"addToPathForClipping\":E=7}var z=void 0!==T.usedRenderingMode?T.usedRenderingMode:-1;-1!==E?y+=E+\" Tr\\n\":-1!==z&&(y+=\"0 Tr\\n\"),-1!==E&&(T.usedRenderingMode=E),c=i.align||\"left\";var H,W=pt*w,V=g.internal.pageSize.getWidth(),G=Ft[At];l=i.charSpace||ln,h=i.maxWidth||0,f=Object.assign({autoencode:!0,noBOM:!0},i.flags);var Y=[],J=function(t){return g.getStringUnitWidth(t,{font:G,charSpace:l,fontSize:pt,doKerning:!1})*pt/N};if(\"[object Array]\"===Object.prototype.toString.call(e)){var X;s=x(e),\"left\"!==c&&(H=s.map(J));var K,Z=0;if(\"right\"===c){n-=H[0],e=[],j=s.length;for(var $=0;$<j;$++)0===$?(K=en(n),X=nn(r)):(K=U(Z-H[$]),X=-W),e.push([s[$],K,X]),Z=H[$]}else if(\"center\"===c){n-=H[0]/2,e=[],j=s.length;for(var Q=0;Q<j;Q++)0===Q?(K=en(n),X=nn(r)):(K=U((Z-H[Q])/2),X=-W),e.push([s[Q],K,X]),Z=H[Q]}else if(\"left\"===c){e=[],j=s.length;for(var tt=0;tt<j;tt++)e.push(s[tt])}else if(\"justify\"===c&&\"Identity-H\"===G.encoding){e=[],j=s.length,h=0!==h?h:V;for(var et=0,nt=0;nt<j;nt++)if(X=0===nt?nn(r):-W,K=0===nt?en(n):et,nt<j-1){var rt=U((h-H[nt])/(s[nt].split(\" \").length-1)),it=s[nt].split(\" \");e.push([it[0]+\" \",K,X]),et=0;for(var at=1;at<it.length;at++){var ot=(J(it[at-1]+\" \"+it[at])-J(it[at]))*N+rt;at==it.length-1?e.push([it[at],ot,0]):e.push([it[at]+\" \",ot,0]),et-=ot}}else e.push([s[nt],K,X]);e.push([\"\",et,0])}else{if(\"justify\"!==c)throw new Error('Unrecognized alignment option, use \"left\", \"center\", \"right\" or \"justify\".');for(e=[],j=s.length,h=0!==h?h:V,nt=0;nt<j;nt++)X=0===nt?nn(r):-W,K=0===nt?en(n):0,nt<j-1?Y.push(B(U((h-H[nt])/(s[nt].split(\" \").length-1)))):Y.push(0),e.push([s[nt],K,X])}}!0===(\"boolean\"==typeof i.R2L?i.R2L:vt)&&(e=A(e,function(t,e,n){return[t.split(\"\").reverse().join(\"\"),e,n]})),o={text:e,x:n,y:r,options:i,mutex:{pdfEscape:ge,activeFontKey:At,fonts:Ft,activeFontSize:pt}},Dt.publish(\"postProcessText\",o),e=o.text,v=o.mutex.isHex||!1;var st=Ft[At].encoding;\"WinAnsiEncoding\"!==st&&\"StandardEncoding\"!==st||(e=A(e,function(t,e,n){return[L(t),e,n]})),s=x(e),e=[];for(var ut,ct,ht,ft=Array.isArray(s[0])?1:0,dt=\"\",gt=function(t,e,n){var r=\"\";return n instanceof Wt?(n=\"number\"==typeof i.angle?Vt(n,new Wt(1,0,0,1,t,e)):Vt(new Wt(1,0,0,1,t,e),n),_===S&&(n=Vt(new Wt(1,0,0,-1,0,0),n)),r=n.join(\" \")+\" Tm\\n\"):r=B(t)+\" \"+B(e)+\" Td\\n\",r},mt=0;mt<s.length;mt++){switch(dt=\"\",ft){case 1:ht=(v?\"<\":\"(\")+s[mt][0]+(v?\">\":\")\"),ut=parseFloat(s[mt][1]),ct=parseFloat(s[mt][2]);break;case 0:ht=(v?\"<\":\"(\")+s[mt]+(v?\">\":\")\"),ut=en(n),ct=nn(r)}void 0!==Y&&void 0!==Y[mt]&&(dt=Y[mt]+\" Tw\\n\"),0===mt?e.push(dt+gt(ut,ct,p)+ht):0===ft?e.push(dt+ht):1===ft&&e.push(dt+gt(ut,ct,p)+ht)}e=0===ft?e.join(\" Tj\\nT* \"):e.join(\" Tj\\n\"),e+=\" Tj\\n\";var bt=\"BT\\n/\";return bt+=At+\" \"+pt+\" Tf\\n\",bt+=B(pt*w)+\" TL\\n\",bt+=un+\"\\n\",bt+=y,bt+=e,lt(bt+=\"ET\"),b[At]=!0,g};var Me=y.__private__.clip=y.clip=function(t){return lt(\"evenodd\"===t?\"W*\":\"W\"),this};y.clipEvenOdd=function(){return Me(\"evenodd\")},y.__private__.discardPath=y.discardPath=function(){return lt(\"n\"),this};var qe=y.__private__.isValidStyle=function(t){var e=!1;return-1!==[void 0,null,\"S\",\"D\",\"F\",\"DF\",\"FD\",\"f\",\"f*\",\"B\",\"B*\",\"n\"].indexOf(t)&&(e=!0),e};y.__private__.setDefaultPathOperation=y.setDefaultPathOperation=function(t){return qe(t)&&(g=t),this};var Ee=y.__private__.getStyle=y.getStyle=function(t){var e=g;switch(t){case\"D\":case\"S\":e=\"S\";break;case\"F\":e=\"f\";break;case\"FD\":case\"DF\":e=\"B\";break;case\"f\":case\"f*\":case\"B\":case\"B*\":e=t}return e},Re=y.close=function(){return lt(\"h\"),this};y.stroke=function(){return lt(\"S\"),this},y.fill=function(t){return De(\"f\",t),this},y.fillEvenOdd=function(t){return De(\"f*\",t),this},y.fillStroke=function(t){return De(\"B\",t),this},y.fillStrokeEvenOdd=function(t){return De(\"B*\",t),this};var De=function(e,n){\"object\"===t(n)?Ue(n,e):lt(e)},Te=function(t){null===t||_===S&&void 0===t||(t=Ee(t),lt(t))};function ze(t,e,n,r,i){var a=new q(e||this.boundingBox,n||this.xStep,r||this.yStep,this.gState,i||this.matrix);a.stream=this.stream;var o=t+\"$$\"+this.cloneIndex+++\"$$\";return Yt(o,a),a}var Ue=function(t,e){var n=Ot[t.key],r=Ct[n];if(r instanceof M)lt(\"q\"),lt(He(e)),r.gState&&y.setGState(r.gState),lt(t.matrix.toString()+\" cm\"),lt(\"/\"+n+\" sh\"),lt(\"Q\");else if(r instanceof q){var i=new Wt(1,0,0,-1,0,Ln());t.matrix&&(i=i.multiply(t.matrix||Gt),n=ze.call(r,t.key,t.boundingBox,t.xStep,t.yStep,i).id),lt(\"q\"),lt(\"/Pattern cs\"),lt(\"/\"+n+\" scn\"),r.gState&&y.setGState(r.gState),lt(e),lt(\"Q\")}},He=function(t){switch(t){case\"f\":case\"F\":case\"n\":return\"W n\";case\"f*\":return\"W* n\";case\"B\":case\"S\":return\"W S\";case\"B*\":return\"W* S\"}},We=y.moveTo=function(t,e){return lt(B(U(t))+\" \"+B(H(e))+\" m\"),this},Ve=y.lineTo=function(t,e){return lt(B(U(t))+\" \"+B(H(e))+\" l\"),this},Ge=y.curveTo=function(t,e,n,r,i,a){return lt([B(U(t)),B(H(e)),B(U(n)),B(H(r)),B(U(i)),B(H(a)),\"c\"].join(\" \")),this};y.__private__.line=y.line=function(t,e,n,r,i){if(isNaN(t)||isNaN(e)||isNaN(n)||isNaN(r)||!qe(i))throw new Error(\"Invalid arguments passed to jsPDF.line\");return _===A?this.lines([[n-t,r-e]],t,e,[1,1],i||\"S\"):this.lines([[n-t,r-e]],t,e,[1,1]).stroke()},y.__private__.lines=y.lines=function(t,e,n,r,i,a){var o,s,u,c,l,h,f,d,p,g,m,v;if(\"number\"==typeof t&&(v=n,n=e,e=t,t=v),r=r||[1,1],a=a||!1,isNaN(e)||isNaN(n)||!Array.isArray(t)||!Array.isArray(r)||!qe(i)||\"boolean\"!=typeof a)throw new Error(\"Invalid arguments passed to jsPDF.lines\");for(We(e,n),o=r[0],s=r[1],c=t.length,g=e,m=n,u=0;u<c;u++)2===(l=t[u]).length?(g=l[0]*o+g,m=l[1]*s+m,Ve(g,m)):(h=l[0]*o+g,f=l[1]*s+m,d=l[2]*o+g,p=l[3]*s+m,g=l[4]*o+g,m=l[5]*s+m,Ge(h,f,d,p,g,m));return a&&Re(),Te(i),this},y.path=function(t){for(var e=0;e<t.length;e++){var n=t[e],r=n.c;switch(n.op){case\"m\":We(r[0],r[1]);break;case\"l\":Ve(r[0],r[1]);break;case\"c\":Ge.apply(this,r);break;case\"h\":Re()}}return this},y.__private__.rect=y.rect=function(t,e,n,r,i){if(isNaN(t)||isNaN(e)||isNaN(n)||isNaN(r)||!qe(i))throw new Error(\"Invalid arguments passed to jsPDF.rect\");return _===A&&(r=-r),lt([B(U(t)),B(H(e)),B(U(n)),B(U(r)),\"re\"].join(\" \")),Te(i),this},y.__private__.triangle=y.triangle=function(t,e,n,r,i,a,o){if(isNaN(t)||isNaN(e)||isNaN(n)||isNaN(r)||isNaN(i)||isNaN(a)||!qe(o))throw new Error(\"Invalid arguments passed to jsPDF.triangle\");return this.lines([[n-t,r-e],[i-n,a-r],[t-i,e-a]],t,e,[1,1],o,!0),this},y.__private__.roundedRect=y.roundedRect=function(t,e,n,r,i,a,o){if(isNaN(t)||isNaN(e)||isNaN(n)||isNaN(r)||isNaN(i)||isNaN(a)||!qe(o))throw new Error(\"Invalid arguments passed to jsPDF.roundedRect\");var s=4/3*(Math.SQRT2-1);return i=Math.min(i,.5*n),a=Math.min(a,.5*r),this.lines([[n-2*i,0],[i*s,0,i,a-a*s,i,a],[0,r-2*a],[0,a*s,-i*s,a,-i,a],[2*i-n,0],[-i*s,0,-i,-a*s,-i,-a],[0,2*a-r],[0,-a*s,i*s,-a,i,-a]],t+i,e,[1,1],o,!0),this},y.__private__.ellipse=y.ellipse=function(t,e,n,r,i){if(isNaN(t)||isNaN(e)||isNaN(n)||isNaN(r)||!qe(i))throw new Error(\"Invalid arguments passed to jsPDF.ellipse\");var a=4/3*(Math.SQRT2-1)*n,o=4/3*(Math.SQRT2-1)*r;return We(t+n,e),Ge(t+n,e-o,t+a,e-r,t,e-r),Ge(t-a,e-r,t-n,e-o,t-n,e),Ge(t-n,e+o,t-a,e+r,t,e+r),Ge(t+a,e+r,t+n,e+o,t+n,e),Te(i),this},y.__private__.circle=y.circle=function(t,e,n,r){if(isNaN(t)||isNaN(e)||isNaN(n)||!qe(r))throw new Error(\"Invalid arguments passed to jsPDF.circle\");return this.ellipse(t,e,n,n,r)},y.setFont=function(t,e,n){return n&&(e=F(e,n)),At=Ne(t,e,{disableWarning:!1}),this};var Ye=y.__private__.getFont=y.getFont=function(){return Ft[Ne.apply(y,arguments)]};y.__private__.getFontList=y.getFontList=function(){var t,e,n={};for(t in It)if(It.hasOwnProperty(t))for(e in n[t]=[],It[t])It[t].hasOwnProperty(e)&&n[t].push(e);return n},y.addFont=function(t,e,n,r,i){var a=[\"StandardEncoding\",\"MacRomanEncoding\",\"Identity-H\",\"WinAnsiEncoding\"];return arguments[3]&&-1!==a.indexOf(arguments[3])?i=arguments[3]:arguments[3]&&-1==a.indexOf(arguments[3])&&(n=F(n,r)),pe.call(this,t,e,n,i=i||\"Identity-H\")};var Je,Xe=e.lineWidth||.200025,Ke=y.__private__.getLineWidth=y.getLineWidth=function(){return Xe},Ze=y.__private__.setLineWidth=y.setLineWidth=function(t){return Xe=t,lt(B(U(t))+\" w\"),this};y.__private__.setLineDash=E.API.setLineDash=E.API.setLineDashPattern=function(t,e){if(t=t||[],e=e||0,isNaN(e)||!Array.isArray(t))throw new Error(\"Invalid arguments passed to jsPDF.setLineDash\");return t=t.map(function(t){return B(U(t))}).join(\" \"),e=B(U(e)),lt(\"[\"+t+\"] \"+e+\" d\"),this};var $e=y.__private__.getLineHeight=y.getLineHeight=function(){return pt*Je};y.__private__.getLineHeight=y.getLineHeight=function(){return pt*Je};var Qe=y.__private__.setLineHeightFactor=y.setLineHeightFactor=function(t){return\"number\"==typeof(t=t||1.15)&&(Je=t),this},tn=y.__private__.getLineHeightFactor=y.getLineHeightFactor=function(){return Je};Qe(e.lineHeight);var en=y.__private__.getHorizontalCoordinate=function(t){return U(t)},nn=y.__private__.getVerticalCoordinate=function(t){return _===S?t:Rt[$].mediaBox.topRightY-Rt[$].mediaBox.bottomLeftY-U(t)},rn=y.__private__.getHorizontalCoordinateString=y.getHorizontalCoordinateString=function(t){return B(en(t))},an=y.__private__.getVerticalCoordinateString=y.getVerticalCoordinateString=function(t){return B(nn(t))},on=e.strokeColor||\"0 G\";y.__private__.getStrokeColor=y.getDrawColor=function(){return ee(on)},y.__private__.setStrokeColor=y.setDrawColor=function(t,e,n,r){return on=ne({ch1:t,ch2:e,ch3:n,ch4:r,pdfColorType:\"draw\",precision:2}),lt(on),this};var sn=e.fillColor||\"0 g\";y.__private__.getFillColor=y.getFillColor=function(){return ee(sn)},y.__private__.setFillColor=y.setFillColor=function(t,e,n,r){return sn=ne({ch1:t,ch2:e,ch3:n,ch4:r,pdfColorType:\"fill\",precision:2}),lt(sn),this};var un=e.textColor||\"0 g\",cn=y.__private__.getTextColor=y.getTextColor=function(){return ee(un)};y.__private__.setTextColor=y.setTextColor=function(t,e,n,r){return un=ne({ch1:t,ch2:e,ch3:n,ch4:r,pdfColorType:\"text\",precision:3}),this};var ln=e.charSpace,hn=y.__private__.getCharSpace=y.getCharSpace=function(){return parseFloat(ln||0)};y.__private__.setCharSpace=y.setCharSpace=function(t){if(isNaN(t))throw new Error(\"Invalid argument passed to jsPDF.setCharSpace\");return ln=t,this};var fn=0;y.CapJoinStyles={0:0,butt:0,but:0,miter:0,1:1,round:1,rounded:1,circle:1,2:2,projecting:2,project:2,square:2,bevel:2},y.__private__.setLineCap=y.setLineCap=function(t){var e=y.CapJoinStyles[t];if(void 0===e)throw new Error(\"Line cap style of '\"+t+\"' is not recognized. See or extend .CapJoinStyles property for valid styles\");return fn=e,lt(e+\" J\"),this};var dn=0;y.__private__.setLineJoin=y.setLineJoin=function(t){var e=y.CapJoinStyles[t];if(void 0===e)throw new Error(\"Line join style of '\"+t+\"' is not recognized. See or extend .CapJoinStyles property for valid styles\");return dn=e,lt(e+\" j\"),this},y.__private__.setLineMiterLimit=y.__private__.setMiterLimit=y.setLineMiterLimit=y.setMiterLimit=function(t){if(t=t||0,isNaN(t))throw new Error(\"Invalid argument passed to jsPDF.setLineMiterLimit\");return lt(B(U(t))+\" M\"),this},y.GState=O,y.setGState=function(t){(t=\"string\"==typeof t?Bt[Mt[t]]:pn(null,t)).equals(qt)||(lt(\"/\"+t.id+\" gs\"),qt=t)};var pn=function(t,e){if(!t||!Mt[t]){var n=!1;for(var r in Bt)if(Bt.hasOwnProperty(r)&&Bt[r].equals(e)){n=!0;break}if(n)e=Bt[r];else{var i=\"GS\"+(Object.keys(Bt).length+1).toString(10);Bt[i]=e,e.id=i}return t&&(Mt[t]=e.id),Dt.publish(\"addGState\",e),e}};y.addGState=function(t,e){return pn(t,e),this},y.saveGraphicsState=function(){return lt(\"q\"),jt.push({key:At,size:pt,color:un}),this},y.restoreGraphicsState=function(){lt(\"Q\");var t=jt.pop();return At=t.key,pt=t.size,un=t.color,qt=null,this},y.setCurrentTransformationMatrix=function(t){return lt(t.toString()+\" cm\"),this},y.comment=function(t){return lt(\"#\"+t),this};var gn=function(t,e){var n=t||0;Object.defineProperty(this,\"x\",{enumerable:!0,get:function(){return n},set:function(t){isNaN(t)||(n=parseFloat(t))}});var r=e||0;Object.defineProperty(this,\"y\",{enumerable:!0,get:function(){return r},set:function(t){isNaN(t)||(r=parseFloat(t))}});var i=\"pt\";return Object.defineProperty(this,\"type\",{enumerable:!0,get:function(){return i},set:function(t){i=t.toString()}}),this},mn=function(t,e,n,r){gn.call(this,t,e),this.type=\"rect\";var i=n||0;Object.defineProperty(this,\"w\",{enumerable:!0,get:function(){return i},set:function(t){isNaN(t)||(i=parseFloat(t))}});var a=r||0;return Object.defineProperty(this,\"h\",{enumerable:!0,get:function(){return a},set:function(t){isNaN(t)||(a=parseFloat(t))}}),this},vn=function(){this.page=Et,this.currentPage=$,this.pages=ot.slice(0),this.pagesContext=Rt.slice(0),this.x=_t,this.y=Pt,this.matrix=kt,this.width=wn($),this.height=Ln($),this.outputDestination=ut,this.id=\"\",this.objectNumber=-1};vn.prototype.restore=function(){Et=this.page,$=this.currentPage,Rt=this.pagesContext,ot=this.pages,_t=this.x,Pt=this.y,kt=this.matrix,Nn($,this.width),xn($,this.height),ut=this.outputDestination};var bn=function(t,e,n,r,i){Ht.push(new vn),Et=$=0,ot=[],_t=t,Pt=e,kt=i,me([n,r])};for(var yn in y.beginFormObject=function(t,e,n,r,i){return bn(t,e,n,r,i),this},y.endFormObject=function(t){return function(t){if(Ut[t])Ht.pop().restore();else{var e=new vn,n=\"Xo\"+(Object.keys(zt).length+1).toString(10);e.id=n,Ut[t]=n,zt[n]=e,Dt.publish(\"addFormObject\",e),Ht.pop().restore()}}(t),this},y.doFormObject=function(t,e){var n=zt[Ut[t]];return lt(\"q\"),lt(e.toString()+\" cm\"),lt(\"/\"+n.id+\" Do\"),lt(\"Q\"),this},y.getFormObject=function(t){var e=zt[Ut[t]];return{x:e.x,y:e.y,width:e.width,height:e.height,matrix:e.matrix}},y.save=function(t,e){return t=t||\"generated.pdf\",(e=e||{}).returnPromise=e.returnPromise||!1,!1===e.returnPromise?(l(ke(Pe()),t),\"function\"==typeof l.unload&&i.setTimeout&&setTimeout(l.unload,911),this):new Promise(function(e,n){try{var r=l(ke(Pe()),t);\"function\"==typeof l.unload&&i.setTimeout&&setTimeout(l.unload,911),e(r)}catch(a){n(a.message)}})},E.API)E.API.hasOwnProperty(yn)&&(\"events\"===yn&&E.API.events.length?function(t,e){var n,r,i;for(i=e.length-1;-1!==i;i--)n=e[i][0],r=e[i][1],t.subscribe.apply(t,[n].concat(\"function\"==typeof r?[r]:r))}(Dt,E.API.events):y[yn]=E.API[yn]);var wn=y.getPageWidth=function(t){return(Rt[t=t||$].mediaBox.topRightX-Rt[t].mediaBox.bottomLeftX)/St},Nn=y.setPageWidth=function(t,e){Rt[t].mediaBox.topRightX=e*St+Rt[t].mediaBox.bottomLeftX},Ln=y.getPageHeight=function(t){return(Rt[t=t||$].mediaBox.topRightY-Rt[t].mediaBox.bottomLeftY)/St},xn=y.setPageHeight=function(t,e){Rt[t].mediaBox.topRightY=e*St+Rt[t].mediaBox.bottomLeftY};return y.internal={pdfEscape:ge,getStyle:Ee,getFont:Ye,getFontSize:mt,getCharSpace:hn,getTextColor:cn,getLineHeight:$e,getLineHeightFactor:tn,getLineWidth:Ke,write:ht,getHorizontalCoordinate:en,getVerticalCoordinate:nn,getCoordinateString:rn,getVerticalCoordinateString:an,collections:{},newObject:Xt,newAdditionalObject:$t,newObjectDeferred:Kt,newObjectDeferredBegin:Zt,getFilters:re,putStream:ie,events:Dt,scaleFactor:St,pageSize:{getWidth:function(){return wn($)},setWidth:function(t){Nn($,t)},getHeight:function(){return Ln($)},setHeight:function(t){xn($,t)}},encryptionOptions:m,encryption:je,getEncryptor:function(t){return null!==m?je.encryptor(t,0):function(t){return t}},output:Fe,getNumberOfPages:we,pages:ot,out:lt,f2:T,f3:z,getPageInfo:Ce,getPageInfoByObjId:Oe,getCurrentPageInfo:Be,getPDFVersion:N,Point:gn,Rectangle:mn,Matrix:Wt,hasHotfix:Ie},Object.defineProperty(y.internal.pageSize,\"width\",{get:function(){return wn($)},set:function(t){Nn($,t)},enumerable:!0,configurable:!0}),Object.defineProperty(y.internal.pageSize,\"height\",{get:function(){return Ln($)},set:function(t){xn($,t)},enumerable:!0,configurable:!0}),function(t){for(var e=0,n=dt.length;e<n;e++){var r=pe.call(this,t[e][0],t[e][1],t[e][2],dt[e][3],!0);!1===v&&(b[r]=!0);var i=t[e][0].split(\"-\");de({id:r,fontName:i[0],fontStyle:i[1]||\"\"})}Dt.publish(\"addFonts\",{fonts:Ft,dictionary:It})}.call(y,dt),At=\"F1\",ve(s,r),Dt.publish(\"initialized\"),y}I.prototype.lsbFirstWord=function(t){return String.fromCharCode(255&t,t>>8&255,t>>16&255,t>>24&255)},I.prototype.toHexString=function(t){return t.split(\"\").map(function(t){return(\"0\"+(255&t.charCodeAt(0)).toString(16)).slice(-2)}).join(\"\")},I.prototype.hexToBytes=function(t){for(var e=[],n=0;n<t.length;n+=2)e.push(String.fromCharCode(parseInt(t.substr(n,2),16)));return e.join(\"\")},I.prototype.processOwnerPassword=function(t,e){return k(S(e).substr(0,5),t)},I.prototype.encryptor=function(t,e){var n=S(this.encryptionKey+String.fromCharCode(255&t,t>>8&255,t>>16&255,255&e,e>>8&255)).substr(0,10);return function(t){return k(n,t)}},O.prototype.equals=function(e){var n,r=\"id,objectNumber,equals\";if(!e||t(e)!==t(this))return!1;var i=0;for(n in this)if(!(r.indexOf(n)>=0)){if(this.hasOwnProperty(n)&&!e.hasOwnProperty(n))return!1;if(this[n]!==e[n])return!1;i++}for(n in e)e.hasOwnProperty(n)&&r.indexOf(n)<0&&i--;return 0===i},E.API={events:[]},E.version=\"3.0.2\";var R=E.API,D=1,T=function(t){return t.replace(/\\\\/g,\"\\\\\\\\\").replace(/\\(/g,\"\\\\(\").replace(/\\)/g,\"\\\\)\")},z=function(t){return t.replace(/\\\\\\\\/g,\"\\\\\").replace(/\\\\\\(/g,\"(\").replace(/\\\\\\)/g,\")\")},U=function(t){return t.toFixed(2)},H=function(t){return t.toFixed(5)};R.__acroform__={};var W=function(t,e){t.prototype=Object.create(e.prototype),t.prototype.constructor=t},V=function(t){return t*D},G=function(t){var e=new ct,n=xt.internal.getHeight(t)||0,r=xt.internal.getWidth(t)||0;return e.BBox=[0,0,Number(U(r)),Number(U(n))],e},Y=R.__acroform__.setBit=function(t,e){if(t=t||0,e=e||0,isNaN(t)||isNaN(e))throw new Error(\"Invalid arguments passed to jsPDF.API.__acroform__.setBit\");return t|1<<e},J=R.__acroform__.clearBit=function(t,e){if(t=t||0,e=e||0,isNaN(t)||isNaN(e))throw new Error(\"Invalid arguments passed to jsPDF.API.__acroform__.clearBit\");return t&~(1<<e)},X=R.__acroform__.getBit=function(t,e){if(isNaN(t)||isNaN(e))throw new Error(\"Invalid arguments passed to jsPDF.API.__acroform__.getBit\");return t&1<<e?1:0},K=R.__acroform__.getBitForPdf=function(t,e){if(isNaN(t)||isNaN(e))throw new Error(\"Invalid arguments passed to jsPDF.API.__acroform__.getBitForPdf\");return X(t,e-1)},Z=R.__acroform__.setBitForPdf=function(t,e){if(isNaN(t)||isNaN(e))throw new Error(\"Invalid arguments passed to jsPDF.API.__acroform__.setBitForPdf\");return Y(t,e-1)},$=R.__acroform__.clearBitForPdf=function(t,e){if(isNaN(t)||isNaN(e))throw new Error(\"Invalid arguments passed to jsPDF.API.__acroform__.clearBitForPdf\");return J(t,e-1)},Q=R.__acroform__.calculateCoordinates=function(t,e){var n=e.internal.getHorizontalCoordinate,r=e.internal.getVerticalCoordinate,i=t[0],a=t[1],o=t[2],s=t[3],u={};return u.lowerLeft_X=n(i)||0,u.lowerLeft_Y=r(a+s)||0,u.upperRight_X=n(i+o)||0,u.upperRight_Y=r(a)||0,[Number(U(u.lowerLeft_X)),Number(U(u.lowerLeft_Y)),Number(U(u.upperRight_X)),Number(U(u.upperRight_Y))]},tt=function(t){if(t.appearanceStreamContent)return t.appearanceStreamContent;if(t.V||t.DV){var e=[],n=t._V||t.DV,r=et(t,n),i=t.scope.internal.getFont(t.fontName,t.fontStyle).id;e.push(\"/Tx BMC\"),e.push(\"q\"),e.push(\"BT\"),e.push(t.scope.__private__.encodeColorString(t.color)),e.push(\"/\"+i+\" \"+U(r.fontSize)+\" Tf\"),e.push(\"1 0 0 1 0 0 Tm\"),e.push(r.text),e.push(\"ET\"),e.push(\"Q\"),e.push(\"EMC\");var a=G(t);return a.scope=t.scope,a.stream=e.join(\"\\n\"),a}},et=function(t,e){var n=0===t.fontSize?t.maxFontSize:t.fontSize,r={text:\"\",fontSize:\"\"},i=(e=\")\"==(e=\"(\"==e.substr(0,1)?e.substr(1):e).substr(e.length-1)?e.substr(0,e.length-1):e).split(\" \");i=t.multiline?i.map(function(t){return t.split(\"\\n\")}):i.map(function(t){return[t]});var a=n,o=xt.internal.getHeight(t)||0;o=o<0?-o:o;var s=xt.internal.getWidth(t)||0;s=s<0?-s:s;var u=function(e,n,r){if(e+1<i.length){var a=n+\" \"+i[e+1][0];return nt(a,t,r).width<=s-4}return!1};a++;t:for(;a>0;){e=\"\",a--;var c,l,h=nt(\"3\",t,a).height,f=t.multiline?o-a:(o-h)/2,d=f+=2,p=0,g=0,m=0;if(a<=0){e=\"(...) Tj\\n\",e+=\"% Width of Text: \"+nt(e,t,a=12).width+\", FieldWidth:\"+s+\"\\n\";break}for(var v=\"\",b=0,y=0;y<i.length;y++)if(i.hasOwnProperty(y)){var w=!1;if(1!==i[y].length&&m!==i[y].length-1){if((h+2)*(b+2)+2>o)continue t;v+=i[y][m],w=!0,g=y,y--}else{v=\" \"==(v+=i[y][m]+\" \").substr(v.length-1)?v.substr(0,v.length-1):v;var N=parseInt(y),L=u(N,v,a),x=y>=i.length-1;if(L&&!x){v+=\" \",m=0;continue}if(L||x){if(x)g=N;else if(t.multiline&&(h+2)*(b+2)+2>o)continue t}else{if(!t.multiline)continue t;if((h+2)*(b+2)+2>o)continue t;g=N}}for(var A=\"\",S=p;S<=g;S++){var _=i[S];if(t.multiline){if(S===g){A+=_[m]+\" \",m=(m+1)%_.length;continue}if(S===p){A+=_[_.length-1]+\" \";continue}}A+=_[0]+\" \"}switch(A=\" \"==A.substr(A.length-1)?A.substr(0,A.length-1):A,l=nt(A,t,a).width,t.textAlign){case\"right\":c=s-l-2;break;case\"center\":c=(s-l)/2;break;default:c=2}e+=U(c)+\" \"+U(d)+\" Td\\n\",e+=\"(\"+T(A)+\") Tj\\n\",e+=-U(c)+\" 0 Td\\n\",d=-(a+2),l=0,p=w?g:g+1,b++,v=\"\"}break}return r.text=e,r.fontSize=a,r},nt=function(t,e,n){var r=e.scope.internal.getFont(e.fontName,e.fontStyle),i=e.scope.getStringUnitWidth(t,{font:r,fontSize:parseFloat(n),charSpace:0})*parseFloat(n);return{height:e.scope.getStringUnitWidth(\"3\",{font:r,fontSize:parseFloat(n),charSpace:0})*parseFloat(n)*1.5,width:i}},rt={fields:[],xForms:[],acroFormDictionaryRoot:null,printedOut:!1,internal:null,isInitialized:!1},it=function(t,e){var n={type:\"reference\",object:t};void 0===e.internal.getPageInfo(t.page).pageContext.annotations.find(function(t){return t.type===n.type&&t.object===n.object})&&e.internal.getPageInfo(t.page).pageContext.annotations.push(n)},at=function(e,n){if(n.scope=e,void 0!==e.internal&&(void 0===e.internal.acroformPlugin||!1===e.internal.acroformPlugin.isInitialized)){if(ht.FieldNum=0,e.internal.acroformPlugin=JSON.parse(JSON.stringify(rt)),e.internal.acroformPlugin.acroFormDictionaryRoot)throw new Error(\"Exception while creating AcroformDictionary\");D=e.internal.scaleFactor,e.internal.acroformPlugin.acroFormDictionaryRoot=new lt,e.internal.acroformPlugin.acroFormDictionaryRoot.scope=e,e.internal.acroformPlugin.acroFormDictionaryRoot._eventID=e.internal.events.subscribe(\"postPutResources\",function(){!function(t){t.internal.events.unsubscribe(t.internal.acroformPlugin.acroFormDictionaryRoot._eventID),delete t.internal.acroformPlugin.acroFormDictionaryRoot._eventID,t.internal.acroformPlugin.printedOut=!0}(e)}),e.internal.events.subscribe(\"buildDocument\",function(){!function(t){t.internal.acroformPlugin.acroFormDictionaryRoot.objId=void 0;var e=t.internal.acroformPlugin.acroFormDictionaryRoot.Fields;for(var n in e)if(e.hasOwnProperty(n)){var r=e[n];r.objId=void 0,r.hasAnnotation&&it(r,t)}}(e)}),e.internal.events.subscribe(\"putCatalog\",function(){!function(t){if(void 0===t.internal.acroformPlugin.acroFormDictionaryRoot)throw new Error(\"putCatalogCallback: Root missing.\");t.internal.write(\"/AcroForm \"+t.internal.acroformPlugin.acroFormDictionaryRoot.objId+\" 0 R\")}(e)}),e.internal.events.subscribe(\"postPutPages\",function(n){!function(e,n){var r=!e;for(var i in e||(n.internal.newObjectDeferredBegin(n.internal.acroformPlugin.acroFormDictionaryRoot.objId,!0),n.internal.acroformPlugin.acroFormDictionaryRoot.putStream()),e=e||n.internal.acroformPlugin.acroFormDictionaryRoot.Kids)if(e.hasOwnProperty(i)){var a=e[i],o=[],s=a.Rect;if(a.Rect&&(a.Rect=Q(a.Rect,n)),n.internal.newObjectDeferredBegin(a.objId,!0),a.DA=xt.createDefaultAppearanceStream(a),\"object\"===t(a)&&\"function\"==typeof a.getKeyValueListForStream&&(o=a.getKeyValueListForStream()),a.Rect=s,a.hasAppearanceStream&&!a.appearanceStreamContent){var u=tt(a);o.push({key:\"AP\",value:\"<</N \"+u+\">>\"}),n.internal.acroformPlugin.xForms.push(u)}if(a.appearanceStreamContent){var c=\"\";for(var l in a.appearanceStreamContent)if(a.appearanceStreamContent.hasOwnProperty(l)){var h=a.appearanceStreamContent[l];if(c+=\"/\"+l+\" \",c+=\"<<\",Object.keys(h).length>=1||Array.isArray(h)){for(var i in h)if(h.hasOwnProperty(i)){var f=h[i];\"function\"==typeof f&&(f=f.call(n,a)),c+=\"/\"+i+\" \"+f+\" \",n.internal.acroformPlugin.xForms.indexOf(f)>=0||n.internal.acroformPlugin.xForms.push(f)}}else\"function\"==typeof(f=h)&&(f=f.call(n,a)),c+=\"/\"+i+\" \"+f,n.internal.acroformPlugin.xForms.indexOf(f)>=0||n.internal.acroformPlugin.xForms.push(f);c+=\">>\"}o.push({key:\"AP\",value:\"<<\\n\"+c+\">>\"})}n.internal.putStream({additionalKeyValues:o,objectId:a.objId}),n.internal.out(\"endobj\")}r&&function(e,n){for(var r in e)if(e.hasOwnProperty(r)){var i=r,a=e[r];n.internal.newObjectDeferredBegin(a.objId,!0),\"object\"===t(a)&&\"function\"==typeof a.putStream&&a.putStream(),delete e[i]}}(n.internal.acroformPlugin.xForms,n)}(n,e)}),e.internal.acroformPlugin.isInitialized=!0}},ot=R.__acroform__.arrayToPdfArray=function(e,n,r){var i=function(t){return t};if(Array.isArray(e)){for(var a=\"[\",o=0;o<e.length;o++)switch(0!==o&&(a+=\" \"),t(e[o])){case\"boolean\":case\"number\":case\"object\":a+=e[o].toString();break;case\"string\":\"/\"!==e[o].substr(0,1)?(void 0!==n&&r&&(i=r.internal.getEncryptor(n)),a+=\"(\"+T(i(e[o].toString()))+\")\"):a+=e[o].toString()}return a+\"]\"}throw new Error(\"Invalid argument passed to jsPDF.__acroform__.arrayToPdfArray\")},st=function(t,e,n){var r=function(t){return t};return void 0!==e&&n&&(r=n.internal.getEncryptor(e)),(t=t||\"\").toString(),\"(\"+T(r(t))+\")\"},ut=function(){this._objId=void 0,this._scope=void 0,Object.defineProperty(this,\"objId\",{get:function(){if(void 0===this._objId){if(void 0===this.scope)return;this._objId=this.scope.internal.newObjectDeferred()}return this._objId},set:function(t){this._objId=t}}),Object.defineProperty(this,\"scope\",{value:this._scope,writable:!0})};ut.prototype.toString=function(){return this.objId+\" 0 R\"},ut.prototype.putStream=function(){var t=this.getKeyValueListForStream();this.scope.internal.putStream({data:this.stream,additionalKeyValues:t,objectId:this.objId}),this.scope.internal.out(\"endobj\")},ut.prototype.getKeyValueListForStream=function(){var t=[],e=Object.getOwnPropertyNames(this).filter(function(t){return\"content\"!=t&&\"appearanceStreamContent\"!=t&&\"scope\"!=t&&\"objId\"!=t&&\"_\"!=t.substring(0,1)});for(var n in e)if(!1===Object.getOwnPropertyDescriptor(this,e[n]).configurable){var r=e[n],i=this[r];i&&(Array.isArray(i)?t.push({key:r,value:ot(i,this.objId,this.scope)}):i instanceof ut?(i.scope=this.scope,t.push({key:r,value:i.objId+\" 0 R\"})):\"function\"!=typeof i&&t.push({key:r,value:i}))}return t};var ct=function(){ut.call(this),Object.defineProperty(this,\"Type\",{value:\"/XObject\",configurable:!1,writable:!0}),Object.defineProperty(this,\"Subtype\",{value:\"/Form\",configurable:!1,writable:!0}),Object.defineProperty(this,\"FormType\",{value:1,configurable:!1,writable:!0});var t,e=[];Object.defineProperty(this,\"BBox\",{configurable:!1,get:function(){return e},set:function(t){e=t}}),Object.defineProperty(this,\"Resources\",{value:\"2 0 R\",configurable:!1,writable:!0}),Object.defineProperty(this,\"stream\",{enumerable:!1,configurable:!0,set:function(e){t=e.trim()},get:function(){return t||null}})};W(ct,ut);var lt=function(){ut.call(this);var t,e=[];Object.defineProperty(this,\"Kids\",{enumerable:!1,configurable:!0,get:function(){return e.length>0?e:void 0}}),Object.defineProperty(this,\"Fields\",{enumerable:!1,configurable:!1,get:function(){return e}}),Object.defineProperty(this,\"DA\",{enumerable:!1,configurable:!1,get:function(){if(t){var e=function(t){return t};return this.scope&&(e=this.scope.internal.getEncryptor(this.objId)),\"(\"+T(e(t))+\")\"}},set:function(e){t=e}})};W(lt,ut);var ht=function t(){ut.call(this);var e=4;Object.defineProperty(this,\"F\",{enumerable:!1,configurable:!1,get:function(){return e},set:function(t){if(isNaN(t))throw new Error('Invalid value \"'+t+'\" for attribute F supplied.');e=t}}),Object.defineProperty(this,\"showWhenPrinted\",{enumerable:!0,configurable:!0,get:function(){return Boolean(K(e,3))},set:function(t){!0===Boolean(t)?this.F=Z(e,3):this.F=$(e,3)}});var n=0;Object.defineProperty(this,\"Ff\",{enumerable:!1,configurable:!1,get:function(){return n},set:function(t){if(isNaN(t))throw new Error('Invalid value \"'+t+'\" for attribute Ff supplied.');n=t}});var r=[];Object.defineProperty(this,\"Rect\",{enumerable:!1,configurable:!1,get:function(){if(0!==r.length)return r},set:function(t){r=void 0!==t?t:[]}}),Object.defineProperty(this,\"x\",{enumerable:!0,configurable:!0,get:function(){return!r||isNaN(r[0])?0:r[0]},set:function(t){r[0]=t}}),Object.defineProperty(this,\"y\",{enumerable:!0,configurable:!0,get:function(){return!r||isNaN(r[1])?0:r[1]},set:function(t){r[1]=t}}),Object.defineProperty(this,\"width\",{enumerable:!0,configurable:!0,get:function(){return!r||isNaN(r[2])?0:r[2]},set:function(t){r[2]=t}}),Object.defineProperty(this,\"height\",{enumerable:!0,configurable:!0,get:function(){return!r||isNaN(r[3])?0:r[3]},set:function(t){r[3]=t}});var i=\"\";Object.defineProperty(this,\"FT\",{enumerable:!0,configurable:!1,get:function(){return i},set:function(t){switch(t){case\"/Btn\":case\"/Tx\":case\"/Ch\":case\"/Sig\":i=t;break;default:throw new Error('Invalid value \"'+t+'\" for attribute FT supplied.')}}});var a=null;Object.defineProperty(this,\"T\",{enumerable:!0,configurable:!1,get:function(){if(!a||a.length<1){if(this instanceof yt)return;a=\"FieldObject\"+t.FieldNum++}var e=function(t){return t};return this.scope&&(e=this.scope.internal.getEncryptor(this.objId)),\"(\"+T(e(a))+\")\"},set:function(t){a=t.toString()}}),Object.defineProperty(this,\"fieldName\",{configurable:!0,enumerable:!0,get:function(){return a},set:function(t){a=t}});var o=\"helvetica\";Object.defineProperty(this,\"fontName\",{enumerable:!0,configurable:!0,get:function(){return o},set:function(t){o=t}});var s=\"normal\";Object.defineProperty(this,\"fontStyle\",{enumerable:!0,configurable:!0,get:function(){return s},set:function(t){s=t}});var u=0;Object.defineProperty(this,\"fontSize\",{enumerable:!0,configurable:!0,get:function(){return u},set:function(t){u=t}});var c=void 0;Object.defineProperty(this,\"maxFontSize\",{enumerable:!0,configurable:!0,get:function(){return void 0===c?50/D:c},set:function(t){c=t}});var l=\"black\";Object.defineProperty(this,\"color\",{enumerable:!0,configurable:!0,get:function(){return l},set:function(t){l=t}});var h=\"/F1 0 Tf 0 g\";Object.defineProperty(this,\"DA\",{enumerable:!0,configurable:!1,get:function(){if(!(!h||this instanceof yt||this instanceof Nt))return st(h,this.objId,this.scope)},set:function(t){t=t.toString(),h=t}});var f=null;Object.defineProperty(this,\"DV\",{enumerable:!1,configurable:!1,get:function(){if(f)return this instanceof mt==0?st(f,this.objId,this.scope):f},set:function(t){t=t.toString(),f=this instanceof mt==0?\"(\"===t.substr(0,1)?z(t.substr(1,t.length-2)):z(t):t}}),Object.defineProperty(this,\"defaultValue\",{enumerable:!0,configurable:!0,get:function(){return this instanceof mt==1?z(f.substr(1,f.length-1)):f},set:function(t){t=t.toString(),f=this instanceof mt==1?\"/\"+t:t}});var d=null;Object.defineProperty(this,\"_V\",{enumerable:!1,configurable:!1,get:function(){if(d)return d},set:function(t){this.V=t}}),Object.defineProperty(this,\"V\",{enumerable:!1,configurable:!1,get:function(){if(d)return this instanceof mt==0?st(d,this.objId,this.scope):d},set:function(t){t=t.toString(),d=this instanceof mt==0?\"(\"===t.substr(0,1)?z(t.substr(1,t.length-2)):z(t):t}}),Object.defineProperty(this,\"value\",{enumerable:!0,configurable:!0,get:function(){return this instanceof mt==1?z(d.substr(1,d.length-1)):d},set:function(t){t=t.toString(),d=this instanceof mt==1?\"/\"+t:t}}),Object.defineProperty(this,\"hasAnnotation\",{enumerable:!0,configurable:!0,get:function(){return this.Rect}}),Object.defineProperty(this,\"Type\",{enumerable:!0,configurable:!1,get:function(){return this.hasAnnotation?\"/Annot\":null}}),Object.defineProperty(this,\"Subtype\",{enumerable:!0,configurable:!1,get:function(){return this.hasAnnotation?\"/Widget\":null}});var p,g=!1;Object.defineProperty(this,\"hasAppearanceStream\",{enumerable:!0,configurable:!0,get:function(){return g},set:function(t){t=Boolean(t),g=t}}),Object.defineProperty(this,\"page\",{enumerable:!0,configurable:!0,get:function(){if(p)return p},set:function(t){p=t}}),Object.defineProperty(this,\"readOnly\",{enumerable:!0,configurable:!0,get:function(){return Boolean(K(this.Ff,1))},set:function(t){!0===Boolean(t)?this.Ff=Z(this.Ff,1):this.Ff=$(this.Ff,1)}}),Object.defineProperty(this,\"required\",{enumerable:!0,configurable:!0,get:function(){return Boolean(K(this.Ff,2))},set:function(t){!0===Boolean(t)?this.Ff=Z(this.Ff,2):this.Ff=$(this.Ff,2)}}),Object.defineProperty(this,\"noExport\",{enumerable:!0,configurable:!0,get:function(){return Boolean(K(this.Ff,3))},set:function(t){!0===Boolean(t)?this.Ff=Z(this.Ff,3):this.Ff=$(this.Ff,3)}});var m=null;Object.defineProperty(this,\"Q\",{enumerable:!0,configurable:!1,get:function(){if(null!==m)return m},set:function(t){if(-1===[0,1,2].indexOf(t))throw new Error('Invalid value \"'+t+'\" for attribute Q supplied.');m=t}}),Object.defineProperty(this,\"textAlign\",{get:function(){var t;switch(m){case 0:default:t=\"left\";break;case 1:t=\"center\";break;case 2:t=\"right\"}return t},configurable:!0,enumerable:!0,set:function(t){switch(t){case\"right\":case 2:m=2;break;case\"center\":case 1:m=1;break;default:m=0}}})};W(ht,ut);var ft=function(){ht.call(this),this.FT=\"/Ch\",this.V=\"()\",this.fontName=\"zapfdingbats\";var t=0;Object.defineProperty(this,\"TI\",{enumerable:!0,configurable:!1,get:function(){return t},set:function(e){t=e}}),Object.defineProperty(this,\"topIndex\",{enumerable:!0,configurable:!0,get:function(){return t},set:function(e){t=e}});var e=[];Object.defineProperty(this,\"Opt\",{enumerable:!0,configurable:!1,get:function(){return ot(e,this.objId,this.scope)},set:function(t){var n,r;r=[],\"string\"==typeof(n=t)&&(r=function(t,e,n){n||(n=1);for(var r,i=[];r=e.exec(t);)i.push(r[n]);return i}(n,/\\((.*?)\\)/g)),e=r}}),this.getOptions=function(){return e},this.setOptions=function(t){e=t,this.sort&&e.sort()},this.addOption=function(t){t=(t=t||\"\").toString(),e.push(t),this.sort&&e.sort()},this.removeOption=function(t,n){for(n=n||!1,t=(t=t||\"\").toString();-1!==e.indexOf(t)&&(e.splice(e.indexOf(t),1),!1!==n););},Object.defineProperty(this,\"combo\",{enumerable:!0,configurable:!0,get:function(){return Boolean(K(this.Ff,18))},set:function(t){!0===Boolean(t)?this.Ff=Z(this.Ff,18):this.Ff=$(this.Ff,18)}}),Object.defineProperty(this,\"edit\",{enumerable:!0,configurable:!0,get:function(){return Boolean(K(this.Ff,19))},set:function(t){!0===this.combo&&(!0===Boolean(t)?this.Ff=Z(this.Ff,19):this.Ff=$(this.Ff,19))}}),Object.defineProperty(this,\"sort\",{enumerable:!0,configurable:!0,get:function(){return Boolean(K(this.Ff,20))},set:function(t){!0===Boolean(t)?(this.Ff=Z(this.Ff,20),e.sort()):this.Ff=$(this.Ff,20)}}),Object.defineProperty(this,\"multiSelect\",{enumerable:!0,configurable:!0,get:function(){return Boolean(K(this.Ff,22))},set:function(t){!0===Boolean(t)?this.Ff=Z(this.Ff,22):this.Ff=$(this.Ff,22)}}),Object.defineProperty(this,\"doNotSpellCheck\",{enumerable:!0,configurable:!0,get:function(){return Boolean(K(this.Ff,23))},set:function(t){!0===Boolean(t)?this.Ff=Z(this.Ff,23):this.Ff=$(this.Ff,23)}}),Object.defineProperty(this,\"commitOnSelChange\",{enumerable:!0,configurable:!0,get:function(){return Boolean(K(this.Ff,27))},set:function(t){!0===Boolean(t)?this.Ff=Z(this.Ff,27):this.Ff=$(this.Ff,27)}}),this.hasAppearanceStream=!1};W(ft,ht);var dt=function(){ft.call(this),this.fontName=\"helvetica\",this.combo=!1};W(dt,ft);var pt=function(){dt.call(this),this.combo=!0};W(pt,dt);var gt=function(){pt.call(this),this.edit=!0};W(gt,pt);var mt=function(){ht.call(this),this.FT=\"/Btn\",Object.defineProperty(this,\"noToggleToOff\",{enumerable:!0,configurable:!0,get:function(){return Boolean(K(this.Ff,15))},set:function(t){!0===Boolean(t)?this.Ff=Z(this.Ff,15):this.Ff=$(this.Ff,15)}}),Object.defineProperty(this,\"radio\",{enumerable:!0,configurable:!0,get:function(){return Boolean(K(this.Ff,16))},set:function(t){!0===Boolean(t)?this.Ff=Z(this.Ff,16):this.Ff=$(this.Ff,16)}}),Object.defineProperty(this,\"pushButton\",{enumerable:!0,configurable:!0,get:function(){return Boolean(K(this.Ff,17))},set:function(t){!0===Boolean(t)?this.Ff=Z(this.Ff,17):this.Ff=$(this.Ff,17)}}),Object.defineProperty(this,\"radioIsUnison\",{enumerable:!0,configurable:!0,get:function(){return Boolean(K(this.Ff,26))},set:function(t){!0===Boolean(t)?this.Ff=Z(this.Ff,26):this.Ff=$(this.Ff,26)}});var e,n={};Object.defineProperty(this,\"MK\",{enumerable:!1,configurable:!1,get:function(){var t=function(t){return t};if(this.scope&&(t=this.scope.internal.getEncryptor(this.objId)),0!==Object.keys(n).length){var e,r=[];for(e in r.push(\"<<\"),n)r.push(\"/\"+e+\" (\"+T(t(n[e]))+\")\");return r.push(\">>\"),r.join(\"\\n\")}},set:function(e){\"object\"===t(e)&&(n=e)}}),Object.defineProperty(this,\"caption\",{enumerable:!0,configurable:!0,get:function(){return n.CA||\"\"},set:function(t){\"string\"==typeof t&&(n.CA=t)}}),Object.defineProperty(this,\"AS\",{enumerable:!1,configurable:!1,get:function(){return e},set:function(t){e=t}}),Object.defineProperty(this,\"appearanceState\",{enumerable:!0,configurable:!0,get:function(){return e.substr(1,e.length-1)},set:function(t){e=\"/\"+t}})};W(mt,ht);var vt=function(){mt.call(this),this.pushButton=!0};W(vt,mt);var bt=function(){mt.call(this),this.radio=!0,this.pushButton=!1;var t=[];Object.defineProperty(this,\"Kids\",{enumerable:!0,configurable:!1,get:function(){return t},set:function(e){t=void 0!==e?e:[]}})};W(bt,mt);var yt=function(){var e,n;ht.call(this),Object.defineProperty(this,\"Parent\",{enumerable:!1,configurable:!1,get:function(){return e},set:function(t){e=t}}),Object.defineProperty(this,\"optionName\",{enumerable:!1,configurable:!0,get:function(){return n},set:function(t){n=t}});var r,i={};Object.defineProperty(this,\"MK\",{enumerable:!1,configurable:!1,get:function(){var t=function(t){return t};this.scope&&(t=this.scope.internal.getEncryptor(this.objId));var e,n=[];for(e in n.push(\"<<\"),i)n.push(\"/\"+e+\" (\"+T(t(i[e]))+\")\");return n.push(\">>\"),n.join(\"\\n\")},set:function(e){\"object\"===t(e)&&(i=e)}}),Object.defineProperty(this,\"caption\",{enumerable:!0,configurable:!0,get:function(){return i.CA||\"\"},set:function(t){\"string\"==typeof t&&(i.CA=t)}}),Object.defineProperty(this,\"AS\",{enumerable:!1,configurable:!1,get:function(){return r},set:function(t){r=t}}),Object.defineProperty(this,\"appearanceState\",{enumerable:!0,configurable:!0,get:function(){return r.substr(1,r.length-1)},set:function(t){r=\"/\"+t}}),this.caption=\"l\",this.appearanceState=\"Off\",this._AppearanceType=xt.RadioButton.Circle,this.appearanceStreamContent=this._AppearanceType.createAppearanceStream(this.optionName)};W(yt,ht),bt.prototype.setAppearance=function(t){if(!(\"createAppearanceStream\"in t)||!(\"getCA\"in t))throw new Error(\"Couldn't assign Appearance to RadioButton. Appearance was Invalid!\");for(var e in this.Kids)if(this.Kids.hasOwnProperty(e)){var n=this.Kids[e];n.appearanceStreamContent=t.createAppearanceStream(n.optionName),n.caption=t.getCA()}},bt.prototype.createOption=function(t){var e=new yt;return e.Parent=this,e.optionName=t,this.Kids.push(e),At.call(this.scope,e),e};var wt=function(){mt.call(this),this.fontName=\"zapfdingbats\",this.caption=\"3\",this.appearanceState=\"On\",this.value=\"On\",this.textAlign=\"center\",this.appearanceStreamContent=xt.CheckBox.createAppearanceStream()};W(wt,mt);var Nt=function(){ht.call(this),this.FT=\"/Tx\",Object.defineProperty(this,\"multiline\",{enumerable:!0,configurable:!0,get:function(){return Boolean(K(this.Ff,13))},set:function(t){!0===Boolean(t)?this.Ff=Z(this.Ff,13):this.Ff=$(this.Ff,13)}}),Object.defineProperty(this,\"fileSelect\",{enumerable:!0,configurable:!0,get:function(){return Boolean(K(this.Ff,21))},set:function(t){!0===Boolean(t)?this.Ff=Z(this.Ff,21):this.Ff=$(this.Ff,21)}}),Object.defineProperty(this,\"doNotSpellCheck\",{enumerable:!0,configurable:!0,get:function(){return Boolean(K(this.Ff,23))},set:function(t){!0===Boolean(t)?this.Ff=Z(this.Ff,23):this.Ff=$(this.Ff,23)}}),Object.defineProperty(this,\"doNotScroll\",{enumerable:!0,configurable:!0,get:function(){return Boolean(K(this.Ff,24))},set:function(t){!0===Boolean(t)?this.Ff=Z(this.Ff,24):this.Ff=$(this.Ff,24)}}),Object.defineProperty(this,\"comb\",{enumerable:!0,configurable:!0,get:function(){return Boolean(K(this.Ff,25))},set:function(t){!0===Boolean(t)?this.Ff=Z(this.Ff,25):this.Ff=$(this.Ff,25)}}),Object.defineProperty(this,\"richText\",{enumerable:!0,configurable:!0,get:function(){return Boolean(K(this.Ff,26))},set:function(t){!0===Boolean(t)?this.Ff=Z(this.Ff,26):this.Ff=$(this.Ff,26)}});var t=null;Object.defineProperty(this,\"MaxLen\",{enumerable:!0,configurable:!1,get:function(){return t},set:function(e){t=e}}),Object.defineProperty(this,\"maxLength\",{enumerable:!0,configurable:!0,get:function(){return t},set:function(e){Number.isInteger(e)&&(t=e)}}),Object.defineProperty(this,\"hasAppearanceStream\",{enumerable:!0,configurable:!0,get:function(){return this.V||this.DV}})};W(Nt,ht);var Lt=function(){Nt.call(this),Object.defineProperty(this,\"password\",{enumerable:!0,configurable:!0,get:function(){return Boolean(K(this.Ff,14))},set:function(t){!0===Boolean(t)?this.Ff=Z(this.Ff,14):this.Ff=$(this.Ff,14)}}),this.password=!0};W(Lt,Nt);var xt={CheckBox:{createAppearanceStream:function(){return{N:{On:xt.CheckBox.YesNormal},D:{On:xt.CheckBox.YesPushDown,Off:xt.CheckBox.OffPushDown}}},YesPushDown:function(t){var e=G(t);e.scope=t.scope;var n=[],r=t.scope.internal.getFont(t.fontName,t.fontStyle).id,i=t.scope.__private__.encodeColorString(t.color),a=et(t,t.caption);return n.push(\"0.749023 g\"),n.push(\"0 0 \"+U(xt.internal.getWidth(t))+\" \"+U(xt.internal.getHeight(t))+\" re\"),n.push(\"f\"),n.push(\"BMC\"),n.push(\"q\"),n.push(\"0 0 1 rg\"),n.push(\"/\"+r+\" \"+U(a.fontSize)+\" Tf \"+i),n.push(\"BT\"),n.push(a.text),n.push(\"ET\"),n.push(\"Q\"),n.push(\"EMC\"),e.stream=n.join(\"\\n\"),e},YesNormal:function(t){var e=G(t);e.scope=t.scope;var n=t.scope.internal.getFont(t.fontName,t.fontStyle).id,r=t.scope.__private__.encodeColorString(t.color),i=[],a=xt.internal.getHeight(t),o=xt.internal.getWidth(t),s=et(t,t.caption);return i.push(\"1 g\"),i.push(\"0 0 \"+U(o)+\" \"+U(a)+\" re\"),i.push(\"f\"),i.push(\"q\"),i.push(\"0 0 1 rg\"),i.push(\"0 0 \"+U(o-1)+\" \"+U(a-1)+\" re\"),i.push(\"W\"),i.push(\"n\"),i.push(\"0 g\"),i.push(\"BT\"),i.push(\"/\"+n+\" \"+U(s.fontSize)+\" Tf \"+r),i.push(s.text),i.push(\"ET\"),i.push(\"Q\"),e.stream=i.join(\"\\n\"),e},OffPushDown:function(t){var e=G(t);e.scope=t.scope;var n=[];return n.push(\"0.749023 g\"),n.push(\"0 0 \"+U(xt.internal.getWidth(t))+\" \"+U(xt.internal.getHeight(t))+\" re\"),n.push(\"f\"),e.stream=n.join(\"\\n\"),e}},RadioButton:{Circle:{createAppearanceStream:function(t){var e={D:{Off:xt.RadioButton.Circle.OffPushDown},N:{}};return e.N[t]=xt.RadioButton.Circle.YesNormal,e.D[t]=xt.RadioButton.Circle.YesPushDown,e},getCA:function(){return\"l\"},YesNormal:function(t){var e=G(t);e.scope=t.scope;var n=[],r=xt.internal.getWidth(t)<=xt.internal.getHeight(t)?xt.internal.getWidth(t)/4:xt.internal.getHeight(t)/4;r=Number((.9*r).toFixed(5));var i=xt.internal.Bezier_C,a=Number((r*i).toFixed(5));return n.push(\"q\"),n.push(\"1 0 0 1 \"+H(xt.internal.getWidth(t)/2)+\" \"+H(xt.internal.getHeight(t)/2)+\" cm\"),n.push(r+\" 0 m\"),n.push(r+\" \"+a+\" \"+a+\" \"+r+\" 0 \"+r+\" c\"),n.push(\"-\"+a+\" \"+r+\" -\"+r+\" \"+a+\" -\"+r+\" 0 c\"),n.push(\"-\"+r+\" -\"+a+\" -\"+a+\" -\"+r+\" 0 -\"+r+\" c\"),n.push(a+\" -\"+r+\" \"+r+\" -\"+a+\" \"+r+\" 0 c\"),n.push(\"f\"),n.push(\"Q\"),e.stream=n.join(\"\\n\"),e},YesPushDown:function(t){var e=G(t);e.scope=t.scope;var n=[],r=xt.internal.getWidth(t)<=xt.internal.getHeight(t)?xt.internal.getWidth(t)/4:xt.internal.getHeight(t)/4;r=Number((.9*r).toFixed(5));var i=Number((2*r).toFixed(5)),a=Number((i*xt.internal.Bezier_C).toFixed(5)),o=Number((r*xt.internal.Bezier_C).toFixed(5));return n.push(\"0.749023 g\"),n.push(\"q\"),n.push(\"1 0 0 1 \"+H(xt.internal.getWidth(t)/2)+\" \"+H(xt.internal.getHeight(t)/2)+\" cm\"),n.push(i+\" 0 m\"),n.push(i+\" \"+a+\" \"+a+\" \"+i+\" 0 \"+i+\" c\"),n.push(\"-\"+a+\" \"+i+\" -\"+i+\" \"+a+\" -\"+i+\" 0 c\"),n.push(\"-\"+i+\" -\"+a+\" -\"+a+\" -\"+i+\" 0 -\"+i+\" c\"),n.push(a+\" -\"+i+\" \"+i+\" -\"+a+\" \"+i+\" 0 c\"),n.push(\"f\"),n.push(\"Q\"),n.push(\"0 g\"),n.push(\"q\"),n.push(\"1 0 0 1 \"+H(xt.internal.getWidth(t)/2)+\" \"+H(xt.internal.getHeight(t)/2)+\" cm\"),n.push(r+\" 0 m\"),n.push(r+\" \"+o+\" \"+o+\" \"+r+\" 0 \"+r+\" c\"),n.push(\"-\"+o+\" \"+r+\" -\"+r+\" \"+o+\" -\"+r+\" 0 c\"),n.push(\"-\"+r+\" -\"+o+\" -\"+o+\" -\"+r+\" 0 -\"+r+\" c\"),n.push(o+\" -\"+r+\" \"+r+\" -\"+o+\" \"+r+\" 0 c\"),n.push(\"f\"),n.push(\"Q\"),e.stream=n.join(\"\\n\"),e},OffPushDown:function(t){var e=G(t);e.scope=t.scope;var n=[],r=xt.internal.getWidth(t)<=xt.internal.getHeight(t)?xt.internal.getWidth(t)/4:xt.internal.getHeight(t)/4;r=Number((.9*r).toFixed(5));var i=Number((2*r).toFixed(5)),a=Number((i*xt.internal.Bezier_C).toFixed(5));return n.push(\"0.749023 g\"),n.push(\"q\"),n.push(\"1 0 0 1 \"+H(xt.internal.getWidth(t)/2)+\" \"+H(xt.internal.getHeight(t)/2)+\" cm\"),n.push(i+\" 0 m\"),n.push(i+\" \"+a+\" \"+a+\" \"+i+\" 0 \"+i+\" c\"),n.push(\"-\"+a+\" \"+i+\" -\"+i+\" \"+a+\" -\"+i+\" 0 c\"),n.push(\"-\"+i+\" -\"+a+\" -\"+a+\" -\"+i+\" 0 -\"+i+\" c\"),n.push(a+\" -\"+i+\" \"+i+\" -\"+a+\" \"+i+\" 0 c\"),n.push(\"f\"),n.push(\"Q\"),e.stream=n.join(\"\\n\"),e}},Cross:{createAppearanceStream:function(t){var e={D:{Off:xt.RadioButton.Cross.OffPushDown},N:{}};return e.N[t]=xt.RadioButton.Cross.YesNormal,e.D[t]=xt.RadioButton.Cross.YesPushDown,e},getCA:function(){return\"8\"},YesNormal:function(t){var e=G(t);e.scope=t.scope;var n=[],r=xt.internal.calculateCross(t);return n.push(\"q\"),n.push(\"1 1 \"+U(xt.internal.getWidth(t)-2)+\" \"+U(xt.internal.getHeight(t)-2)+\" re\"),n.push(\"W\"),n.push(\"n\"),n.push(U(r.x1.x)+\" \"+U(r.x1.y)+\" m\"),n.push(U(r.x2.x)+\" \"+U(r.x2.y)+\" l\"),n.push(U(r.x4.x)+\" \"+U(r.x4.y)+\" m\"),n.push(U(r.x3.x)+\" \"+U(r.x3.y)+\" l\"),n.push(\"s\"),n.push(\"Q\"),e.stream=n.join(\"\\n\"),e},YesPushDown:function(t){var e=G(t);e.scope=t.scope;var n=xt.internal.calculateCross(t),r=[];return r.push(\"0.749023 g\"),r.push(\"0 0 \"+U(xt.internal.getWidth(t))+\" \"+U(xt.internal.getHeight(t))+\" re\"),r.push(\"f\"),r.push(\"q\"),r.push(\"1 1 \"+U(xt.internal.getWidth(t)-2)+\" \"+U(xt.internal.getHeight(t)-2)+\" re\"),r.push(\"W\"),r.push(\"n\"),r.push(U(n.x1.x)+\" \"+U(n.x1.y)+\" m\"),r.push(U(n.x2.x)+\" \"+U(n.x2.y)+\" l\"),r.push(U(n.x4.x)+\" \"+U(n.x4.y)+\" m\"),r.push(U(n.x3.x)+\" \"+U(n.x3.y)+\" l\"),r.push(\"s\"),r.push(\"Q\"),e.stream=r.join(\"\\n\"),e},OffPushDown:function(t){var e=G(t);e.scope=t.scope;var n=[];return n.push(\"0.749023 g\"),n.push(\"0 0 \"+U(xt.internal.getWidth(t))+\" \"+U(xt.internal.getHeight(t))+\" re\"),n.push(\"f\"),e.stream=n.join(\"\\n\"),e}}},createDefaultAppearanceStream:function(t){var e=t.scope.internal.getFont(t.fontName,t.fontStyle).id,n=t.scope.__private__.encodeColorString(t.color);return\"/\"+e+\" \"+t.fontSize+\" Tf \"+n}};xt.internal={Bezier_C:.551915024494,calculateCross:function(t){var e=xt.internal.getWidth(t),n=xt.internal.getHeight(t),r=Math.min(e,n);return{x1:{x:(e-r)/2,y:(n-r)/2+r},x2:{x:(e-r)/2+r,y:(n-r)/2},x3:{x:(e-r)/2,y:(n-r)/2},x4:{x:(e-r)/2+r,y:(n-r)/2+r}}}},xt.internal.getWidth=function(e){var n=0;return\"object\"===t(e)&&(n=V(e.Rect[2])),n},xt.internal.getHeight=function(e){var n=0;return\"object\"===t(e)&&(n=V(e.Rect[3])),n};var At=R.addField=function(t){if(at(this,t),!(t instanceof ht))throw new Error(\"Invalid argument passed to jsPDF.addField.\");var e;return(e=t).scope.internal.acroformPlugin.printedOut&&(e.scope.internal.acroformPlugin.printedOut=!1,e.scope.internal.acroformPlugin.acroFormDictionaryRoot=null),e.scope.internal.acroformPlugin.acroFormDictionaryRoot.Fields.push(e),t.page=t.scope.internal.getCurrentPageInfo().pageNumber,this};R.AcroFormChoiceField=ft,R.AcroFormListBox=dt,R.AcroFormComboBox=pt,R.AcroFormEditBox=gt,R.AcroFormButton=mt,R.AcroFormPushButton=vt,R.AcroFormRadioButton=bt,R.AcroFormCheckBox=wt,R.AcroFormTextField=Nt,R.AcroFormPasswordField=Lt,R.AcroFormAppearance=xt,R.AcroForm={ChoiceField:ft,ListBox:dt,ComboBox:pt,EditBox:gt,Button:mt,PushButton:vt,RadioButton:bt,CheckBox:wt,TextField:Nt,PasswordField:Lt,Appearance:xt},E.AcroForm={ChoiceField:ft,ListBox:dt,ComboBox:pt,EditBox:gt,Button:mt,PushButton:vt,RadioButton:bt,CheckBox:wt,TextField:Nt,PasswordField:Lt,Appearance:xt};var St=E.AcroForm;function _t(t){return t.reduce(function(t,e,n){return t[e]=n,t},{})}!function(e){var n=\"addImage_\";e.__addimage__={};var r=\"UNKNOWN\",i={PNG:[[137,80,78,71]],TIFF:[[77,77,0,42],[73,73,42,0]],JPEG:[[255,216,255,224,void 0,void 0,74,70,73,70,0],[255,216,255,225,void 0,void 0,69,120,105,102,0,0],[255,216,255,219],[255,216,255,238]],JPEG2000:[[0,0,0,12,106,80,32,32]],GIF87a:[[71,73,70,56,55,97]],GIF89a:[[71,73,70,56,57,97]],WEBP:[[82,73,70,70,void 0,void 0,void 0,void 0,87,69,66,80]],BMP:[[66,77],[66,65],[67,73],[67,80],[73,67],[80,84]]},a=e.__addimage__.getImageFileTypeByImageData=function(t,e){var n,a,o,s,u,c=r;if(\"RGBA\"===(e=e||r)||void 0!==t.data&&t.data instanceof Uint8ClampedArray&&\"height\"in t&&\"width\"in t)return\"RGBA\";if(A(t))for(u in i)for(o=i[u],n=0;n<o.length;n+=1){for(s=!0,a=0;a<o[n].length;a+=1)if(void 0!==o[n][a]&&o[n][a]!==t[a]){s=!1;break}if(!0===s){c=u;break}}else for(u in i)for(o=i[u],n=0;n<o.length;n+=1){for(s=!0,a=0;a<o[n].length;a+=1)if(void 0!==o[n][a]&&o[n][a]!==t.charCodeAt(a)){s=!1;break}if(!0===s){c=u;break}}return c===r&&e!==r&&(c=e),c},o=function t(e){for(var n=this.internal.write,r=this.internal.putStream,i=(0,this.internal.getFilters)();-1!==i.indexOf(\"FlateEncode\");)i.splice(i.indexOf(\"FlateEncode\"),1);e.objectId=this.internal.newObject();var a=[];if(a.push({key:\"Type\",value:\"/XObject\"}),a.push({key:\"Subtype\",value:\"/Image\"}),a.push({key:\"Width\",value:e.width}),a.push({key:\"Height\",value:e.height}),e.colorSpace===y.INDEXED?a.push({key:\"ColorSpace\",value:\"[/Indexed /DeviceRGB \"+(e.palette.length/3-1)+\" \"+(\"sMask\"in e&&void 0!==e.sMask?e.objectId+2:e.objectId+1)+\" 0 R]\"}):(a.push({key:\"ColorSpace\",value:\"/\"+e.colorSpace}),e.colorSpace===y.DEVICE_CMYK&&a.push({key:\"Decode\",value:\"[1 0 1 0 1 0 1 0]\"})),a.push({key:\"BitsPerComponent\",value:e.bitsPerComponent}),\"decodeParameters\"in e&&void 0!==e.decodeParameters&&a.push({key:\"DecodeParms\",value:\"<<\"+e.decodeParameters+\">>\"}),\"transparency\"in e&&Array.isArray(e.transparency)){for(var o=\"\",s=0,u=e.transparency.length;s<u;s++)o+=e.transparency[s]+\" \"+e.transparency[s]+\" \";a.push({key:\"Mask\",value:\"[\"+o+\"]\"})}void 0!==e.sMask&&a.push({key:\"SMask\",value:e.objectId+1+\" 0 R\"});var c=void 0!==e.filter?[\"/\"+e.filter]:void 0;if(r({data:e.data,additionalKeyValues:a,alreadyAppliedFilters:c,objectId:e.objectId}),n(\"endobj\"),\"sMask\"in e&&void 0!==e.sMask){var l=(null!=e.predictor?\"/Predictor \"+e.predictor:\"\")+\" /Colors 1 /BitsPerComponent 8 /Columns \"+e.width,h={width:e.width,height:e.height,colorSpace:\"DeviceGray\",bitsPerComponent:e.bitsPerComponent,decodeParameters:l,data:e.sMask};\"filter\"in e&&(h.filter=e.filter),t.call(this,h)}if(e.colorSpace===y.INDEXED){var f=this.internal.newObject();r({data:_(new Uint8Array(e.palette)),objectId:f}),n(\"endobj\")}},s=function(){var t=this.internal.collections[n+\"images\"];for(var e in t)o.call(this,t[e])},u=function(){var t,e=this.internal.collections[n+\"images\"],r=this.internal.write;for(var i in e)r(\"/I\"+(t=e[i]).index,t.objectId,\"0\",\"R\")},c=function(){this.internal.collections[n+\"images\"]||(this.internal.collections[n+\"images\"]={},this.internal.events.subscribe(\"putResources\",s),this.internal.events.subscribe(\"putXobjectDict\",u))},l=function(){var t=this.internal.collections[n+\"images\"];return c.call(this),t},h=function(){return Object.keys(this.internal.collections[n+\"images\"]).length},d=function(t){return\"function\"==typeof e[\"process\"+t.toUpperCase()]},p=function(e){return\"object\"===t(e)&&1===e.nodeType},g=function(t,n){if(\"IMG\"===t.nodeName&&t.hasAttribute(\"src\")){var r=\"\"+t.getAttribute(\"src\");if(0===r.indexOf(\"data:image/\"))return f(unescape(r).split(\"base64,\").pop());var i=e.loadFile(r,!0);if(void 0!==i)return i}if(\"CANVAS\"===t.nodeName){if(0===t.width||0===t.height)throw new Error(\"Given canvas must have data. Canvas width: \"+t.width+\", height: \"+t.height);var a;switch(n){case\"PNG\":a=\"image/png\";break;case\"WEBP\":a=\"image/webp\";break;default:a=\"image/jpeg\"}return f(t.toDataURL(a,1).split(\"base64,\").pop())}},m=function(t){var e=this.internal.collections[n+\"images\"];if(e)for(var r in e)if(t===e[r].alias)return e[r]},v=function(t,e,n){return t||e||(t=-96,e=-96),t<0&&(t=-1*n.width*72/t/this.internal.scaleFactor),e<0&&(e=-1*n.height*72/e/this.internal.scaleFactor),0===t&&(t=e*n.width/n.height),0===e&&(e=t*n.height/n.width),[t,e]},b=function(t,e,n,r,i,a){var o=v.call(this,n,r,i),s=this.internal.getCoordinateString,u=this.internal.getVerticalCoordinateString,c=l.call(this);if(n=o[0],r=o[1],c[i.index]=i,a){a*=Math.PI/180;var h=Math.cos(a),f=Math.sin(a),d=function(t){return t.toFixed(4)},p=[d(h),d(f),d(-1*f),d(h),0,0,\"cm\"]}this.internal.write(\"q\"),a?(this.internal.write([1,\"0\",\"0\",1,s(t),u(e+r),\"cm\"].join(\" \")),this.internal.write(p.join(\" \")),this.internal.write([s(n),\"0\",\"0\",s(r),\"0\",\"0\",\"cm\"].join(\" \"))):this.internal.write([s(n),\"0\",\"0\",s(r),s(t),u(e+r),\"cm\"].join(\" \")),this.isAdvancedAPI()&&this.internal.write([1,0,0,-1,0,0,\"cm\"].join(\" \")),this.internal.write(\"/I\"+i.index+\" Do\"),this.internal.write(\"Q\")},y=e.color_spaces={DEVICE_RGB:\"DeviceRGB\",DEVICE_GRAY:\"DeviceGray\",DEVICE_CMYK:\"DeviceCMYK\",CAL_GREY:\"CalGray\",CAL_RGB:\"CalRGB\",LAB:\"Lab\",ICC_BASED:\"ICCBased\",INDEXED:\"Indexed\",PATTERN:\"Pattern\",SEPARATION:\"Separation\",DEVICE_N:\"DeviceN\"};e.decode={DCT_DECODE:\"DCTDecode\",FLATE_DECODE:\"FlateDecode\",LZW_DECODE:\"LZWDecode\",JPX_DECODE:\"JPXDecode\",JBIG2_DECODE:\"JBIG2Decode\",ASCII85_DECODE:\"ASCII85Decode\",ASCII_HEX_DECODE:\"ASCIIHexDecode\",RUN_LENGTH_DECODE:\"RunLengthDecode\",CCITT_FAX_DECODE:\"CCITTFaxDecode\"};var w=e.image_compression={NONE:\"NONE\",FAST:\"FAST\",MEDIUM:\"MEDIUM\",SLOW:\"SLOW\"},N=e.__addimage__.sHashCode=function(t){var e,n,r=0;if(\"string\"==typeof t)for(n=t.length,e=0;e<n;e++)r=(r<<5)-r+t.charCodeAt(e),r|=0;else if(A(t))for(n=t.byteLength/2,e=0;e<n;e++)r=(r<<5)-r+t[e],r|=0;return r},L=e.__addimage__.validateStringAsBase64=function(t){(t=t||\"\").toString().trim();var e=!0;return 0===t.length&&(e=!1),t.length%4!=0&&(e=!1),!1===/^[A-Za-z0-9+/]+$/.test(t.substr(0,t.length-2))&&(e=!1),!1===/^[A-Za-z0-9/][A-Za-z0-9+/]|[A-Za-z0-9+/]=|==$/.test(t.substr(-2))&&(e=!1),e},x=e.__addimage__.extractImageFromDataUrl=function(t){if(null==t)return null;if(!(t=t.trim()).startsWith(\"data:\"))return null;var e=t.indexOf(\",\");return e<0?null:t.substring(0,e).trim().endsWith(\"base64\")?t.substring(e+1):null};e.__addimage__.isArrayBuffer=function(t){return t instanceof ArrayBuffer};var A=e.__addimage__.isArrayBufferView=function(t){return t instanceof Int8Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray||t instanceof Int16Array||t instanceof Uint16Array||t instanceof Int32Array||t instanceof Uint32Array||t instanceof Float32Array||t instanceof Float64Array},S=e.__addimage__.binaryStringToUint8Array=function(t){for(var e=t.length,n=new Uint8Array(e),r=0;r<e;r++)n[r]=t.charCodeAt(r);return n},_=e.__addimage__.arrayBufferToBinaryString=function(t){for(var e=\"\",n=A(t)?t:new Uint8Array(t),r=0;r<n.length;r+=8192)e+=String.fromCharCode.apply(null,n.subarray(r,r+8192));return e};e.addImage=function(){var e,n,i,a,o,s,u,l,h;if(\"number\"==typeof arguments[1]?(n=r,i=arguments[1],a=arguments[2],o=arguments[3],s=arguments[4],u=arguments[5],l=arguments[6],h=arguments[7]):(n=arguments[1],i=arguments[2],a=arguments[3],o=arguments[4],s=arguments[5],u=arguments[6],l=arguments[7],h=arguments[8]),\"object\"===t(e=arguments[0])&&!p(e)&&\"imageData\"in e){var f=e;e=f.imageData,n=f.format||n||r,i=f.x||i||0,a=f.y||a||0,o=f.w||f.width||o,s=f.h||f.height||s,u=f.alias||u,l=f.compression||l,h=f.rotation||f.angle||h}var d=this.internal.getFilters();if(void 0===l&&-1!==d.indexOf(\"FlateEncode\")&&(l=\"SLOW\"),isNaN(i)||isNaN(a))throw new Error(\"Invalid coordinates passed to jsPDF.addImage\");c.call(this);var g=P.call(this,e,n,u,l);return b.call(this,i,a,o,s,g,h),this};var P=function(t,n,i,o){var s,u,c;if(\"string\"==typeof t&&a(t)===r){t=unescape(t);var l=k(t,!1);(\"\"!==l||void 0!==(l=e.loadFile(t,!0)))&&(t=l)}if(p(t)&&(t=g(t,n)),n=a(t,n),!d(n))throw new Error(\"addImage does not support files of type '\"+n+\"', please ensure that a plugin for '\"+n+\"' support is added.\");if((null==(c=i)||0===c.length)&&(i=function(t){return\"string\"==typeof t||A(t)?N(t):A(t.data)?N(t.data):null}(t)),(s=m.call(this,i))||(t instanceof Uint8Array||\"RGBA\"===n||(u=t,t=S(t)),s=this[\"process\"+n.toUpperCase()](t,h.call(this),i,function(t){return t&&\"string\"==typeof t&&(t=t.toUpperCase()),t in e.image_compression?t:w.NONE}(o),u)),!s)throw new Error(\"An unknown error occurred whilst processing the image.\");return s},k=e.__addimage__.convertBase64ToBinaryString=function(t,e){e=\"boolean\"!=typeof e||e;var n,r=\"\";if(\"string\"==typeof t){var i;n=null!==(i=x(t))&&void 0!==i?i:t;try{r=f(n)}catch(a){if(e)throw L(n)?new Error(\"atob-Error in jsPDF.convertBase64ToBinaryString \"+a.message):new Error(\"Supplied Data is not a valid base64-String jsPDF.convertBase64ToBinaryString \")}}return r};e.getImageProperties=function(t){var n,i,o=\"\";if(p(t)&&(t=g(t)),\"string\"==typeof t&&a(t)===r&&(\"\"===(o=k(t,!1))&&(o=e.loadFile(t)||\"\"),t=o),i=a(t),!d(i))throw new Error(\"addImage does not support files of type '\"+i+\"', please ensure that a plugin for '\"+i+\"' support is added.\");if(t instanceof Uint8Array||(t=S(t)),!(n=this[\"process\"+i.toUpperCase()](t)))throw new Error(\"An unknown error occurred whilst processing the image\");return n.fileType=i,n}}(E.API),\n/**\n * @license\n * Copyright (c) 2014 Steven Spungin (TwelveTone LLC)  steven@twelvetone.tv\n *\n * Licensed under the MIT License.\n * http://opensource.org/licenses/mit-license\n */\nfunction(t){var e=function(t){if(void 0!==t&&\"\"!=t)return!0};E.API.events.push([\"addPage\",function(t){this.internal.getPageInfo(t.pageNumber).pageContext.annotations=[]}]),t.events.push([\"putPage\",function(t){for(var n,r,i,a=this.internal.getCoordinateString,o=this.internal.getVerticalCoordinateString,s=this.internal.getPageInfoByObjId(t.objId),u=t.pageContext.annotations,c=!1,l=0;l<u.length&&!c;l++)switch((n=u[l]).type){case\"link\":(e(n.options.url)||e(n.options.pageNumber))&&(c=!0);break;case\"reference\":case\"text\":case\"freetext\":c=!0}if(0!=c){this.internal.write(\"/Annots [\");for(var h=0;h<u.length;h++){n=u[h];var f=this.internal.pdfEscape,d=this.internal.getEncryptor(t.objId);switch(n.type){case\"reference\":this.internal.write(\" \"+n.object.objId+\" 0 R \");break;case\"text\":var p=this.internal.newAdditionalObject(),g=this.internal.newAdditionalObject(),m=this.internal.getEncryptor(p.objId),v=n.title||\"Note\";i=\"<</Type /Annot /Subtype /Text \"+(r=\"/Rect [\"+a(n.bounds.x)+\" \"+o(n.bounds.y+n.bounds.h)+\" \"+a(n.bounds.x+n.bounds.w)+\" \"+o(n.bounds.y)+\"] \")+\"/Contents (\"+f(m(n.contents))+\")\",i+=\" /Popup \"+g.objId+\" 0 R\",i+=\" /P \"+s.objId+\" 0 R\",i+=\" /T (\"+f(m(v))+\") >>\",p.content=i;var b=p.objId+\" 0 R\";i=\"<</Type /Annot /Subtype /Popup \"+(r=\"/Rect [\"+a(n.bounds.x+30)+\" \"+o(n.bounds.y+n.bounds.h)+\" \"+a(n.bounds.x+n.bounds.w+30)+\" \"+o(n.bounds.y)+\"] \")+\" /Parent \"+b,n.open&&(i+=\" /Open true\"),i+=\" >>\",g.content=i,this.internal.write(p.objId,\"0 R\",g.objId,\"0 R\");break;case\"freetext\":r=\"/Rect [\"+a(n.bounds.x)+\" \"+o(n.bounds.y)+\" \"+a(n.bounds.x+n.bounds.w)+\" \"+o(n.bounds.y+n.bounds.h)+\"] \";var y=n.color||\"#000000\";i=\"<</Type /Annot /Subtype /FreeText \"+r+\"/Contents (\"+f(d(n.contents))+\")\",i+=\" /DS(font: Helvetica,sans-serif 12.0pt; text-align:left; color:#\"+y+\")\",i+=\" /Border [0 0 0]\",i+=\" >>\",this.internal.write(i);break;case\"link\":if(n.options.name){var w=this.annotations._nameMap[n.options.name];n.options.pageNumber=w.page,n.options.top=w.y}else n.options.top||(n.options.top=0);if(r=\"/Rect [\"+n.finalBounds.x+\" \"+n.finalBounds.y+\" \"+n.finalBounds.w+\" \"+n.finalBounds.h+\"] \",i=\"\",n.options.url)i=\"<</Type /Annot /Subtype /Link \"+r+\"/Border [0 0 0] /A <</S /URI /URI (\"+f(d(n.options.url))+\") >>\";else if(n.options.pageNumber)switch(i=\"<</Type /Annot /Subtype /Link \"+r+\"/Border [0 0 0] /Dest [\"+this.internal.getPageInfo(n.options.pageNumber).objId+\" 0 R\",n.options.magFactor=n.options.magFactor||\"XYZ\",n.options.magFactor){case\"Fit\":i+=\" /Fit]\";break;case\"FitH\":i+=\" /FitH \"+n.options.top+\"]\";break;case\"FitV\":n.options.left=n.options.left||0,i+=\" /FitV \"+n.options.left+\"]\";break;default:var N=o(n.options.top);n.options.left=n.options.left||0,void 0===n.options.zoom&&(n.options.zoom=0),i+=\" /XYZ \"+n.options.left+\" \"+N+\" \"+n.options.zoom+\"]\"}\"\"!=i&&(i+=\" >>\",this.internal.write(i))}}this.internal.write(\"]\")}}]),t.createAnnotation=function(t){var e=this.internal.getCurrentPageInfo();switch(t.type){case\"link\":this.link(t.bounds.x,t.bounds.y,t.bounds.w,t.bounds.h,t);break;case\"text\":case\"freetext\":e.pageContext.annotations.push(t)}},t.link=function(t,e,n,r,i){var a=this.internal.getCurrentPageInfo(),o=this.internal.getCoordinateString,s=this.internal.getVerticalCoordinateString;a.pageContext.annotations.push({finalBounds:{x:o(t),y:s(e),w:o(t+n),h:s(e+r)},options:i,type:\"link\"})},t.textWithLink=function(t,e,n,r){var i,a,o=this.getTextWidth(t),s=this.internal.getLineHeight()/this.internal.scaleFactor;if(void 0!==r.maxWidth){a=r.maxWidth;var u=this.splitTextToSize(t,a).length;i=Math.ceil(s*u)}else a=o,i=s;return this.text(t,e,n,r),n+=.2*s,\"center\"===r.align&&(e-=o/2),\"right\"===r.align&&(e-=o),this.link(e,n-s,a,i,r),o},t.getTextWidth=function(t){var e=this.internal.getFontSize();return this.getStringUnitWidth(t)*e/this.internal.scaleFactor}}(E.API),\n/**\n * @license\n * Copyright (c) 2017 Aras Abbasi\n *\n * Licensed under the MIT License.\n * http://opensource.org/licenses/mit-license\n */\nfunction(t){var e={1569:[65152],1570:[65153,65154],1571:[65155,65156],1572:[65157,65158],1573:[65159,65160],1574:[65161,65162,65163,65164],1575:[65165,65166],1576:[65167,65168,65169,65170],1577:[65171,65172],1578:[65173,65174,65175,65176],1579:[65177,65178,65179,65180],1580:[65181,65182,65183,65184],1581:[65185,65186,65187,65188],1582:[65189,65190,65191,65192],1583:[65193,65194],1584:[65195,65196],1585:[65197,65198],1586:[65199,65200],1587:[65201,65202,65203,65204],1588:[65205,65206,65207,65208],1589:[65209,65210,65211,65212],1590:[65213,65214,65215,65216],1591:[65217,65218,65219,65220],1592:[65221,65222,65223,65224],1593:[65225,65226,65227,65228],1594:[65229,65230,65231,65232],1601:[65233,65234,65235,65236],1602:[65237,65238,65239,65240],1603:[65241,65242,65243,65244],1604:[65245,65246,65247,65248],1605:[65249,65250,65251,65252],1606:[65253,65254,65255,65256],1607:[65257,65258,65259,65260],1608:[65261,65262],1609:[65263,65264,64488,64489],1610:[65265,65266,65267,65268],1649:[64336,64337],1655:[64477],1657:[64358,64359,64360,64361],1658:[64350,64351,64352,64353],1659:[64338,64339,64340,64341],1662:[64342,64343,64344,64345],1663:[64354,64355,64356,64357],1664:[64346,64347,64348,64349],1667:[64374,64375,64376,64377],1668:[64370,64371,64372,64373],1670:[64378,64379,64380,64381],1671:[64382,64383,64384,64385],1672:[64392,64393],1676:[64388,64389],1677:[64386,64387],1678:[64390,64391],1681:[64396,64397],1688:[64394,64395],1700:[64362,64363,64364,64365],1702:[64366,64367,64368,64369],1705:[64398,64399,64400,64401],1709:[64467,64468,64469,64470],1711:[64402,64403,64404,64405],1713:[64410,64411,64412,64413],1715:[64406,64407,64408,64409],1722:[64414,64415],1723:[64416,64417,64418,64419],1726:[64426,64427,64428,64429],1728:[64420,64421],1729:[64422,64423,64424,64425],1733:[64480,64481],1734:[64473,64474],1735:[64471,64472],1736:[64475,64476],1737:[64482,64483],1739:[64478,64479],1740:[64508,64509,64510,64511],1744:[64484,64485,64486,64487],1746:[64430,64431],1747:[64432,64433]},n={65247:{65154:65269,65156:65271,65160:65273,65166:65275},65248:{65154:65270,65156:65272,65160:65274,65166:65276},65165:{65247:{65248:{65258:65010}}},1617:{1612:64606,1613:64607,1614:64608,1615:64609,1616:64610}},r={1612:64606,1613:64607,1614:64608,1615:64609,1616:64610},i=[1570,1571,1573,1575];t.__arabicParser__={};var a=t.__arabicParser__.isInArabicSubstitutionA=function(t){return void 0!==e[t.charCodeAt(0)]},o=t.__arabicParser__.isArabicLetter=function(t){return\"string\"==typeof t&&/^[\\u0600-\\u06FF\\u0750-\\u077F\\u08A0-\\u08FF\\uFB50-\\uFDFF\\uFE70-\\uFEFF]+$/.test(t)},s=t.__arabicParser__.isArabicEndLetter=function(t){return o(t)&&a(t)&&e[t.charCodeAt(0)].length<=2},u=t.__arabicParser__.isArabicAlfLetter=function(t){return o(t)&&i.indexOf(t.charCodeAt(0))>=0};t.__arabicParser__.arabicLetterHasIsolatedForm=function(t){return o(t)&&a(t)&&e[t.charCodeAt(0)].length>=1};var c=t.__arabicParser__.arabicLetterHasFinalForm=function(t){return o(t)&&a(t)&&e[t.charCodeAt(0)].length>=2};t.__arabicParser__.arabicLetterHasInitialForm=function(t){return o(t)&&a(t)&&e[t.charCodeAt(0)].length>=3};var l=t.__arabicParser__.arabicLetterHasMedialForm=function(t){return o(t)&&a(t)&&4==e[t.charCodeAt(0)].length},h=t.__arabicParser__.resolveLigatures=function(t){var e=0,r=n,i=\"\",a=0;for(e=0;e<t.length;e+=1)void 0!==r[t.charCodeAt(e)]?(a++,\"number\"==typeof(r=r[t.charCodeAt(e)])&&(i+=String.fromCharCode(r),r=n,a=0),e===t.length-1&&(r=n,i+=t.charAt(e-(a-1)),e-=a-1,a=0)):(r=n,i+=t.charAt(e-a),e-=a,a=0);return i};t.__arabicParser__.isArabicDiacritic=function(t){return void 0!==t&&void 0!==r[t.charCodeAt(0)]};var f=t.__arabicParser__.getCorrectForm=function(t,e,n){return o(t)?!1===a(t)?-1:!c(t)||!o(e)&&!o(n)||!o(n)&&s(e)||s(t)&&!o(e)||s(t)&&u(e)||s(t)&&s(e)?0:l(t)&&o(e)&&!s(e)&&o(n)&&c(n)?3:s(t)||!o(n)?1:2:-1},d=function(t){var n=0,r=0,i=0,a=\"\",s=\"\",u=\"\",c=(t=t||\"\").split(\"\\\\s+\"),l=[];for(n=0;n<c.length;n+=1){for(l.push(\"\"),r=0;r<c[n].length;r+=1)a=c[n][r],s=c[n][r-1],u=c[n][r+1],o(a)?(i=f(a,s,u),l[n]+=-1!==i?String.fromCharCode(e[a.charCodeAt(0)][i]):a):l[n]+=a;l[n]=h(l[n])}return l.join(\" \")},p=t.__arabicParser__.processArabic=t.processArabic=function(){var t,e=\"string\"==typeof arguments[0]?arguments[0]:arguments[0].text,n=[];if(Array.isArray(e)){var r=0;for(n=[],r=0;r<e.length;r+=1)Array.isArray(e[r])?n.push([d(e[r][0]),e[r][1],e[r][2]]):n.push([d(e[r])]);t=n}else t=d(e);return\"string\"==typeof arguments[0]?t:(arguments[0].text=t,arguments[0])};t.events.push([\"preProcessText\",p])}(E.API),E.API.autoPrint=function(t){var e;return(t=t||{}).variant=t.variant||\"non-conform\",\"javascript\"===t.variant?this.addJS(\"print({});\"):(this.internal.events.subscribe(\"postPutResources\",function(){e=this.internal.newObject(),this.internal.out(\"<<\"),this.internal.out(\"/S /Named\"),this.internal.out(\"/Type /Action\"),this.internal.out(\"/N /Print\"),this.internal.out(\">>\"),this.internal.out(\"endobj\")}),this.internal.events.subscribe(\"putCatalog\",function(){this.internal.out(\"/OpenAction \"+e+\" 0 R\")})),this},\n/**\n * @license\n * Copyright (c) 2014 Steven Spungin (TwelveTone LLC)  steven@twelvetone.tv\n *\n * Licensed under the MIT License.\n * http://opensource.org/licenses/mit-license\n */\nfunction(t){var e=function(){var t=void 0;Object.defineProperty(this,\"pdf\",{get:function(){return t},set:function(e){t=e}});var e=150;Object.defineProperty(this,\"width\",{get:function(){return e},set:function(t){e=isNaN(t)||!1===Number.isInteger(t)||t<0?150:t,this.getContext(\"2d\").pageWrapXEnabled&&(this.getContext(\"2d\").pageWrapX=e+1)}});var n=300;Object.defineProperty(this,\"height\",{get:function(){return n},set:function(t){n=isNaN(t)||!1===Number.isInteger(t)||t<0?300:t,this.getContext(\"2d\").pageWrapYEnabled&&(this.getContext(\"2d\").pageWrapY=n+1)}});var r=[];Object.defineProperty(this,\"childNodes\",{get:function(){return r},set:function(t){r=t}});var i={};Object.defineProperty(this,\"style\",{get:function(){return i},set:function(t){i=t}}),Object.defineProperty(this,\"parentNode\",{})};e.prototype.getContext=function(t,e){var n;if(\"2d\"!==(t=t||\"2d\"))return null;for(n in e)this.pdf.context2d.hasOwnProperty(n)&&(this.pdf.context2d[n]=e[n]);return this.pdf.context2d._canvas=this,this.pdf.context2d},e.prototype.toDataURL=function(){throw new Error(\"toDataURL is not implemented.\")},t.events.push([\"initialized\",function(){this.canvas=new e,this.canvas.pdf=this}])}(E.API),function(e){var n={left:0,top:0,bottom:0,right:0},r=!1,i=function(){void 0===this.internal.__cell__&&(this.internal.__cell__={},this.internal.__cell__.padding=3,this.internal.__cell__.headerFunction=void 0,this.internal.__cell__.margins=Object.assign({},n),this.internal.__cell__.margins.width=this.getPageWidth(),a.call(this))},a=function(){this.internal.__cell__.lastCell=new o,this.internal.__cell__.pages=1},o=function(){var t=arguments[0];Object.defineProperty(this,\"x\",{enumerable:!0,get:function(){return t},set:function(e){t=e}});var e=arguments[1];Object.defineProperty(this,\"y\",{enumerable:!0,get:function(){return e},set:function(t){e=t}});var n=arguments[2];Object.defineProperty(this,\"width\",{enumerable:!0,get:function(){return n},set:function(t){n=t}});var r=arguments[3];Object.defineProperty(this,\"height\",{enumerable:!0,get:function(){return r},set:function(t){r=t}});var i=arguments[4];Object.defineProperty(this,\"text\",{enumerable:!0,get:function(){return i},set:function(t){i=t}});var a=arguments[5];Object.defineProperty(this,\"lineNumber\",{enumerable:!0,get:function(){return a},set:function(t){a=t}});var o=arguments[6];return Object.defineProperty(this,\"align\",{enumerable:!0,get:function(){return o},set:function(t){o=t}}),this};o.prototype.clone=function(){return new o(this.x,this.y,this.width,this.height,this.text,this.lineNumber,this.align)},o.prototype.toArray=function(){return[this.x,this.y,this.width,this.height,this.text,this.lineNumber,this.align]},e.setHeaderFunction=function(t){return i.call(this),this.internal.__cell__.headerFunction=\"function\"==typeof t?t:void 0,this},e.getTextDimensions=function(t,e){i.call(this);var n=(e=e||{}).fontSize||this.getFontSize(),r=e.font||this.getFont(),a=e.scaleFactor||this.internal.scaleFactor,o=0,s=0,u=0,c=this;if(!Array.isArray(t)&&\"string\"!=typeof t){if(\"number\"!=typeof t)throw new Error(\"getTextDimensions expects text-parameter to be of type String or type Number or an Array of Strings.\");t=String(t)}var l=e.maxWidth;l>0?\"string\"==typeof t?t=this.splitTextToSize(t,l):\"[object Array]\"===Object.prototype.toString.call(t)&&(t=t.reduce(function(t,e){return t.concat(c.splitTextToSize(e,l))},[])):t=Array.isArray(t)?t:[t];for(var h=0;h<t.length;h++)o<(u=this.getStringUnitWidth(t[h],{font:r})*n)&&(o=u);return 0!==o&&(s=t.length),{w:o/=a,h:Math.max((s*n*this.getLineHeightFactor()-n*(this.getLineHeightFactor()-1))/a,0)}},e.cellAddPage=function(){i.call(this),this.addPage();var t=this.internal.__cell__.margins||n;return this.internal.__cell__.lastCell=new o(t.left,t.top,void 0,void 0),this.internal.__cell__.pages+=1,this};var s=e.cell=function(){var t;t=arguments[0]instanceof o?arguments[0]:new o(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4],arguments[5]),i.call(this);var e=this.internal.__cell__.lastCell,a=this.internal.__cell__.padding,s=this.internal.__cell__.margins||n,u=this.internal.__cell__.tableHeaderRow,c=this.internal.__cell__.printHeaders;return void 0!==e.lineNumber&&(e.lineNumber===t.lineNumber?(t.x=(e.x||0)+(e.width||0),t.y=e.y||0):e.y+e.height+t.height+s.bottom>this.getPageHeight()?(this.cellAddPage(),t.y=s.top,c&&u&&(this.printHeaderRow(t.lineNumber,!0),t.y+=u[0].height)):t.y=e.y+e.height||t.y),void 0!==t.text[0]&&(this.rect(t.x,t.y,t.width,t.height,!0===r?\"FD\":void 0),\"right\"===t.align?this.text(t.text,t.x+t.width-a,t.y+a,{align:\"right\",baseline:\"top\"}):\"center\"===t.align?this.text(t.text,t.x+t.width/2,t.y+a,{align:\"center\",baseline:\"top\",maxWidth:t.width-a-a}):this.text(t.text,t.x+a,t.y+a,{align:\"left\",baseline:\"top\",maxWidth:t.width-a-a})),this.internal.__cell__.lastCell=t,this};e.table=function(e,r,c,l,h){if(i.call(this),!c)throw new Error(\"No data for PDF table.\");var f,d,p,g,m=[],v=[],b=[],y={},w={},N=[],L=[],x=(h=h||{}).autoSize||!1,A=!1!==h.printHeaders,S=h.css&&void 0!==h.css[\"font-size\"]?16*h.css[\"font-size\"]:h.fontSize||12,_=h.margins||Object.assign({width:this.getPageWidth()},n),P=\"number\"==typeof h.padding?h.padding:3,k=h.headerBackgroundColor||\"#c8c8c8\",F=h.headerTextColor||\"#000\";if(a.call(this),this.internal.__cell__.printHeaders=A,this.internal.__cell__.margins=_,this.internal.__cell__.table_font_size=S,this.internal.__cell__.padding=P,this.internal.__cell__.headerBackgroundColor=k,this.internal.__cell__.headerTextColor=F,this.setFontSize(S),null==l)v=m=Object.keys(c[0]),b=m.map(function(){return\"left\"});else if(Array.isArray(l)&&\"object\"===t(l[0]))for(m=l.map(function(t){return t.name}),v=l.map(function(t){return t.prompt||t.name||\"\"}),b=l.map(function(t){return t.align||\"left\"}),f=0;f<l.length;f+=1)w[l[f].name]=.7499990551181103*l[f].width;else Array.isArray(l)&&\"string\"==typeof l[0]&&(v=m=l,b=m.map(function(){return\"left\"}));if(x||Array.isArray(l)&&\"string\"==typeof l[0])for(f=0;f<m.length;f+=1){for(y[g=m[f]]=c.map(function(t){return t[g]}),this.setFont(void 0,\"bold\"),N.push(this.getTextDimensions(v[f],{fontSize:this.internal.__cell__.table_font_size,scaleFactor:this.internal.scaleFactor}).w),d=y[g],this.setFont(void 0,\"normal\"),p=0;p<d.length;p+=1)N.push(this.getTextDimensions(d[p],{fontSize:this.internal.__cell__.table_font_size,scaleFactor:this.internal.scaleFactor}).w);w[g]=Math.max.apply(null,N)+P+P,N=[]}if(A){var I={};for(f=0;f<m.length;f+=1)I[m[f]]={},I[m[f]].text=v[f],I[m[f]].align=b[f];var j=u.call(this,I,w);L=m.map(function(t){return new o(e,r,w[t],j,I[t].text,void 0,I[t].align)}),this.setTableHeaderRow(L),this.printHeaderRow(1,!1)}var C=l.reduce(function(t,e){return t[e.name]=e.align,t},{});for(f=0;f<c.length;f+=1){\"rowStart\"in h&&h.rowStart instanceof Function&&h.rowStart({row:f,data:c[f]},this);var O=u.call(this,c[f],w);for(p=0;p<m.length;p+=1){var B=c[f][m[p]];\"cellStart\"in h&&h.cellStart instanceof Function&&h.cellStart({row:f,col:p,data:B},this),s.call(this,new o(e,r,w[m[p]],O,B,f+2,C[m[p]]))}}return this.internal.__cell__.table_x=e,this.internal.__cell__.table_y=r,this};var u=function(t,e){var n=this.internal.__cell__.padding,r=this.internal.__cell__.table_font_size,i=this.internal.scaleFactor;return Object.keys(t).map(function(r){var i=t[r];return this.splitTextToSize(i.hasOwnProperty(\"text\")?i.text:i,e[r]-n-n)},this).map(function(t){return this.getLineHeightFactor()*t.length*r/i+n+n},this).reduce(function(t,e){return Math.max(t,e)},0)};e.setTableHeaderRow=function(t){i.call(this),this.internal.__cell__.tableHeaderRow=t},e.printHeaderRow=function(t,e){if(i.call(this),!this.internal.__cell__.tableHeaderRow)throw new Error(\"Property tableHeaderRow does not exist.\");var n;if(r=!0,\"function\"==typeof this.internal.__cell__.headerFunction){var a=this.internal.__cell__.headerFunction(this,this.internal.__cell__.pages);this.internal.__cell__.lastCell=new o(a[0],a[1],a[2],a[3],void 0,-1)}this.setFont(void 0,\"bold\");for(var u=[],c=0;c<this.internal.__cell__.tableHeaderRow.length;c+=1){n=this.internal.__cell__.tableHeaderRow[c].clone(),e&&(n.y=this.internal.__cell__.margins.top||0,u.push(n)),n.lineNumber=t;var l=this.getTextColor();this.setTextColor(this.internal.__cell__.headerTextColor),this.setFillColor(this.internal.__cell__.headerBackgroundColor),s.call(this,n),this.setTextColor(l)}u.length>0&&this.setTableHeaderRow(u),this.setFont(void 0,\"normal\"),r=!1}}(E.API);var Pt={italic:[\"italic\",\"oblique\",\"normal\"],oblique:[\"oblique\",\"italic\",\"normal\"],normal:[\"normal\",\"oblique\",\"italic\"]},kt=[\"ultra-condensed\",\"extra-condensed\",\"condensed\",\"semi-condensed\",\"normal\",\"semi-expanded\",\"expanded\",\"extra-expanded\",\"ultra-expanded\"],Ft=_t(kt),It=[100,200,300,400,500,600,700,800,900],jt=_t(It);function Ct(t){var e=t.family.replace(/\"|'/g,\"\").toLowerCase(),n=function(t){return Pt[t=t||\"normal\"]?t:\"normal\"}(t.style),r=function(t){return t?\"number\"==typeof t?t>=100&&t<=900&&t%100==0?t:400:/^\\d00$/.test(t)?parseInt(t):\"bold\"===t?700:400:400}(t.weight),i=function(t){return\"number\"==typeof Ft[t=t||\"normal\"]?t:\"normal\"}(t.stretch);return{family:e,style:n,weight:r,stretch:i,src:t.src||[],ref:t.ref||{name:e,style:[i,n,r].join(\" \")}}}function Ot(t,e,n,r){var i;for(i=n;i>=0&&i<e.length;i+=r)if(t[e[i]])return t[e[i]];for(i=n;i>=0&&i<e.length;i-=r)if(t[e[i]])return t[e[i]]}var Bt={\"sans-serif\":\"helvetica\",fixed:\"courier\",monospace:\"courier\",terminal:\"courier\",cursive:\"times\",fantasy:\"times\",serif:\"times\"},Mt={caption:\"times\",icon:\"times\",menu:\"times\",\"message-box\":\"times\",\"small-caption\":\"times\",\"status-bar\":\"times\"};function qt(t){return[t.stretch,t.style,t.weight,t.family].join(\" \")}function Et(t){return t.trimLeft()}function Rt(t,e){for(var n=0;n<t.length;){if(t.charAt(n)===e)return[t.substring(0,n),t.substring(n+1)];n+=1}return null}function Dt(t){var e=t.match(/^(-[a-z_]|[a-z_])[a-z0-9_-]*/i);return null===e?null:[e[0],t.substring(e[0].length)]}var Tt,zt,Ut,Ht,Wt,Vt,Gt,Yt,Jt=[\"times\"];function Xt(t,n,r,i){var a=4,o=$t;switch(i){case E.API.image_compression.FAST:a=1,o=Zt;break;case E.API.image_compression.MEDIUM:a=6,o=Qt;break;case E.API.image_compression.SLOW:a=9,o=te}t=function(t,e,n,r){for(var i,a=t.length/e,o=new Uint8Array(t.length+a),s=[Kt,Zt,$t,Qt,te],u=0;u<a;u+=1){var c=u*e,l=t.subarray(c,c+e);if(r)o.set(r(l,n,i),c+u);else{for(var h=s.length,f=[],d=0;d<h;d+=1)f[d]=s[d](l,n,i);var p=ne(f.concat());o.set(f[p],c+u)}i=l}return o}(t,n,r,o);var s=e(t,{level:a});return E.API.__addimage__.arrayBufferToBinaryString(s)}function Kt(t){var e=Array.apply([],t);return e.unshift(0),e}function Zt(t,e){var n=t.length,r=[];r[0]=1;for(var i=0;i<n;i+=1){var a=t[i-e]||0;r[i+1]=t[i]-a+256&255}return r}function $t(t,e,n){var r=t.length,i=[];i[0]=2;for(var a=0;a<r;a+=1){var o=n&&n[a]||0;i[a+1]=t[a]-o+256&255}return i}function Qt(t,e,n){var r=t.length,i=[];i[0]=3;for(var a=0;a<r;a+=1){var o=t[a-e]||0,s=n&&n[a]||0;i[a+1]=t[a]+256-(o+s>>>1)&255}return i}function te(t,e,n){var r=t.length,i=[];i[0]=4;for(var a=0;a<r;a+=1){var o=ee(t[a-e]||0,n&&n[a]||0,n&&n[a-e]||0);i[a+1]=t[a]-o+256&255}return i}function ee(t,e,n){if(t===e&&e===n)return t;var r=Math.abs(e-n),i=Math.abs(t-n),a=Math.abs(t+e-n-n);return r<=i&&r<=a?t:i<=a?e:n}function ne(t){var e=t.map(function(t){return t.reduce(function(t,e){return t+Math.abs(e)},0)});return e.indexOf(Math.min.apply(null,e))}function re(t,e,n){var r=e*n,i=Math.floor(r/8),a=16-(r-8*i+n),o=(1<<n)-1;return ae(t,i)>>a&o}function ie(t,e,n,r){var i=n*r,a=Math.floor(i/8),o=16-(i-8*a+r),s=(1<<r)-1,u=(e&s)<<o;!function(t,e,n){if(e+1<t.byteLength)t.setUint16(e,n,!1);else{var r=n>>8&255;t.setUint8(e,r)}}\n/**\n * @license\n * (c) Dean McNamee <dean@gmail.com>, 2013.\n *\n * https://github.com/deanm/omggif\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n *\n * omggif is a JavaScript implementation of a GIF 89a encoder and decoder,\n * including animation and compression.  It does not rely on any specific\n * underlying system, so should run in the browser, Node, or Plask.\n */(t,a,ae(t,a)&~(s<<o)&65535|u)}function ae(t,e){return e+1<t.byteLength?t.getUint16(e,!1):t.getUint8(e)<<8}function oe(t){var e=0;if(71!==t[e++]||73!==t[e++]||70!==t[e++]||56!==t[e++]||56!=(t[e++]+1&253)||97!==t[e++])throw new Error(\"Invalid GIF 87a/89a header.\");var n=t[e++]|t[e++]<<8,r=t[e++]|t[e++]<<8,i=t[e++],a=i>>7,o=1<<1+(7&i);t[e++],t[e++];var s=null,u=null;a&&(s=e,u=o,e+=3*o);var c=!0,l=[],h=0,f=null,d=0,p=null;for(this.width=n,this.height=r;c&&e<t.length;)switch(t[e++]){case 33:switch(t[e++]){case 255:if(11!==t[e]||78==t[e+1]&&69==t[e+2]&&84==t[e+3]&&83==t[e+4]&&67==t[e+5]&&65==t[e+6]&&80==t[e+7]&&69==t[e+8]&&50==t[e+9]&&46==t[e+10]&&48==t[e+11]&&3==t[e+12]&&1==t[e+13]&&0==t[e+16])e+=14,p=t[e++]|t[e++]<<8,e++;else for(e+=12;;){if(!((P=t[e++])>=0))throw Error(\"Invalid block size\");if(0===P)break;e+=P}break;case 249:if(4!==t[e++]||0!==t[e+4])throw new Error(\"Invalid graphics extension block.\");var g=t[e++];h=t[e++]|t[e++]<<8,f=t[e++],1&g||(f=null),d=g>>2&7,e++;break;case 254:for(;;){if(!((P=t[e++])>=0))throw Error(\"Invalid block size\");if(0===P)break;e+=P}break;default:throw new Error(\"Unknown graphic control label: 0x\"+t[e-1].toString(16))}break;case 44:var m=t[e++]|t[e++]<<8,v=t[e++]|t[e++]<<8,b=t[e++]|t[e++]<<8,y=t[e++]|t[e++]<<8,w=t[e++],N=w>>6&1,L=1<<1+(7&w),x=s,A=u,S=!1;w>>7&&(S=!0,x=e,A=L,e+=3*L);var _=e;for(e++;;){var P;if(!((P=t[e++])>=0))throw Error(\"Invalid block size\");if(0===P)break;e+=P}l.push({x:m,y:v,width:b,height:y,has_local_palette:S,palette_offset:x,palette_size:A,data_offset:_,data_length:e-_,transparent_index:f,interlaced:!!N,delay:h,disposal:d});break;case 59:c=!1;break;default:throw new Error(\"Unknown gif block: 0x\"+t[e-1].toString(16))}this.numFrames=function(){return l.length},this.loopCount=function(){return p},this.frameInfo=function(t){if(t<0||t>=l.length)throw new Error(\"Frame index out of range.\");return l[t]},this.decodeAndBlitFrameBGRA=function(e,r){var i=this.frameInfo(e),a=i.width*i.height,o=new Uint8Array(a);se(t,i.data_offset,o,a);var s=i.palette_offset,u=i.transparent_index;null===u&&(u=256);var c=i.width,l=n-c,h=c,f=4*(i.y*n+i.x),d=4*((i.y+i.height)*n+i.x),p=f,g=4*l;!0===i.interlaced&&(g+=4*n*7);for(var m=8,v=0,b=o.length;v<b;++v){var y=o[v];if(0===h&&(h=c,(p+=g)>=d&&(g=4*l+4*n*(m-1),p=f+(c+l)*(m<<1),m>>=1)),y===u)p+=4;else{var w=t[s+3*y],N=t[s+3*y+1],L=t[s+3*y+2];r[p++]=L,r[p++]=N,r[p++]=w,r[p++]=255}--h}},this.decodeAndBlitFrameRGBA=function(e,r){var i=this.frameInfo(e),a=i.width*i.height,o=new Uint8Array(a);se(t,i.data_offset,o,a);var s=i.palette_offset,u=i.transparent_index;null===u&&(u=256);var c=i.width,l=n-c,h=c,f=4*(i.y*n+i.x),d=4*((i.y+i.height)*n+i.x),p=f,g=4*l;!0===i.interlaced&&(g+=4*n*7);for(var m=8,v=0,b=o.length;v<b;++v){var y=o[v];if(0===h&&(h=c,(p+=g)>=d&&(g=4*l+4*n*(m-1),p=f+(c+l)*(m<<1),m>>=1)),y===u)p+=4;else{var w=t[s+3*y],N=t[s+3*y+1],L=t[s+3*y+2];r[p++]=w,r[p++]=N,r[p++]=L,r[p++]=255}--h}}}function se(t,e,n,r){for(var i=t[e++],a=1<<i,s=a+1,u=s+1,c=i+1,l=(1<<c)-1,h=0,f=0,d=0,p=t[e++],g=new Int32Array(4096),m=null;;){for(;h<16&&0!==p;)f|=t[e++]<<h,h+=8,1===p?p=t[e++]:--p;if(h<c)break;var v=f&l;if(f>>=c,h-=c,v!==a){if(v===s)break;for(var b=v<u?v:m,y=0,w=b;w>a;)w=g[w]>>8,++y;var N=w;if(d+y+(b!==v?1:0)>r)return void o.log(\"Warning, gif stream longer than expected.\");n[d++]=N;var L=d+=y;for(b!==v&&(n[d++]=N),w=b;y--;)w=g[w],n[--L]=255&w,w>>=8;null!==m&&u<4096&&(g[u++]=m<<8|N,u>=l+1&&c<12&&(++c,l=l<<1|1)),m=v}else u=s+1,l=(1<<(c=i+1))-1,m=null}return d!==r&&o.log(\"Warning, gif stream shorter than expected.\"),n}\n/**\n * @license\n  Copyright (c) 2008, Adobe Systems Incorporated\n  All rights reserved.\n\n  Redistribution and use in source and binary forms, with or without \n  modification, are permitted provided that the following conditions are\n  met:\n\n  * Redistributions of source code must retain the above copyright notice, \n    this list of conditions and the following disclaimer.\n  \n  * Redistributions in binary form must reproduce the above copyright\n    notice, this list of conditions and the following disclaimer in the \n    documentation and/or other materials provided with the distribution.\n  \n  * Neither the name of Adobe Systems Incorporated nor the names of its \n    contributors may be used to endorse or promote products derived from \n    this software without specific prior written permission.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n  IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n  THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR \n  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/function ue(t){var e,n,r,i,a,o=Math.floor,s=new Array(64),u=new Array(64),c=new Array(64),l=new Array(64),h=new Array(65535),f=new Array(65535),d=new Array(64),p=new Array(64),g=[],m=0,v=7,b=new Array(64),y=new Array(64),w=new Array(64),N=new Array(256),L=new Array(2048),x=[0,1,5,6,14,15,27,28,2,4,7,13,16,26,29,42,3,8,12,17,25,30,41,43,9,11,18,24,31,40,44,53,10,19,23,32,39,45,52,54,20,22,33,38,46,51,55,60,21,34,37,47,50,56,59,61,35,36,48,49,57,58,62,63],A=[0,0,1,5,1,1,1,1,1,1,0,0,0,0,0,0,0],S=[0,1,2,3,4,5,6,7,8,9,10,11],_=[0,0,2,1,3,3,2,4,3,5,5,4,4,0,0,1,125],P=[1,2,3,0,4,17,5,18,33,49,65,6,19,81,97,7,34,113,20,50,129,145,161,8,35,66,177,193,21,82,209,240,36,51,98,114,130,9,10,22,23,24,25,26,37,38,39,40,41,42,52,53,54,55,56,57,58,67,68,69,70,71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,170,178,179,180,181,182,183,184,185,186,194,195,196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,225,226,227,228,229,230,231,232,233,234,241,242,243,244,245,246,247,248,249,250],k=[0,0,3,1,1,1,1,1,1,1,1,1,0,0,0,0,0],F=[0,1,2,3,4,5,6,7,8,9,10,11],I=[0,0,2,1,2,4,4,3,4,7,5,4,4,0,1,2,119],j=[0,1,2,3,17,4,5,33,49,6,18,65,81,7,97,113,19,34,50,129,8,20,66,145,161,177,193,9,35,51,82,240,21,98,114,209,10,22,36,52,225,37,241,23,24,25,26,38,39,40,41,42,53,54,55,56,57,58,67,68,69,70,71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,130,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,170,178,179,180,181,182,183,184,185,186,194,195,196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,226,227,228,229,230,231,232,233,234,242,243,244,245,246,247,248,249,250];function C(t,e){for(var n=0,r=0,i=new Array,a=1;a<=16;a++){for(var o=1;o<=t[a];o++)i[e[r]]=[],i[e[r]][0]=n,i[e[r]][1]=a,r++,n++;n*=2}return i}function O(t){for(var e=t[0],n=t[1]-1;n>=0;)e&1<<n&&(m|=1<<v),n--,--v<0&&(255==m?(B(255),B(0)):B(m),v=7,m=0)}function B(t){g.push(t)}function M(t){B(t>>8&255),B(255&t)}function q(t,e,n,r,i){for(var a,o=i[0],s=i[240],u=function(t,e){var n,r,i,a,o,s,u,c,l,h,f=0;for(l=0;l<8;++l){n=t[f],r=t[f+1],i=t[f+2],a=t[f+3],o=t[f+4],s=t[f+5],u=t[f+6];var p=n+(c=t[f+7]),g=n-c,m=r+u,v=r-u,b=i+s,y=i-s,w=a+o,N=a-o,L=p+w,x=p-w,A=m+b,S=m-b;t[f]=L+A,t[f+4]=L-A;var _=.707106781*(S+x);t[f+2]=x+_,t[f+6]=x-_;var P=.382683433*((L=N+y)-(S=v+g)),k=.5411961*L+P,F=1.306562965*S+P,I=.707106781*(A=y+v),j=g+I,C=g-I;t[f+5]=C+k,t[f+3]=C-k,t[f+1]=j+F,t[f+7]=j-F,f+=8}for(f=0,l=0;l<8;++l){n=t[f],r=t[f+8],i=t[f+16],a=t[f+24],o=t[f+32],s=t[f+40],u=t[f+48];var O=n+(c=t[f+56]),B=n-c,M=r+u,q=r-u,E=i+s,R=i-s,D=a+o,T=a-o,z=O+D,U=O-D,H=M+E,W=M-E;t[f]=z+H,t[f+32]=z-H;var V=.707106781*(W+U);t[f+16]=U+V,t[f+48]=U-V;var G=.382683433*((z=T+R)-(W=q+B)),Y=.5411961*z+G,J=1.306562965*W+G,X=.707106781*(H=R+q),K=B+X,Z=B-X;t[f+40]=Z+Y,t[f+24]=Z-Y,t[f+8]=K+J,t[f+56]=K-J,f++}for(l=0;l<64;++l)h=t[l]*e[l],d[l]=h>0?h+.5|0:h-.5|0;return d}(t,e),c=0;c<64;++c)p[x[c]]=u[c];var l=p[0]-n;n=p[0],0==l?O(r[0]):(O(r[f[a=32767+l]]),O(h[a]));for(var g=63;g>0&&0==p[g];)g--;if(0==g)return O(o),n;for(var m,v=1;v<=g;){for(var b=v;0==p[v]&&v<=g;)++v;var y=v-b;if(y>=16){m=y>>4;for(var w=1;w<=m;++w)O(s);y&=15}a=32767+p[v],O(i[(y<<4)+f[a]]),O(h[a]),v++}return 63!=g&&O(o),n}function E(t){t=Math.min(Math.max(t,1),100),a!=t&&(function(t){for(var e=[16,11,10,16,24,40,51,61,12,12,14,19,26,58,60,55,14,13,16,24,40,57,69,56,14,17,22,29,51,87,80,62,18,22,37,56,68,109,103,77,24,35,55,64,81,104,113,92,49,64,78,87,103,121,120,101,72,92,95,98,112,100,103,99],n=0;n<64;n++){var r=o((e[n]*t+50)/100);r=Math.min(Math.max(r,1),255),s[x[n]]=r}for(var i=[17,18,24,47,99,99,99,99,18,21,26,66,99,99,99,99,24,26,56,99,99,99,99,99,47,66,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99],a=0;a<64;a++){var h=o((i[a]*t+50)/100);h=Math.min(Math.max(h,1),255),u[x[a]]=h}for(var f=[1,1.387039845,1.306562965,1.175875602,1,.785694958,.5411961,.275899379],d=0,p=0;p<8;p++)for(var g=0;g<8;g++)c[d]=1/(s[x[d]]*f[p]*f[g]*8),l[d]=1/(u[x[d]]*f[p]*f[g]*8),d++}(t<50?Math.floor(5e3/t):Math.floor(200-2*t)),a=t)}this.encode=function(t,a){a&&E(a),g=new Array,m=0,v=7,M(65496),M(65504),M(16),B(74),B(70),B(73),B(70),B(0),B(1),B(1),B(0),M(1),M(1),B(0),B(0),function(){M(65499),M(132),B(0);for(var t=0;t<64;t++)B(s[t]);B(1);for(var e=0;e<64;e++)B(u[e])}(),function(t,e){M(65472),M(17),B(8),M(e),M(t),B(3),B(1),B(17),B(0),B(2),B(17),B(1),B(3),B(17),B(1)}(t.width,t.height),function(){M(65476),M(418),B(0);for(var t=0;t<16;t++)B(A[t+1]);for(var e=0;e<=11;e++)B(S[e]);B(16);for(var n=0;n<16;n++)B(_[n+1]);for(var r=0;r<=161;r++)B(P[r]);B(1);for(var i=0;i<16;i++)B(k[i+1]);for(var a=0;a<=11;a++)B(F[a]);B(17);for(var o=0;o<16;o++)B(I[o+1]);for(var s=0;s<=161;s++)B(j[s])}(),M(65498),M(12),B(3),B(1),B(0),B(2),B(17),B(3),B(17),B(0),B(63),B(0);var o=0,h=0,f=0;m=0,v=7,this.encode.displayName=\"_encode_\";for(var d,p,N,x,C,R,D,T,z,U=t.data,H=t.width,W=t.height,V=4*H,G=0;G<W;){for(d=0;d<V;){for(C=V*G+d,D=-1,T=0,z=0;z<64;z++)R=C+(T=z>>3)*V+(D=4*(7&z)),G+T>=W&&(R-=V*(G+1+T-W)),d+D>=V&&(R-=d+D-V+4),p=U[R++],N=U[R++],x=U[R++],b[z]=(L[p]+L[N+256|0]+L[x+512|0]>>16)-128,y[z]=(L[p+768|0]+L[N+1024|0]+L[x+1280|0]>>16)-128,w[z]=(L[p+1280|0]+L[N+1536|0]+L[x+1792|0]>>16)-128;o=q(b,c,o,e,r),h=q(y,l,h,n,i),f=q(w,l,f,n,i),d+=32}G+=8}if(v>=0){var Y=[];Y[1]=v+1,Y[0]=(1<<v+1)-1,O(Y)}return M(65497),new Uint8Array(g)},t=t||50,function(){for(var t=String.fromCharCode,e=0;e<256;e++)N[e]=t(e)}(),e=C(A,S),n=C(k,F),r=C(_,P),i=C(I,j),function(){for(var t=1,e=2,n=1;n<=15;n++){for(var r=t;r<e;r++)f[32767+r]=n,h[32767+r]=[],h[32767+r][1]=n,h[32767+r][0]=r;for(var i=-(e-1);i<=-t;i++)f[32767+i]=n,h[32767+i]=[],h[32767+i][1]=n,h[32767+i][0]=e-1+i;t<<=1,e<<=1}}(),function(){for(var t=0;t<256;t++)L[t]=19595*t,L[t+256|0]=38470*t,L[t+512|0]=7471*t+32768,L[t+768|0]=-11059*t,L[t+1024|0]=-21709*t,L[t+1280|0]=32768*t+8421375,L[t+1536|0]=-27439*t,L[t+1792|0]=-5329*t}(),E(t)}\n/**\n * @license\n * Copyright (c) 2017 Aras Abbasi\n *\n * Licensed under the MIT License.\n * http://opensource.org/licenses/mit-license\n */function ce(t,e){if(this.pos=0,this.buffer=t,this.datav=new DataView(t.buffer),this.is_with_alpha=!!e,this.bottom_up=!0,this.flag=String.fromCharCode(this.buffer[0])+String.fromCharCode(this.buffer[1]),this.pos+=2,-1===[\"BM\",\"BA\",\"CI\",\"CP\",\"IC\",\"PT\"].indexOf(this.flag))throw new Error(\"Invalid BMP File\");this.parseHeader(),this.parseBGR()}function le(t){function e(t){if(!t)throw Error(\"assert :P\")}function n(t,e,n){for(var r=0;4>r;r++)if(t[e+r]!=n.charCodeAt(r))return!0;return!1}function r(t,e,n,r,i){for(var a=0;a<i;a++)t[e+a]=n[r+a]}function i(t,e,n,r){for(var i=0;i<r;i++)t[e+i]=n}function a(t){return new Int32Array(t)}function o(t,e){for(var n=[],r=0;r<t;r++)n.push(new e);return n}function s(t,e){var n=[];return function t(n,r,i){for(var a=i[r],o=0;o<a&&(n.push(i.length>r+1?[]:new e),!(i.length<r+1));o++)t(n[o],r+1,i)}(n,0,t),n}var u=function(){var t=this;function u(t,e){for(var n=1<<e-1>>>0;t&n;)n>>>=1;return n?(t&n-1)+n:t}function c(t,n,r,i,a){e(!(i%r));do{t[n+(i-=r)]=a}while(0<i)}function l(t,n,r,i,o){if(e(2328>=o),512>=o)var s=a(512);else if(null==(s=a(o)))return 0;return function(t,n,r,i,o,s){var l,f,d=n,p=1<<r,g=a(16),m=a(16);for(e(0!=o),e(null!=i),e(null!=t),e(0<r),f=0;f<o;++f){if(15<i[f])return 0;++g[i[f]]}if(g[0]==o)return 0;for(m[1]=0,l=1;15>l;++l){if(g[l]>1<<l)return 0;m[l+1]=m[l]+g[l]}for(f=0;f<o;++f)l=i[f],0<i[f]&&(s[m[l]++]=f);if(1==m[15])return(i=new h).g=0,i.value=s[0],c(t,d,1,p,i),p;var v,b=-1,y=p-1,w=0,N=1,L=1,x=1<<r;for(f=0,l=1,o=2;l<=r;++l,o<<=1){if(N+=L<<=1,0>(L-=g[l]))return 0;for(;0<g[l];--g[l])(i=new h).g=l,i.value=s[f++],c(t,d+w,o,x,i),w=u(w,l)}for(l=r+1,o=2;15>=l;++l,o<<=1){if(N+=L<<=1,0>(L-=g[l]))return 0;for(;0<g[l];--g[l]){if(i=new h,(w&y)!=b){for(d+=x,v=1<<(b=l)-r;15>b&&!(0>=(v-=g[b]));)++b,v<<=1;p+=x=1<<(v=b-r),t[n+(b=w&y)].g=v+r,t[n+b].value=d-n-b}i.g=l-r,i.value=s[f++],c(t,d+(w>>r),o,x,i),w=u(w,l)}}return N!=2*m[15]-1?0:p}(t,n,r,i,o,s)}function h(){this.value=this.g=0}function f(){this.value=this.g=0}function d(){this.G=o(5,h),this.H=a(5),this.jc=this.Qb=this.qb=this.nd=0,this.pd=o(Rn,f)}function p(t,n,r,i){e(null!=t),e(null!=n),e(2147483648>i),t.Ca=254,t.I=0,t.b=-8,t.Ka=0,t.oa=n,t.pa=r,t.Jd=n,t.Yc=r+i,t.Zc=4<=i?r+i-4+1:r,_(t)}function g(t,e){for(var n=0;0<e--;)n|=k(t,128)<<e;return n}function m(t,e){var n=g(t,e);return P(t)?-n:n}function v(t,n,r,i){var a,o=0;for(e(null!=t),e(null!=n),e(4294967288>i),t.Sb=i,t.Ra=0,t.u=0,t.h=0,4<i&&(i=4),a=0;a<i;++a)o+=n[r+a]<<8*a;t.Ra=o,t.bb=i,t.oa=n,t.pa=r}function b(t){for(;8<=t.u&&t.bb<t.Sb;)t.Ra>>>=8,t.Ra+=t.oa[t.pa+t.bb]<<zn-8>>>0,++t.bb,t.u-=8;x(t)&&(t.h=1,t.u=0)}function y(t,n){if(e(0<=n),!t.h&&n<=Tn){var r=L(t)&Dn[n];return t.u+=n,b(t),r}return t.h=1,t.u=0}function w(){this.b=this.Ca=this.I=0,this.oa=[],this.pa=0,this.Jd=[],this.Yc=0,this.Zc=[],this.Ka=0}function N(){this.Ra=0,this.oa=[],this.h=this.u=this.bb=this.Sb=this.pa=0}function L(t){return t.Ra>>>(t.u&zn-1)>>>0}function x(t){return e(t.bb<=t.Sb),t.h||t.bb==t.Sb&&t.u>zn}function A(t,e){t.u=e,t.h=x(t)}function S(t){t.u>=Un&&(e(t.u>=Un),b(t))}function _(t){e(null!=t&&null!=t.oa),t.pa<t.Zc?(t.I=(t.oa[t.pa++]|t.I<<8)>>>0,t.b+=8):(e(null!=t&&null!=t.oa),t.pa<t.Yc?(t.b+=8,t.I=t.oa[t.pa++]|t.I<<8):t.Ka?t.b=0:(t.I<<=8,t.b+=8,t.Ka=1))}function P(t){return g(t,1)}function k(t,e){var n=t.Ca;0>t.b&&_(t);var r=t.b,i=n*e>>>8,a=(t.I>>>r>i)+0;for(a?(n-=i,t.I-=i+1<<r>>>0):n=i+1,r=n,i=0;256<=r;)i+=8,r>>=8;return r=7^i+Hn[r],t.b-=r,t.Ca=(n<<r)-1,a}function F(t,e,n){t[e+0]=n>>24&255,t[e+1]=n>>16&255,t[e+2]=n>>8&255,t[e+3]=255&n}function I(t,e){return t[e+0]|t[e+1]<<8}function j(t,e){return I(t,e)|t[e+2]<<16}function C(t,e){return I(t,e)|I(t,e+2)<<16}function O(t,n){var r=1<<n;return e(null!=t),e(0<n),t.X=a(r),null==t.X?0:(t.Mb=32-n,t.Xa=n,1)}function B(t,n){e(null!=t),e(null!=n),e(t.Xa==n.Xa),r(n.X,0,t.X,0,1<<n.Xa)}function M(){this.X=[],this.Xa=this.Mb=0}function q(t,n,r,i){e(null!=r),e(null!=i);var a=r[0],o=i[0];return 0==a&&(a=(t*o+n/2)/n),0==o&&(o=(n*a+t/2)/t),0>=a||0>=o?0:(r[0]=a,i[0]=o,1)}function E(t,e){return t+(1<<e)-1>>>e}function R(t,e){return((4278255360&t)+(4278255360&e)>>>0&4278255360)+((16711935&t)+(16711935&e)>>>0&16711935)>>>0}function D(e,n){t[n]=function(n,r,i,a,o,s,u){var c;for(c=0;c<o;++c){var l=t[e](s[u+c-1],i,a+c);s[u+c]=R(n[r+c],l)}}}function T(){this.ud=this.hd=this.jd=0}function z(t,e){return((4278124286&(t^e))>>>1)+(t&e)>>>0}function U(t){return 0<=t&&256>t?t:0>t?0:255<t?255:void 0}function H(t,e){return U(t+(t-e+.5>>1))}function W(t,e,n){return Math.abs(e-n)-Math.abs(t-n)}function V(t,e,n,r,i,a,o){for(r=a[o-1],n=0;n<i;++n)a[o+n]=r=R(t[e+n],r)}function G(t,e,n,r,i){var a;for(a=0;a<n;++a){var o=t[e+a],s=o>>8&255,u=16711935&(u=(u=16711935&o)+((s<<16)+s));r[i+a]=(4278255360&o)+u>>>0}}function Y(t,e){e.jd=255&t,e.hd=t>>8&255,e.ud=t>>16&255}function J(t,e,n,r,i,a){var o;for(o=0;o<r;++o){var s=e[n+o],u=s>>>8,c=s,l=255&(l=(l=s>>>16)+((t.jd<<24>>24)*(u<<24>>24)>>>5));c=255&(c=(c+=(t.hd<<24>>24)*(u<<24>>24)>>>5)+((t.ud<<24>>24)*(l<<24>>24)>>>5)),i[a+o]=(4278255360&s)+(l<<16)+c}}function X(e,n,r,i,a){t[n]=function(t,e,n,r,o,s,u,c,l){for(r=u;r<c;++r)for(u=0;u<l;++u)o[s++]=a(n[i(t[e++])])},t[e]=function(e,n,o,s,u,c,l){var h=8>>e.b,f=e.Ea,d=e.K[0],p=e.w;if(8>h)for(e=(1<<e.b)-1,p=(1<<h)-1;n<o;++n){var g,m=0;for(g=0;g<f;++g)g&e||(m=i(s[u++])),c[l++]=a(d[m&p]),m>>=h}else t[\"VP8LMapColor\"+r](s,u,d,p,c,l,n,o,f)}}function K(t,e,n,r,i){for(n=e+n;e<n;){var a=t[e++];r[i++]=a>>16&255,r[i++]=a>>8&255,r[i++]=255&a}}function Z(t,e,n,r,i){for(n=e+n;e<n;){var a=t[e++];r[i++]=a>>16&255,r[i++]=a>>8&255,r[i++]=255&a,r[i++]=a>>24&255}}function $(t,e,n,r,i){for(n=e+n;e<n;){var a=(o=t[e++])>>16&240|o>>12&15,o=240&o|o>>28&15;r[i++]=a,r[i++]=o}}function Q(t,e,n,r,i){for(n=e+n;e<n;){var a=(o=t[e++])>>16&248|o>>13&7,o=o>>5&224|o>>3&31;r[i++]=a,r[i++]=o}}function tt(t,e,n,r,i){for(n=e+n;e<n;){var a=t[e++];r[i++]=255&a,r[i++]=a>>8&255,r[i++]=a>>16&255}}function et(t,e,n,i,a,o){if(0==o)for(n=e+n;e<n;)F(i,((o=t[e++])[0]>>24|o[1]>>8&65280|o[2]<<8&16711680|o[3]<<24)>>>0),a+=32;else r(i,a,t,e,n)}function nt(e,n){t[n][0]=t[e+\"0\"],t[n][1]=t[e+\"1\"],t[n][2]=t[e+\"2\"],t[n][3]=t[e+\"3\"],t[n][4]=t[e+\"4\"],t[n][5]=t[e+\"5\"],t[n][6]=t[e+\"6\"],t[n][7]=t[e+\"7\"],t[n][8]=t[e+\"8\"],t[n][9]=t[e+\"9\"],t[n][10]=t[e+\"10\"],t[n][11]=t[e+\"11\"],t[n][12]=t[e+\"12\"],t[n][13]=t[e+\"13\"],t[n][14]=t[e+\"0\"],t[n][15]=t[e+\"0\"]}function rt(t){return t==Ur||t==Hr||t==Wr||t==Vr}function it(){this.eb=[],this.size=this.A=this.fb=0}function at(){this.y=[],this.f=[],this.ea=[],this.F=[],this.Tc=this.Ed=this.Cd=this.Fd=this.lb=this.Db=this.Ab=this.fa=this.J=this.W=this.N=this.O=0}function ot(){this.Rd=this.height=this.width=this.S=0,this.f={},this.f.RGBA=new it,this.f.kb=new at,this.sd=null}function st(){this.width=[0],this.height=[0],this.Pd=[0],this.Qd=[0],this.format=[0]}function ut(){this.Id=this.fd=this.Md=this.hb=this.ib=this.da=this.bd=this.cd=this.j=this.v=this.Da=this.Sd=this.ob=0}function ct(t){return alert(\"todo:WebPSamplerProcessPlane\"),t.T}function lt(t,e){var n=t.T,i=e.ba.f.RGBA,a=i.eb,o=i.fb+t.ka*i.A,s=mi[e.ba.S],u=t.y,c=t.O,l=t.f,h=t.N,f=t.ea,d=t.W,p=e.cc,g=e.dc,m=e.Mc,v=e.Nc,b=t.ka,y=t.ka+t.T,w=t.U,N=w+1>>1;for(0==b?s(u,c,null,null,l,h,f,d,l,h,f,d,a,o,null,null,w):(s(e.ec,e.fc,u,c,p,g,m,v,l,h,f,d,a,o-i.A,a,o,w),++n);b+2<y;b+=2)p=l,g=h,m=f,v=d,h+=t.Rc,d+=t.Rc,o+=2*i.A,s(u,(c+=2*t.fa)-t.fa,u,c,p,g,m,v,l,h,f,d,a,o-i.A,a,o,w);return c+=t.fa,t.j+y<t.o?(r(e.ec,e.fc,u,c,w),r(e.cc,e.dc,l,h,N),r(e.Mc,e.Nc,f,d,N),n--):1&y||s(u,c,null,null,l,h,f,d,l,h,f,d,a,o+i.A,null,null,w),n}function ht(t,n,r){var i=t.F,a=[t.J];if(null!=i){var o=t.U,s=n.ba.S,u=s==Dr||s==Wr;n=n.ba.f.RGBA;var c=[0],l=t.ka;c[0]=t.T,t.Kb&&(0==l?--c[0]:(--l,a[0]-=t.width),t.j+t.ka+t.T==t.o&&(c[0]=t.o-t.j-l));var h=n.eb;l=n.fb+l*n.A,t=Ar(i,a[0],t.width,o,c,h,l+(u?0:3),n.A),e(r==c),t&&rt(s)&&Lr(h,l,u,o,c,n.A)}return 0}function ft(t){var e=t.ma,n=e.ba.S,r=11>n,i=n==qr||n==Rr||n==Dr||n==Tr||12==n||rt(n);if(e.memory=null,e.Ib=null,e.Jb=null,e.Nd=null,!Mn(e.Oa,t,i?11:12))return 0;if(i&&rt(n)&&bn(),t.da)alert(\"todo:use_scaling\");else{if(r){if(e.Ib=ct,t.Kb){if(n=t.U+1>>1,e.memory=a(t.U+2*n),null==e.memory)return 0;e.ec=e.memory,e.fc=0,e.cc=e.ec,e.dc=e.fc+t.U,e.Mc=e.cc,e.Nc=e.dc+n,e.Ib=lt,bn()}}else alert(\"todo:EmitYUV\");i&&(e.Jb=ht,r&&mn())}if(r&&!Ii){for(t=0;256>t;++t)ji[t]=89858*(t-128)+Si>>Ai,Bi[t]=-22014*(t-128)+Si,Oi[t]=-45773*(t-128),Ci[t]=113618*(t-128)+Si>>Ai;for(t=_i;t<Pi;++t)e=76283*(t-16)+Si>>Ai,Mi[t-_i]=Vt(e,255),qi[t-_i]=Vt(e+8>>4,15);Ii=1}return 1}function dt(t){var n=t.ma,r=t.U,i=t.T;return e(!(1&t.ka)),0>=r||0>=i?0:(r=n.Ib(t,n),null!=n.Jb&&n.Jb(t,n,r),n.Dc+=r,1)}function pt(t){t.ma.memory=null}function gt(t,e,n,r){return 47!=y(t,8)?0:(e[0]=y(t,14)+1,n[0]=y(t,14)+1,r[0]=y(t,1),0!=y(t,3)?0:!t.h)}function mt(t,e){if(4>t)return t+1;var n=t-2>>1;return(2+(1&t)<<n)+y(e,n)+1}function vt(t,e){return 120<e?e-120:1<=(n=((n=Zr[e-1])>>4)*t+(8-(15&n)))?n:1;var n}function bt(t,e,n){var r=L(n),i=t[e+=255&r].g-8;return 0<i&&(A(n,n.u+8),r=L(n),e+=t[e].value,e+=r&(1<<i)-1),A(n,n.u+t[e].g),t[e].value}function yt(t,n,r){return r.g+=t.g,r.value+=t.value<<n>>>0,e(8>=r.g),t.g}function wt(t,n,r){var i=t.xc;return e((n=0==i?0:t.vc[t.md*(r>>i)+(n>>i)])<t.Wb),t.Ya[n]}function Nt(t,n,i,a){var o=t.ab,s=t.c*n,u=t.C;n=u+n;var c=i,l=a;for(a=t.Ta,i=t.Ua;0<o--;){var h=t.gc[o],f=u,d=n,p=c,g=l,m=(l=a,c=i,h.Ea);switch(e(f<d),e(d<=h.nc),h.hc){case 2:Gn(p,g,(d-f)*m,l,c);break;case 0:var v=f,b=d,y=l,w=c,N=(_=h).Ea;0==v&&(Wn(p,g,null,null,1,y,w),V(p,g+1,0,0,N-1,y,w+1),g+=N,w+=N,++v);for(var L=1<<_.b,x=L-1,A=E(N,_.b),S=_.K,_=_.w+(v>>_.b)*A;v<b;){var P=S,k=_,F=1;for(Vn(p,g,y,w-N,1,y,w);F<N;){var I=(F&~x)+L;I>N&&(I=N),(0,Zn[P[k++]>>8&15])(p,g+ +F,y,w+F-N,I-F,y,w+F),F=I}g+=N,w+=N,++v&x||(_+=A)}d!=h.nc&&r(l,c-m,l,c+(d-f-1)*m,m);break;case 1:for(m=p,b=g,N=(p=h.Ea)-(w=p&~(y=(g=1<<h.b)-1)),v=E(p,h.b),L=h.K,h=h.w+(f>>h.b)*v;f<d;){for(x=L,A=h,S=new T,_=b+w,P=b+p;b<_;)Y(x[A++],S),$n(S,m,b,g,l,c),b+=g,c+=g;b<P&&(Y(x[A++],S),$n(S,m,b,N,l,c),b+=N,c+=N),++f&y||(h+=v)}break;case 3:if(p==l&&g==c&&0<h.b){for(b=l,p=m=c+(d-f)*m-(w=(d-f)*E(h.Ea,h.b)),g=l,y=c,v=[],w=(N=w)-1;0<=w;--w)v[w]=g[y+w];for(w=N-1;0<=w;--w)b[p+w]=v[w];Yn(h,f,d,l,m,l,c)}else Yn(h,f,d,p,g,l,c)}c=a,l=i}l!=i&&r(a,i,c,l,s)}function Lt(t,n){var r=t.V,i=t.Ba+t.c*t.C,a=n-t.C;if(e(n<=t.l.o),e(16>=a),0<a){var o=t.l,s=t.Ta,u=t.Ua,c=o.width;if(Nt(t,a,r,i),a=u=[u],e((r=t.C)<(i=n)),e(o.v<o.va),i>o.o&&(i=o.o),r<o.j){var l=o.j-r;r=o.j,a[0]+=l*c}if(r>=i?r=0:(a[0]+=4*o.v,o.ka=r-o.j,o.U=o.va-o.v,o.T=i-r,r=1),r){if(u=u[0],11>(r=t.ca).S){var h=r.f.RGBA,f=(i=r.S,a=o.U,o=o.T,l=h.eb,h.A),d=o;for(h=h.fb+t.Ma*h.A;0<d--;){var p=s,g=u,m=a,v=l,b=h;switch(i){case Mr:Qn(p,g,m,v,b);break;case qr:tr(p,g,m,v,b);break;case Ur:tr(p,g,m,v,b),Lr(v,b,0,m,1,0);break;case Er:rr(p,g,m,v,b);break;case Rr:et(p,g,m,v,b,1);break;case Hr:et(p,g,m,v,b,1),Lr(v,b,0,m,1,0);break;case Dr:et(p,g,m,v,b,0);break;case Wr:et(p,g,m,v,b,0),Lr(v,b,1,m,1,0);break;case Tr:er(p,g,m,v,b);break;case Vr:er(p,g,m,v,b),xr(v,b,m,1,0);break;case zr:nr(p,g,m,v,b);break;default:e(0)}u+=c,h+=f}t.Ma+=o}else alert(\"todo:EmitRescaledRowsYUVA\");e(t.Ma<=r.height)}}t.C=n,e(t.C<=t.i)}function xt(t){var e;if(0<t.ua)return 0;for(e=0;e<t.Wb;++e){var n=t.Ya[e].G,r=t.Ya[e].H;if(0<n[1][r[1]+0].g||0<n[2][r[2]+0].g||0<n[3][r[3]+0].g)return 0}return 1}function At(t,n,r,i,a,o){if(0!=t.Z){var s=t.qd,u=t.rd;for(e(null!=gi[t.Z]);n<r;++n)gi[t.Z](s,u,i,a,i,a,o),s=i,u=a,a+=o;t.qd=s,t.rd=u}}function St(t,n){var r=t.l.ma,i=0==r.Z||1==r.Z?t.l.j:t.C;if(i=t.C<i?i:t.C,e(n<=t.l.o),n>i){var a=t.l.width,o=r.ca,s=r.tb+a*i,u=t.V,c=t.Ba+t.c*i,l=t.gc;e(1==t.ab),e(3==l[0].hc),Xn(l[0],i,n,u,c,o,s),At(r,i,n,o,s,a)}t.C=t.Ma=n}function _t(t,n,r,i,a,o,s){var u=t.$/i,c=t.$%i,l=t.m,h=t.s,f=r+t.$,d=f;a=r+i*a;var p=r+i*o,g=280+h.ua,m=t.Pb?u:16777216,v=0<h.ua?h.Wa:null,b=h.wc,y=f<p?wt(h,c,u):null;e(t.C<o),e(p<=a);var w=!1;t:for(;;){for(;w||f<p;){var N=0;if(u>=m){var _=f-r;e((m=t).Pb),m.wd=m.m,m.xd=_,0<m.s.ua&&B(m.s.Wa,m.s.vb),m=u+Qr}if(c&b||(y=wt(h,c,u)),e(null!=y),y.Qb&&(n[f]=y.qb,w=!0),!w)if(S(l),y.jc){N=l,_=n;var P=f,k=y.pd[L(N)&Rn-1];e(y.jc),256>k.g?(A(N,N.u+k.g),_[P]=k.value,N=0):(A(N,N.u+k.g-256),e(256<=k.value),N=k.value),0==N&&(w=!0)}else N=bt(y.G[0],y.H[0],l);if(l.h)break;if(w||256>N){if(!w)if(y.nd)n[f]=(y.qb|N<<8)>>>0;else{if(S(l),w=bt(y.G[1],y.H[1],l),S(l),_=bt(y.G[2],y.H[2],l),P=bt(y.G[3],y.H[3],l),l.h)break;n[f]=(P<<24|w<<16|N<<8|_)>>>0}if(w=!1,++f,++c>=i&&(c=0,++u,null!=s&&u<=o&&!(u%16)&&s(t,u),null!=v))for(;d<f;)N=n[d++],v.X[(506832829*N&4294967295)>>>v.Mb]=N}else if(280>N){if(N=mt(N-256,l),_=bt(y.G[4],y.H[4],l),S(l),_=vt(i,_=mt(_,l)),l.h)break;if(f-r<_||a-f<N)break t;for(P=0;P<N;++P)n[f+P]=n[f+P-_];for(f+=N,c+=N;c>=i;)c-=i,++u,null!=s&&u<=o&&!(u%16)&&s(t,u);if(e(f<=a),c&b&&(y=wt(h,c,u)),null!=v)for(;d<f;)N=n[d++],v.X[(506832829*N&4294967295)>>>v.Mb]=N}else{if(!(N<g))break t;for(w=N-280,e(null!=v);d<f;)N=n[d++],v.X[(506832829*N&4294967295)>>>v.Mb]=N;N=f,e(!(w>>>(_=v).Xa)),n[N]=_.X[w],w=!0}w||e(l.h==x(l))}if(t.Pb&&l.h&&f<a)e(t.m.h),t.a=5,t.m=t.wd,t.$=t.xd,0<t.s.ua&&B(t.s.vb,t.s.Wa);else{if(l.h)break t;null!=s&&s(t,u>o?o:u),t.a=0,t.$=f-r}return 1}return t.a=3,0}function Pt(t){e(null!=t),t.vc=null,t.yc=null,t.Ya=null;var n=t.Wa;null!=n&&(n.X=null),t.vb=null,e(null!=t)}function kt(){var e=new on;return null==e?null:(e.a=0,e.xb=pi,nt(\"Predictor\",\"VP8LPredictors\"),nt(\"Predictor\",\"VP8LPredictors_C\"),nt(\"PredictorAdd\",\"VP8LPredictorsAdd\"),nt(\"PredictorAdd\",\"VP8LPredictorsAdd_C\"),Gn=G,$n=J,Qn=K,tr=Z,er=$,nr=Q,rr=tt,t.VP8LMapColor32b=Jn,t.VP8LMapColor8b=Kn,e)}function Ft(t,n,r,s,u){var c=1,f=[t],p=[n],g=s.m,m=s.s,v=null,b=0;t:for(;;){if(r)for(;c&&y(g,1);){var w=f,N=p,x=s,_=1,P=x.m,k=x.gc[x.ab],F=y(P,2);if(x.Oc&1<<F)c=0;else{switch(x.Oc|=1<<F,k.hc=F,k.Ea=w[0],k.nc=N[0],k.K=[null],++x.ab,e(4>=x.ab),F){case 0:case 1:k.b=y(P,3)+2,_=Ft(E(k.Ea,k.b),E(k.nc,k.b),0,x,k.K),k.K=k.K[0];break;case 3:var I,j=y(P,8)+1,C=16<j?0:4<j?1:2<j?2:3;if(w[0]=E(k.Ea,C),k.b=C,I=_=Ft(j,1,0,x,k.K)){var B,M=j,q=k,D=1<<(8>>q.b),T=a(D);if(null==T)I=0;else{var z=q.K[0],U=q.w;for(T[0]=q.K[0][0],B=1;B<1*M;++B)T[B]=R(z[U+B],T[B-1]);for(;B<4*D;++B)T[B]=0;q.K[0]=null,q.K[0]=T,I=1}}_=I;break;case 2:break;default:e(0)}c=_}}if(f=f[0],p=p[0],c&&y(g,1)&&!(c=1<=(b=y(g,4))&&11>=b)){s.a=3;break t}var H;if(H=c)e:{var W,V,G,Y=s,J=f,X=p,K=b,Z=r,$=Y.m,Q=Y.s,tt=[null],et=1,nt=0,rt=$r[K];n:for(;;){if(Z&&y($,1)){var it=y($,3)+2,at=E(J,it),ot=E(X,it),st=at*ot;if(!Ft(at,ot,0,Y,tt))break n;for(tt=tt[0],Q.xc=it,W=0;W<st;++W){var ut=tt[W]>>8&65535;tt[W]=ut,ut>=et&&(et=ut+1)}}if($.h)break n;for(V=0;5>V;++V){var ct=Jr[V];!V&&0<K&&(ct+=1<<K),nt<ct&&(nt=ct)}var lt=o(et*rt,h),ht=et,ft=o(ht,d);if(null==ft)var dt=null;else e(65536>=ht),dt=ft;var pt=a(nt);if(null==dt||null==pt||null==lt){Y.a=1;break n}var gt=lt;for(W=G=0;W<et;++W){var mt=dt[W],vt=mt.G,bt=mt.H,wt=0,Nt=1,Lt=0;for(V=0;5>V;++V){ct=Jr[V],vt[V]=gt,bt[V]=G,!V&&0<K&&(ct+=1<<K);r:{var xt,At=ct,St=Y,kt=pt,It=gt,jt=G,Ct=0,Ot=St.m,Bt=y(Ot,1);if(i(kt,0,0,At),Bt){var Mt=y(Ot,1)+1,qt=y(Ot,1),Et=y(Ot,0==qt?1:8);kt[Et]=1,2==Mt&&(kt[Et=y(Ot,8)]=1);var Rt=1}else{var Dt=a(19),Tt=y(Ot,4)+4;if(19<Tt){St.a=3;var zt=0;break r}for(xt=0;xt<Tt;++xt)Dt[Kr[xt]]=y(Ot,3);var Ut=void 0,Ht=void 0,Wt=St,Vt=Dt,Gt=At,Yt=kt,Jt=0,Xt=Wt.m,Kt=8,Zt=o(128,h);i:for(;l(Zt,0,7,Vt,19);){if(y(Xt,1)){var $t=2+2*y(Xt,3);if((Ut=2+y(Xt,$t))>Gt)break i}else Ut=Gt;for(Ht=0;Ht<Gt&&Ut--;){S(Xt);var Qt=Zt[0+(127&L(Xt))];A(Xt,Xt.u+Qt.g);var te=Qt.value;if(16>te)Yt[Ht++]=te,0!=te&&(Kt=te);else{var ee=16==te,ne=te-16,re=Yr[ne],ie=y(Xt,Gr[ne])+re;if(Ht+ie>Gt)break i;for(var ae=ee?Kt:0;0<ie--;)Yt[Ht++]=ae}}Jt=1;break i}Jt||(Wt.a=3),Rt=Jt}(Rt=Rt&&!Ot.h)&&(Ct=l(It,jt,8,kt,At)),Rt&&0!=Ct?zt=Ct:(St.a=3,zt=0)}if(0==zt)break n;if(Nt&&1==Xr[V]&&(Nt=0==gt[G].g),wt+=gt[G].g,G+=zt,3>=V){var oe,se=pt[0];for(oe=1;oe<ct;++oe)pt[oe]>se&&(se=pt[oe]);Lt+=se}}if(mt.nd=Nt,mt.Qb=0,Nt&&(mt.qb=(vt[3][bt[3]+0].value<<24|vt[1][bt[1]+0].value<<16|vt[2][bt[2]+0].value)>>>0,0==wt&&256>vt[0][bt[0]+0].value&&(mt.Qb=1,mt.qb+=vt[0][bt[0]+0].value<<8)),mt.jc=!mt.Qb&&6>Lt,mt.jc){var ue,ce=mt;for(ue=0;ue<Rn;++ue){var le=ue,he=ce.pd[le],fe=ce.G[0][ce.H[0]+le];256<=fe.value?(he.g=fe.g+256,he.value=fe.value):(he.g=0,he.value=0,le>>=yt(fe,8,he),le>>=yt(ce.G[1][ce.H[1]+le],16,he),le>>=yt(ce.G[2][ce.H[2]+le],0,he),yt(ce.G[3][ce.H[3]+le],24,he))}}}Q.vc=tt,Q.Wb=et,Q.Ya=dt,Q.yc=lt,H=1;break e}H=0}if(!(c=H)){s.a=3;break t}if(0<b){if(m.ua=1<<b,!O(m.Wa,b)){s.a=1,c=0;break t}}else m.ua=0;var de=s,pe=f,ge=p,me=de.s,ve=me.xc;if(de.c=pe,de.i=ge,me.md=E(pe,ve),me.wc=0==ve?-1:(1<<ve)-1,r){s.xb=di;break t}if(null==(v=a(f*p))){s.a=1,c=0;break t}c=(c=_t(s,v,0,f,p,p,null))&&!g.h;break t}return c?(null!=u?u[0]=v:(e(null==v),e(r)),s.$=0,r||Pt(m)):Pt(m),c}function It(t,n){var r=t.c*t.i,i=r+n+16*n;return e(t.c<=n),t.V=a(i),null==t.V?(t.Ta=null,t.Ua=0,t.a=1,0):(t.Ta=t.V,t.Ua=t.Ba+r+n,1)}function jt(t,n){var r=t.C,i=n-r,a=t.V,o=t.Ba+t.c*r;for(e(n<=t.l.o);0<i;){var s=16<i?16:i,u=t.l.ma,c=t.l.width,l=c*s,h=u.ca,f=u.tb+c*r,d=t.Ta,p=t.Ua;Nt(t,s,a,o),Sr(d,p,h,f,l),At(u,r,r+s,h,f,c),i-=s,a+=s*t.c,r+=s}e(r==n),t.C=t.Ma=n}function Ct(){this.ub=this.yd=this.td=this.Rb=0}function Ot(){this.Kd=this.Ld=this.Ud=this.Td=this.i=this.c=0}function Bt(){this.Fb=this.Bb=this.Cb=0,this.Zb=a(4),this.Lb=a(4)}function Mt(){this.Yb=function(){var t=[];return function t(e,n,r){for(var i=r[n],a=0;a<i&&(e.push(r.length>n+1?[]:0),!(r.length<n+1));a++)t(e[a],n+1,r)}(t,0,[3,11]),t}()}function qt(){this.jb=a(3),this.Wc=s([4,8],Mt),this.Xc=s([4,17],Mt)}function Et(){this.Pc=this.wb=this.Tb=this.zd=0,this.vd=new a(4),this.od=new a(4)}function Rt(){this.ld=this.La=this.dd=this.tc=0}function Dt(){this.Na=this.la=0}function Tt(){this.Sc=[0,0],this.Eb=[0,0],this.Qc=[0,0],this.ia=this.lc=0}function zt(){this.ad=a(384),this.Za=0,this.Ob=a(16),this.$b=this.Ad=this.ia=this.Gc=this.Hc=this.Dd=0}function Ut(){this.uc=this.M=this.Nb=0,this.wa=Array(new Rt),this.Y=0,this.ya=Array(new zt),this.aa=0,this.l=new Gt}function Ht(){this.y=a(16),this.f=a(8),this.ea=a(8)}function Wt(){this.cb=this.a=0,this.sc=\"\",this.m=new w,this.Od=new Ct,this.Kc=new Ot,this.ed=new Et,this.Qa=new Bt,this.Ic=this.$c=this.Aa=0,this.D=new Ut,this.Xb=this.Va=this.Hb=this.zb=this.yb=this.Ub=this.za=0,this.Jc=o(8,w),this.ia=0,this.pb=o(4,Tt),this.Pa=new qt,this.Bd=this.kc=0,this.Ac=[],this.Bc=0,this.zc=[0,0,0,0],this.Gd=Array(new Ht),this.Hd=0,this.rb=Array(new Dt),this.sb=0,this.wa=Array(new Rt),this.Y=0,this.oc=[],this.pc=0,this.sa=[],this.ta=0,this.qa=[],this.ra=0,this.Ha=[],this.B=this.R=this.Ia=0,this.Ec=[],this.M=this.ja=this.Vb=this.Fc=0,this.ya=Array(new zt),this.L=this.aa=0,this.gd=s([4,2],Rt),this.ga=null,this.Fa=[],this.Cc=this.qc=this.P=0,this.Gb=[],this.Uc=0,this.mb=[],this.nb=0,this.rc=[],this.Ga=this.Vc=0}function Vt(t,e){return 0>t?0:t>e?e:t}function Gt(){this.T=this.U=this.ka=this.height=this.width=0,this.y=[],this.f=[],this.ea=[],this.Rc=this.fa=this.W=this.N=this.O=0,this.ma=\"void\",this.put=\"VP8IoPutHook\",this.ac=\"VP8IoSetupHook\",this.bc=\"VP8IoTeardownHook\",this.ha=this.Kb=0,this.data=[],this.hb=this.ib=this.da=this.o=this.j=this.va=this.v=this.Da=this.ob=this.w=0,this.F=[],this.J=0}function Yt(){var t=new Wt;return null!=t&&(t.a=0,t.sc=\"OK\",t.cb=0,t.Xb=0,ni||(ni=Zt)),t}function Jt(t,e,n){return 0==t.a&&(t.a=e,t.sc=n,t.cb=0),0}function Xt(t,e,n){return 3<=n&&157==t[e+0]&&1==t[e+1]&&42==t[e+2]}function Kt(t,n){if(null==t)return 0;if(t.a=0,t.sc=\"OK\",null==n)return Jt(t,2,\"null VP8Io passed to VP8GetHeaders()\");var r=n.data,a=n.w,o=n.ha;if(4>o)return Jt(t,7,\"Truncated header.\");var s=r[a+0]|r[a+1]<<8|r[a+2]<<16,u=t.Od;if(u.Rb=!(1&s),u.td=s>>1&7,u.yd=s>>4&1,u.ub=s>>5,3<u.td)return Jt(t,3,\"Incorrect keyframe parameters.\");if(!u.yd)return Jt(t,4,\"Frame not displayable.\");a+=3,o-=3;var c=t.Kc;if(u.Rb){if(7>o)return Jt(t,7,\"cannot parse picture header\");if(!Xt(r,a,o))return Jt(t,3,\"Bad code word\");c.c=16383&(r[a+4]<<8|r[a+3]),c.Td=r[a+4]>>6,c.i=16383&(r[a+6]<<8|r[a+5]),c.Ud=r[a+6]>>6,a+=7,o-=7,t.za=c.c+15>>4,t.Ub=c.i+15>>4,n.width=c.c,n.height=c.i,n.Da=0,n.j=0,n.v=0,n.va=n.width,n.o=n.height,n.da=0,n.ib=n.width,n.hb=n.height,n.U=n.width,n.T=n.height,i((s=t.Pa).jb,0,255,s.jb.length),e(null!=(s=t.Qa)),s.Cb=0,s.Bb=0,s.Fb=1,i(s.Zb,0,0,s.Zb.length),i(s.Lb,0,0,s.Lb)}if(u.ub>o)return Jt(t,7,\"bad partition length\");p(s=t.m,r,a,u.ub),a+=u.ub,o-=u.ub,u.Rb&&(c.Ld=P(s),c.Kd=P(s)),c=t.Qa;var l,h=t.Pa;if(e(null!=s),e(null!=c),c.Cb=P(s),c.Cb){if(c.Bb=P(s),P(s)){for(c.Fb=P(s),l=0;4>l;++l)c.Zb[l]=P(s)?m(s,7):0;for(l=0;4>l;++l)c.Lb[l]=P(s)?m(s,6):0}if(c.Bb)for(l=0;3>l;++l)h.jb[l]=P(s)?g(s,8):255}else c.Bb=0;if(s.Ka)return Jt(t,3,\"cannot parse segment header\");if((c=t.ed).zd=P(s),c.Tb=g(s,6),c.wb=g(s,3),c.Pc=P(s),c.Pc&&P(s)){for(h=0;4>h;++h)P(s)&&(c.vd[h]=m(s,6));for(h=0;4>h;++h)P(s)&&(c.od[h]=m(s,6))}if(t.L=0==c.Tb?0:c.zd?1:2,s.Ka)return Jt(t,3,\"cannot parse filter header\");var f=o;if(o=l=a,a=l+f,c=f,t.Xb=(1<<g(t.m,2))-1,f<3*(h=t.Xb))r=7;else{for(l+=3*h,c-=3*h,f=0;f<h;++f){var d=r[o+0]|r[o+1]<<8|r[o+2]<<16;d>c&&(d=c),p(t.Jc[+f],r,l,d),l+=d,c-=d,o+=3}p(t.Jc[+h],r,l,c),r=l<a?0:5}if(0!=r)return Jt(t,r,\"cannot parse partitions\");for(r=g(l=t.m,7),o=P(l)?m(l,4):0,a=P(l)?m(l,4):0,c=P(l)?m(l,4):0,h=P(l)?m(l,4):0,l=P(l)?m(l,4):0,f=t.Qa,d=0;4>d;++d){if(f.Cb){var v=f.Zb[d];f.Fb||(v+=r)}else{if(0<d){t.pb[d]=t.pb[0];continue}v=r}var b=t.pb[d];b.Sc[0]=ti[Vt(v+o,127)],b.Sc[1]=ei[Vt(v+0,127)],b.Eb[0]=2*ti[Vt(v+a,127)],b.Eb[1]=101581*ei[Vt(v+c,127)]>>16,8>b.Eb[1]&&(b.Eb[1]=8),b.Qc[0]=ti[Vt(v+h,117)],b.Qc[1]=ei[Vt(v+l,127)],b.lc=v+l}if(!u.Rb)return Jt(t,4,\"Not a key frame.\");for(P(s),u=t.Pa,r=0;4>r;++r){for(o=0;8>o;++o)for(a=0;3>a;++a)for(c=0;11>c;++c)h=k(s,ui[r][o][a][c])?g(s,8):oi[r][o][a][c],u.Wc[r][o].Yb[a][c]=h;for(o=0;17>o;++o)u.Xc[r][o]=u.Wc[r][ci[o]]}return t.kc=P(s),t.kc&&(t.Bd=g(s,8)),t.cb=1}function Zt(t,e,n,r,i,a,o){var s=e[i].Yb[n];for(n=0;16>i;++i){if(!k(t,s[n+0]))return i;for(;!k(t,s[n+1]);)if(s=e[++i].Yb[0],n=0,16==i)return 16;var u=e[i+1].Yb;if(k(t,s[n+2])){var c=t,l=0;if(k(c,(f=s)[(h=n)+3]))if(k(c,f[h+6])){for(s=0,h=2*(l=k(c,f[h+8]))+(f=k(c,f[h+9+l])),l=0,f=ri[h];f[s];++s)l+=l+k(c,f[s]);l+=3+(8<<h)}else k(c,f[h+7])?(l=7+2*k(c,165),l+=k(c,145)):l=5+k(c,159);else l=k(c,f[h+4])?3+k(c,f[h+5]):2;s=u[2]}else l=1,s=u[1];u=o+ii[i],0>(c=t).b&&_(c);var h,f=c.b,d=(h=c.Ca>>1)-(c.I>>f)>>31;--c.b,c.Ca+=d,c.Ca|=1,c.I-=(h+1&d)<<f,a[u]=((l^d)-d)*r[(0<i)+0]}return 16}function $t(t){var e=t.rb[t.sb-1];e.la=0,e.Na=0,i(t.zc,0,0,t.zc.length),t.ja=0}function Qt(t,e,n,r,i){i=t[e+n+32*r]+(i>>3),t[e+n+32*r]=-256&i?0>i?0:255:i}function te(t,e,n,r,i,a){Qt(t,e,0,n,r+i),Qt(t,e,1,n,r+a),Qt(t,e,2,n,r-a),Qt(t,e,3,n,r-i)}function ee(t){return(20091*t>>16)+t}function ne(t,e,n,r){var i,o=0,s=a(16);for(i=0;4>i;++i){var u=t[e+0]+t[e+8],c=t[e+0]-t[e+8],l=(35468*t[e+4]>>16)-ee(t[e+12]),h=ee(t[e+4])+(35468*t[e+12]>>16);s[o+0]=u+h,s[o+1]=c+l,s[o+2]=c-l,s[o+3]=u-h,o+=4,e++}for(i=o=0;4>i;++i)u=(t=s[o+0]+4)+s[o+8],c=t-s[o+8],l=(35468*s[o+4]>>16)-ee(s[o+12]),Qt(n,r,0,0,u+(h=ee(s[o+4])+(35468*s[o+12]>>16))),Qt(n,r,1,0,c+l),Qt(n,r,2,0,c-l),Qt(n,r,3,0,u-h),o++,r+=32}function re(t,e,n,r){var i=t[e+0]+4,a=35468*t[e+4]>>16,o=ee(t[e+4]),s=35468*t[e+1]>>16;te(n,r,0,i+o,t=ee(t[e+1]),s),te(n,r,1,i+a,t,s),te(n,r,2,i-a,t,s),te(n,r,3,i-o,t,s)}function ie(t,e,n,r,i){ne(t,e,n,r),i&&ne(t,e+16,n,r+4)}function ae(t,e,n,r){ar(t,e+0,n,r,1),ar(t,e+32,n,r+128,1)}function oe(t,e,n,r){var i;for(t=t[e+0]+4,i=0;4>i;++i)for(e=0;4>e;++e)Qt(n,r,e,i,t)}function se(t,e,n,r){t[e+0]&&ur(t,e+0,n,r),t[e+16]&&ur(t,e+16,n,r+4),t[e+32]&&ur(t,e+32,n,r+128),t[e+48]&&ur(t,e+48,n,r+128+4)}function ue(t,e,n,r){var i,o=a(16);for(i=0;4>i;++i){var s=t[e+0+i]+t[e+12+i],u=t[e+4+i]+t[e+8+i],c=t[e+4+i]-t[e+8+i],l=t[e+0+i]-t[e+12+i];o[0+i]=s+u,o[8+i]=s-u,o[4+i]=l+c,o[12+i]=l-c}for(i=0;4>i;++i)s=(t=o[0+4*i]+3)+o[3+4*i],u=o[1+4*i]+o[2+4*i],c=o[1+4*i]-o[2+4*i],l=t-o[3+4*i],n[r+0]=s+u>>3,n[r+16]=l+c>>3,n[r+32]=s-u>>3,n[r+48]=l-c>>3,r+=64}function ce(t,e,n){var r,i=e-32,a=Or,o=255-t[i-1];for(r=0;r<n;++r){var s,u=a,c=o+t[e-1];for(s=0;s<n;++s)t[e+s]=u[c+t[i+s]];e+=32}}function le(t,e){ce(t,e,4)}function he(t,e){ce(t,e,8)}function fe(t,e){ce(t,e,16)}function de(t,e){var n;for(n=0;16>n;++n)r(t,e+32*n,t,e-32,16)}function pe(t,e){var n;for(n=16;0<n;--n)i(t,e,t[e-1],16),e+=32}function ge(t,e,n){var r;for(r=0;16>r;++r)i(e,n+32*r,t,16)}function me(t,e){var n,r=16;for(n=0;16>n;++n)r+=t[e-1+32*n]+t[e+n-32];ge(r>>5,t,e)}function ve(t,e){var n,r=8;for(n=0;16>n;++n)r+=t[e-1+32*n];ge(r>>4,t,e)}function be(t,e){var n,r=8;for(n=0;16>n;++n)r+=t[e+n-32];ge(r>>4,t,e)}function ye(t,e){ge(128,t,e)}function we(t,e,n){return t+2*e+n+2>>2}function Ne(t,e){var n,i=e-32;for(i=new Uint8Array([we(t[i-1],t[i+0],t[i+1]),we(t[i+0],t[i+1],t[i+2]),we(t[i+1],t[i+2],t[i+3]),we(t[i+2],t[i+3],t[i+4])]),n=0;4>n;++n)r(t,e+32*n,i,0,i.length)}function Le(t,e){var n=t[e-1],r=t[e-1+32],i=t[e-1+64],a=t[e-1+96];F(t,e+0,16843009*we(t[e-1-32],n,r)),F(t,e+32,16843009*we(n,r,i)),F(t,e+64,16843009*we(r,i,a)),F(t,e+96,16843009*we(i,a,a))}function xe(t,e){var n,r=4;for(n=0;4>n;++n)r+=t[e+n-32]+t[e-1+32*n];for(r>>=3,n=0;4>n;++n)i(t,e+32*n,r,4)}function Ae(t,e){var n=t[e-1+0],r=t[e-1+32],i=t[e-1+64],a=t[e-1-32],o=t[e+0-32],s=t[e+1-32],u=t[e+2-32],c=t[e+3-32];t[e+0+96]=we(r,i,t[e-1+96]),t[e+1+96]=t[e+0+64]=we(n,r,i),t[e+2+96]=t[e+1+64]=t[e+0+32]=we(a,n,r),t[e+3+96]=t[e+2+64]=t[e+1+32]=t[e+0+0]=we(o,a,n),t[e+3+64]=t[e+2+32]=t[e+1+0]=we(s,o,a),t[e+3+32]=t[e+2+0]=we(u,s,o),t[e+3+0]=we(c,u,s)}function Se(t,e){var n=t[e+1-32],r=t[e+2-32],i=t[e+3-32],a=t[e+4-32],o=t[e+5-32],s=t[e+6-32],u=t[e+7-32];t[e+0+0]=we(t[e+0-32],n,r),t[e+1+0]=t[e+0+32]=we(n,r,i),t[e+2+0]=t[e+1+32]=t[e+0+64]=we(r,i,a),t[e+3+0]=t[e+2+32]=t[e+1+64]=t[e+0+96]=we(i,a,o),t[e+3+32]=t[e+2+64]=t[e+1+96]=we(a,o,s),t[e+3+64]=t[e+2+96]=we(o,s,u),t[e+3+96]=we(s,u,u)}function _e(t,e){var n=t[e-1+0],r=t[e-1+32],i=t[e-1+64],a=t[e-1-32],o=t[e+0-32],s=t[e+1-32],u=t[e+2-32],c=t[e+3-32];t[e+0+0]=t[e+1+64]=a+o+1>>1,t[e+1+0]=t[e+2+64]=o+s+1>>1,t[e+2+0]=t[e+3+64]=s+u+1>>1,t[e+3+0]=u+c+1>>1,t[e+0+96]=we(i,r,n),t[e+0+64]=we(r,n,a),t[e+0+32]=t[e+1+96]=we(n,a,o),t[e+1+32]=t[e+2+96]=we(a,o,s),t[e+2+32]=t[e+3+96]=we(o,s,u),t[e+3+32]=we(s,u,c)}function Pe(t,e){var n=t[e+0-32],r=t[e+1-32],i=t[e+2-32],a=t[e+3-32],o=t[e+4-32],s=t[e+5-32],u=t[e+6-32],c=t[e+7-32];t[e+0+0]=n+r+1>>1,t[e+1+0]=t[e+0+64]=r+i+1>>1,t[e+2+0]=t[e+1+64]=i+a+1>>1,t[e+3+0]=t[e+2+64]=a+o+1>>1,t[e+0+32]=we(n,r,i),t[e+1+32]=t[e+0+96]=we(r,i,a),t[e+2+32]=t[e+1+96]=we(i,a,o),t[e+3+32]=t[e+2+96]=we(a,o,s),t[e+3+64]=we(o,s,u),t[e+3+96]=we(s,u,c)}function ke(t,e){var n=t[e-1+0],r=t[e-1+32],i=t[e-1+64],a=t[e-1+96];t[e+0+0]=n+r+1>>1,t[e+2+0]=t[e+0+32]=r+i+1>>1,t[e+2+32]=t[e+0+64]=i+a+1>>1,t[e+1+0]=we(n,r,i),t[e+3+0]=t[e+1+32]=we(r,i,a),t[e+3+32]=t[e+1+64]=we(i,a,a),t[e+3+64]=t[e+2+64]=t[e+0+96]=t[e+1+96]=t[e+2+96]=t[e+3+96]=a}function Fe(t,e){var n=t[e-1+0],r=t[e-1+32],i=t[e-1+64],a=t[e-1+96],o=t[e-1-32],s=t[e+0-32],u=t[e+1-32],c=t[e+2-32];t[e+0+0]=t[e+2+32]=n+o+1>>1,t[e+0+32]=t[e+2+64]=r+n+1>>1,t[e+0+64]=t[e+2+96]=i+r+1>>1,t[e+0+96]=a+i+1>>1,t[e+3+0]=we(s,u,c),t[e+2+0]=we(o,s,u),t[e+1+0]=t[e+3+32]=we(n,o,s),t[e+1+32]=t[e+3+64]=we(r,n,o),t[e+1+64]=t[e+3+96]=we(i,r,n),t[e+1+96]=we(a,i,r)}function Ie(t,e){var n;for(n=0;8>n;++n)r(t,e+32*n,t,e-32,8)}function je(t,e){var n;for(n=0;8>n;++n)i(t,e,t[e-1],8),e+=32}function Ce(t,e,n){var r;for(r=0;8>r;++r)i(e,n+32*r,t,8)}function Oe(t,e){var n,r=8;for(n=0;8>n;++n)r+=t[e+n-32]+t[e-1+32*n];Ce(r>>4,t,e)}function Be(t,e){var n,r=4;for(n=0;8>n;++n)r+=t[e+n-32];Ce(r>>3,t,e)}function Me(t,e){var n,r=4;for(n=0;8>n;++n)r+=t[e-1+32*n];Ce(r>>3,t,e)}function qe(t,e){Ce(128,t,e)}function Ee(t,e,n){var r=t[e-n],i=t[e+0],a=3*(i-r)+jr[1020+t[e-2*n]-t[e+n]],o=Cr[112+(a+4>>3)];t[e-n]=Or[255+r+Cr[112+(a+3>>3)]],t[e+0]=Or[255+i-o]}function Re(t,e,n,r){var i=t[e+0],a=t[e+n];return Br[255+t[e-2*n]-t[e-n]]>r||Br[255+a-i]>r}function De(t,e,n,r){return 4*Br[255+t[e-n]-t[e+0]]+Br[255+t[e-2*n]-t[e+n]]<=r}function Te(t,e,n,r,i){var a=t[e-3*n],o=t[e-2*n],s=t[e-n],u=t[e+0],c=t[e+n],l=t[e+2*n],h=t[e+3*n];return 4*Br[255+s-u]+Br[255+o-c]>r?0:Br[255+t[e-4*n]-a]<=i&&Br[255+a-o]<=i&&Br[255+o-s]<=i&&Br[255+h-l]<=i&&Br[255+l-c]<=i&&Br[255+c-u]<=i}function ze(t,e,n,r){var i=2*r+1;for(r=0;16>r;++r)De(t,e+r,n,i)&&Ee(t,e+r,n)}function Ue(t,e,n,r){var i=2*r+1;for(r=0;16>r;++r)De(t,e+r*n,1,i)&&Ee(t,e+r*n,1)}function He(t,e,n,r){var i;for(i=3;0<i;--i)ze(t,e+=4*n,n,r)}function We(t,e,n,r){var i;for(i=3;0<i;--i)Ue(t,e+=4,n,r)}function Ve(t,e,n,r,i,a,o,s){for(a=2*a+1;0<i--;){if(Te(t,e,n,a,o))if(Re(t,e,n,s))Ee(t,e,n);else{var u=t,c=e,l=n,h=u[c-2*l],f=u[c-l],d=u[c+0],p=u[c+l],g=u[c+2*l],m=27*(b=jr[1020+3*(d-f)+jr[1020+h-p]])+63>>7,v=18*b+63>>7,b=9*b+63>>7;u[c-3*l]=Or[255+u[c-3*l]+b],u[c-2*l]=Or[255+h+v],u[c-l]=Or[255+f+m],u[c+0]=Or[255+d-m],u[c+l]=Or[255+p-v],u[c+2*l]=Or[255+g-b]}e+=r}}function Ge(t,e,n,r,i,a,o,s){for(a=2*a+1;0<i--;){if(Te(t,e,n,a,o))if(Re(t,e,n,s))Ee(t,e,n);else{var u=t,c=e,l=n,h=u[c-l],f=u[c+0],d=u[c+l],p=Cr[112+(4+(g=3*(f-h))>>3)],g=Cr[112+(g+3>>3)],m=p+1>>1;u[c-2*l]=Or[255+u[c-2*l]+m],u[c-l]=Or[255+h+g],u[c+0]=Or[255+f-p],u[c+l]=Or[255+d-m]}e+=r}}function Ye(t,e,n,r,i,a){Ve(t,e,n,1,16,r,i,a)}function Je(t,e,n,r,i,a){Ve(t,e,1,n,16,r,i,a)}function Xe(t,e,n,r,i,a){var o;for(o=3;0<o;--o)Ge(t,e+=4*n,n,1,16,r,i,a)}function Ke(t,e,n,r,i,a){var o;for(o=3;0<o;--o)Ge(t,e+=4,1,n,16,r,i,a)}function Ze(t,e,n,r,i,a,o,s){Ve(t,e,i,1,8,a,o,s),Ve(n,r,i,1,8,a,o,s)}function $e(t,e,n,r,i,a,o,s){Ve(t,e,1,i,8,a,o,s),Ve(n,r,1,i,8,a,o,s)}function Qe(t,e,n,r,i,a,o,s){Ge(t,e+4*i,i,1,8,a,o,s),Ge(n,r+4*i,i,1,8,a,o,s)}function tn(t,e,n,r,i,a,o,s){Ge(t,e+4,1,i,8,a,o,s),Ge(n,r+4,1,i,8,a,o,s)}function en(){this.ba=new ot,this.ec=[],this.cc=[],this.Mc=[],this.Dc=this.Nc=this.dc=this.fc=0,this.Oa=new ut,this.memory=0,this.Ib=\"OutputFunc\",this.Jb=\"OutputAlphaFunc\",this.Nd=\"OutputRowFunc\"}function nn(){this.data=[],this.offset=this.kd=this.ha=this.w=0,this.na=[],this.xa=this.gb=this.Ja=this.Sa=this.P=0}function rn(){this.nc=this.Ea=this.b=this.hc=0,this.K=[],this.w=0}function an(){this.ua=0,this.Wa=new M,this.vb=new M,this.md=this.xc=this.wc=0,this.vc=[],this.Wb=0,this.Ya=new d,this.yc=new h}function on(){this.xb=this.a=0,this.l=new Gt,this.ca=new ot,this.V=[],this.Ba=0,this.Ta=[],this.Ua=0,this.m=new N,this.Pb=0,this.wd=new N,this.Ma=this.$=this.C=this.i=this.c=this.xd=0,this.s=new an,this.ab=0,this.gc=o(4,rn),this.Oc=0}function sn(){this.Lc=this.Z=this.$a=this.i=this.c=0,this.l=new Gt,this.ic=0,this.ca=[],this.tb=0,this.qd=null,this.rd=0}function un(t,e,n,r,i,a,o){for(t=null==t?0:t[e+0],e=0;e<o;++e)i[a+e]=t+n[r+e]&255,t=i[a+e]}function cn(t,e,n,r,i,a,o){var s;if(null==t)un(null,null,n,r,i,a,o);else for(s=0;s<o;++s)i[a+s]=t[e+s]+n[r+s]&255}function ln(t,e,n,r,i,a,o){if(null==t)un(null,null,n,r,i,a,o);else{var s,u=t[e+0],c=u,l=u;for(s=0;s<o;++s)c=l+(u=t[e+s])-c,l=n[r+s]+(-256&c?0>c?0:255:c)&255,c=u,i[a+s]=l}}function hn(t,n,i,o){var s=n.width,u=n.o;if(e(null!=t&&null!=n),0>i||0>=o||i+o>u)return null;if(!t.Cc){if(null==t.ga){var c;if(t.ga=new sn,(c=null==t.ga)||(c=n.width*n.o,e(0==t.Gb.length),t.Gb=a(c),t.Uc=0,null==t.Gb?c=0:(t.mb=t.Gb,t.nb=t.Uc,t.rc=null,c=1),c=!c),!c){c=t.ga;var l=t.Fa,h=t.P,f=t.qc,d=t.mb,p=t.nb,g=h+1,m=f-1,b=c.l;if(e(null!=l&&null!=d&&null!=n),gi[0]=null,gi[1]=un,gi[2]=cn,gi[3]=ln,c.ca=d,c.tb=p,c.c=n.width,c.i=n.height,e(0<c.c&&0<c.i),1>=f)n=0;else if(c.$a=3&l[h+0],c.Z=l[h+0]>>2&3,c.Lc=l[h+0]>>4&3,h=l[h+0]>>6&3,0>c.$a||1<c.$a||4<=c.Z||1<c.Lc||h)n=0;else if(b.put=dt,b.ac=ft,b.bc=pt,b.ma=c,b.width=n.width,b.height=n.height,b.Da=n.Da,b.v=n.v,b.va=n.va,b.j=n.j,b.o=n.o,c.$a)t:{e(1==c.$a),n=kt();e:for(;;){if(null==n){n=0;break t}if(e(null!=c),c.mc=n,n.c=c.c,n.i=c.i,n.l=c.l,n.l.ma=c,n.l.width=c.c,n.l.height=c.i,n.a=0,v(n.m,l,g,m),!Ft(c.c,c.i,1,n,null))break e;if(1==n.ab&&3==n.gc[0].hc&&xt(n.s)?(c.ic=1,l=n.c*n.i,n.Ta=null,n.Ua=0,n.V=a(l),n.Ba=0,null==n.V?(n.a=1,n=0):n=1):(c.ic=0,n=It(n,c.c)),!n)break e;n=1;break t}c.mc=null,n=0}else n=m>=c.c*c.i;c=!n}if(c)return null;1!=t.ga.Lc?t.Ga=0:o=u-i}e(null!=t.ga),e(i+o<=u);t:{if(n=(l=t.ga).c,u=l.l.o,0==l.$a){if(g=t.rc,m=t.Vc,b=t.Fa,h=t.P+1+i*n,f=t.mb,d=t.nb+i*n,e(h<=t.P+t.qc),0!=l.Z)for(e(null!=gi[l.Z]),c=0;c<o;++c)gi[l.Z](g,m,b,h,f,d,n),g=f,m=d,d+=n,h+=n;else for(c=0;c<o;++c)r(f,d,b,h,n),g=f,m=d,d+=n,h+=n;t.rc=g,t.Vc=m}else{if(e(null!=l.mc),n=i+o,e(null!=(c=l.mc)),e(n<=c.i),c.C>=n)n=1;else if(l.ic||mn(),l.ic){l=c.V,g=c.Ba,m=c.c;var y=c.i,w=(b=1,h=c.$/m,f=c.$%m,d=c.m,p=c.s,c.$),N=m*y,L=m*n,A=p.wc,_=w<L?wt(p,f,h):null;e(w<=N),e(n<=y),e(xt(p));e:for(;;){for(;!d.h&&w<L;){if(f&A||(_=wt(p,f,h)),e(null!=_),S(d),256>(y=bt(_.G[0],_.H[0],d)))l[g+w]=y,++w,++f>=m&&(f=0,++h<=n&&!(h%16)&&St(c,h));else{if(!(280>y)){b=0;break e}y=mt(y-256,d);var P,k=bt(_.G[4],_.H[4],d);if(S(d),!(w>=(k=vt(m,k=mt(k,d)))&&N-w>=y)){b=0;break e}for(P=0;P<y;++P)l[g+w+P]=l[g+w+P-k];for(w+=y,f+=y;f>=m;)f-=m,++h<=n&&!(h%16)&&St(c,h);w<L&&f&A&&(_=wt(p,f,h))}e(d.h==x(d))}St(c,h>n?n:h);break e}!b||d.h&&w<N?(b=0,c.a=d.h?5:3):c.$=w,n=b}else n=_t(c,c.V,c.Ba,c.c,c.i,n,jt);if(!n){o=0;break t}}i+o>=u&&(t.Cc=1),o=1}if(!o)return null;if(t.Cc&&(null!=(o=t.ga)&&(o.mc=null),t.ga=null,0<t.Ga))return alert(\"todo:WebPDequantizeLevels\"),null}return t.nb+i*s}function fn(t,e,n,r,i,a){for(;0<i--;){var o,s=t,u=e+(n?1:0),c=t,l=e+(n?0:3);for(o=0;o<r;++o){var h=c[l+4*o];255!=h&&(h*=32897,s[u+4*o+0]=s[u+4*o+0]*h>>23,s[u+4*o+1]=s[u+4*o+1]*h>>23,s[u+4*o+2]=s[u+4*o+2]*h>>23)}e+=a}}function dn(t,e,n,r,i){for(;0<r--;){var a;for(a=0;a<n;++a){var o=t[e+2*a+0],s=15&(c=t[e+2*a+1]),u=4369*s,c=(240&c|c>>4)*u>>16;t[e+2*a+0]=(240&o|o>>4)*u>>16&240|(15&o|o<<4)*u>>16>>4&15,t[e+2*a+1]=240&c|s}e+=i}}function pn(t,e,n,r,i,a,o,s){var u,c,l=255;for(c=0;c<i;++c){for(u=0;u<r;++u){var h=t[e+u];a[o+4*u]=h,l&=h}e+=n,o+=s}return 255!=l}function gn(t,e,n,r,i){var a;for(a=0;a<i;++a)n[r+a]=t[e+a]>>8}function mn(){Lr=fn,xr=dn,Ar=pn,Sr=gn}function vn(n,r,i){t[n]=function(t,n,a,o,s,u,c,l,h,f,d,p,g,m,v,b,y){var w,N=y-1>>1,L=s[u+0]|c[l+0]<<16,x=h[f+0]|d[p+0]<<16;e(null!=t);var A=3*L+x+131074>>2;for(r(t[n+0],255&A,A>>16,g,m),null!=a&&(A=3*x+L+131074>>2,r(a[o+0],255&A,A>>16,v,b)),w=1;w<=N;++w){var S=s[u+w]|c[l+w]<<16,_=h[f+w]|d[p+w]<<16,P=L+S+x+_+524296,k=P+2*(S+x)>>3;A=k+L>>1,L=(P=P+2*(L+_)>>3)+S>>1,r(t[n+2*w-1],255&A,A>>16,g,m+(2*w-1)*i),r(t[n+2*w-0],255&L,L>>16,g,m+(2*w-0)*i),null!=a&&(A=P+x>>1,L=k+_>>1,r(a[o+2*w-1],255&A,A>>16,v,b+(2*w-1)*i),r(a[o+2*w+0],255&L,L>>16,v,b+(2*w+0)*i)),L=S,x=_}1&y||(A=3*L+x+131074>>2,r(t[n+y-1],255&A,A>>16,g,m+(y-1)*i),null!=a&&(A=3*x+L+131074>>2,r(a[o+y-1],255&A,A>>16,v,b+(y-1)*i)))}}function bn(){mi[Mr]=vi,mi[qr]=yi,mi[Er]=bi,mi[Rr]=wi,mi[Dr]=Ni,mi[Tr]=Li,mi[zr]=xi,mi[Ur]=yi,mi[Hr]=wi,mi[Wr]=Ni,mi[Vr]=Li}function yn(t){return t&~Fi?0>t?0:255:t>>ki}function wn(t,e){return yn((19077*t>>8)+(26149*e>>8)-14234)}function Nn(t,e,n){return yn((19077*t>>8)-(6419*e>>8)-(13320*n>>8)+8708)}function Ln(t,e){return yn((19077*t>>8)+(33050*e>>8)-17685)}function xn(t,e,n,r,i){r[i+0]=wn(t,n),r[i+1]=Nn(t,e,n),r[i+2]=Ln(t,e)}function An(t,e,n,r,i){r[i+0]=Ln(t,e),r[i+1]=Nn(t,e,n),r[i+2]=wn(t,n)}function Sn(t,e,n,r,i){var a=Nn(t,e,n);e=a<<3&224|Ln(t,e)>>3,r[i+0]=248&wn(t,n)|a>>5,r[i+1]=e}function _n(t,e,n,r,i){var a=240&Ln(t,e)|15;r[i+0]=240&wn(t,n)|Nn(t,e,n)>>4,r[i+1]=a}function Pn(t,e,n,r,i){r[i+0]=255,xn(t,e,n,r,i+1)}function kn(t,e,n,r,i){An(t,e,n,r,i),r[i+3]=255}function Fn(t,e,n,r,i){xn(t,e,n,r,i),r[i+3]=255}function Vt(t,e){return 0>t?0:t>e?e:t}function In(e,n,r){t[e]=function(t,e,i,a,o,s,u,c,l){for(var h=c+(-2&l)*r;c!=h;)n(t[e+0],i[a+0],o[s+0],u,c),n(t[e+1],i[a+0],o[s+0],u,c+r),e+=2,++a,++s,c+=2*r;1&l&&n(t[e+0],i[a+0],o[s+0],u,c)}}function jn(t,e,n){return 0==n?0==t?0==e?6:5:0==e?4:0:n}function Cn(t,e,n,r,i){switch(t>>>30){case 3:ar(e,n,r,i,0);break;case 2:or(e,n,r,i);break;case 1:ur(e,n,r,i)}}function On(t,e){var n,a,o=e.M,s=e.Nb,u=t.oc,c=t.pc+40,l=t.oc,h=t.pc+584,f=t.oc,d=t.pc+600;for(n=0;16>n;++n)u[c+32*n-1]=129;for(n=0;8>n;++n)l[h+32*n-1]=129,f[d+32*n-1]=129;for(0<o?u[c-1-32]=l[h-1-32]=f[d-1-32]=129:(i(u,c-32-1,127,21),i(l,h-32-1,127,9),i(f,d-32-1,127,9)),a=0;a<t.za;++a){var p=e.ya[e.aa+a];if(0<a){for(n=-1;16>n;++n)r(u,c+32*n-4,u,c+32*n+12,4);for(n=-1;8>n;++n)r(l,h+32*n-4,l,h+32*n+4,4),r(f,d+32*n-4,f,d+32*n+4,4)}var g=t.Gd,m=t.Hd+a,v=p.ad,b=p.Hc;if(0<o&&(r(u,c-32,g[m].y,0,16),r(l,h-32,g[m].f,0,8),r(f,d-32,g[m].ea,0,8)),p.Za){var y=u,w=c-32+16;for(0<o&&(a>=t.za-1?i(y,w,g[m].y[15],4):r(y,w,g[m+1].y,0,4)),n=0;4>n;n++)y[w+128+n]=y[w+256+n]=y[w+384+n]=y[w+0+n];for(n=0;16>n;++n,b<<=2)y=u,w=c+Ei[n],hi[p.Ob[n]](y,w),Cn(b,v,16*+n,y,w)}else if(y=jn(a,o,p.Ob[0]),li[y](u,c),0!=b)for(n=0;16>n;++n,b<<=2)Cn(b,v,16*+n,u,c+Ei[n]);for(n=p.Gc,y=jn(a,o,p.Dd),fi[y](l,h),fi[y](f,d),b=v,y=l,w=h,255&(p=0|n)&&(170&p?sr(b,256,y,w):cr(b,256,y,w)),p=f,b=d,255&(n>>=8)&&(170&n?sr(v,320,p,b):cr(v,320,p,b)),o<t.Ub-1&&(r(g[m].y,0,u,c+480,16),r(g[m].f,0,l,h+224,8),r(g[m].ea,0,f,d+224,8)),n=8*s*t.B,g=t.sa,m=t.ta+16*a+16*s*t.R,v=t.qa,p=t.ra+8*a+n,b=t.Ha,y=t.Ia+8*a+n,n=0;16>n;++n)r(g,m+n*t.R,u,c+32*n,16);for(n=0;8>n;++n)r(v,p+n*t.B,l,h+32*n,8),r(b,y+n*t.B,f,d+32*n,8)}}function Bn(t,r,i,a,o,s,u,c,l){var h=[0],f=[0],d=0,p=null!=l?l.kd:0,g=null!=l?l:new nn;if(null==t||12>i)return 7;g.data=t,g.w=r,g.ha=i,r=[r],i=[i],g.gb=[g.gb];t:{var m=r,b=i,y=g.gb;if(e(null!=t),e(null!=b),e(null!=y),y[0]=0,12<=b[0]&&!n(t,m[0],\"RIFF\")){if(n(t,m[0]+8,\"WEBP\")){y=3;break t}var w=C(t,m[0]+4);if(12>w||4294967286<w){y=3;break t}if(p&&w>b[0]-8){y=7;break t}y[0]=w,m[0]+=12,b[0]-=12}y=0}if(0!=y)return y;for(w=0<g.gb[0],i=i[0];;){t:{var L=t;b=r,y=i;var x=h,A=f,S=m=[0];if((k=d=[d])[0]=0,8>y[0])y=7;else{if(!n(L,b[0],\"VP8X\")){if(10!=C(L,b[0]+4)){y=3;break t}if(18>y[0]){y=7;break t}var _=C(L,b[0]+8),P=1+j(L,b[0]+12);if(2147483648<=P*(L=1+j(L,b[0]+15))){y=3;break t}null!=S&&(S[0]=_),null!=x&&(x[0]=P),null!=A&&(A[0]=L),b[0]+=18,y[0]-=18,k[0]=1}y=0}}if(d=d[0],m=m[0],0!=y)return y;if(b=!!(2&m),!w&&d)return 3;if(null!=s&&(s[0]=!!(16&m)),null!=u&&(u[0]=b),null!=c&&(c[0]=0),u=h[0],m=f[0],d&&b&&null==l){y=0;break}if(4>i){y=7;break}if(w&&d||!w&&!d&&!n(t,r[0],\"ALPH\")){i=[i],g.na=[g.na],g.P=[g.P],g.Sa=[g.Sa];t:{_=t,y=r,w=i;var k=g.gb;x=g.na,A=g.P,S=g.Sa,P=22,e(null!=_),e(null!=w),L=y[0];var F=w[0];for(e(null!=x),e(null!=S),x[0]=null,A[0]=null,S[0]=0;;){if(y[0]=L,w[0]=F,8>F){y=7;break t}var I=C(_,L+4);if(4294967286<I){y=3;break t}var O=8+I+1&-2;if(P+=O,0<k&&P>k){y=3;break t}if(!n(_,L,\"VP8 \")||!n(_,L,\"VP8L\")){y=0;break t}if(F[0]<O){y=7;break t}n(_,L,\"ALPH\")||(x[0]=_,A[0]=L+8,S[0]=I),L+=O,F-=O}}if(i=i[0],g.na=g.na[0],g.P=g.P[0],g.Sa=g.Sa[0],0!=y)break}i=[i],g.Ja=[g.Ja],g.xa=[g.xa];t:if(k=t,y=r,w=i,x=g.gb[0],A=g.Ja,S=g.xa,_=y[0],L=!n(k,_,\"VP8 \"),P=!n(k,_,\"VP8L\"),e(null!=k),e(null!=w),e(null!=A),e(null!=S),8>w[0])y=7;else{if(L||P){if(k=C(k,_+4),12<=x&&k>x-12){y=3;break t}if(p&&k>w[0]-8){y=7;break t}A[0]=k,y[0]+=8,w[0]-=8,S[0]=P}else S[0]=5<=w[0]&&47==k[_+0]&&!(k[_+4]>>5),A[0]=w[0];y=0}if(i=i[0],g.Ja=g.Ja[0],g.xa=g.xa[0],r=r[0],0!=y)break;if(4294967286<g.Ja)return 3;if(null==c||b||(c[0]=g.xa?2:1),u=[u],m=[m],g.xa){if(5>i){y=7;break}c=u,p=m,b=s,null==t||5>i?t=0:5<=i&&47==t[r+0]&&!(t[r+4]>>5)?(w=[0],k=[0],x=[0],v(A=new N,t,r,i),gt(A,w,k,x)?(null!=c&&(c[0]=w[0]),null!=p&&(p[0]=k[0]),null!=b&&(b[0]=x[0]),t=1):t=0):t=0}else{if(10>i){y=7;break}c=m,null==t||10>i||!Xt(t,r+3,i-3)?t=0:(p=t[r+0]|t[r+1]<<8|t[r+2]<<16,b=16383&(t[r+7]<<8|t[r+6]),t=16383&(t[r+9]<<8|t[r+8]),1&p||3<(p>>1&7)||!(p>>4&1)||p>>5>=g.Ja||!b||!t?t=0:(u&&(u[0]=b),c&&(c[0]=t),t=1))}if(!t)return 3;if(u=u[0],m=m[0],d&&(h[0]!=u||f[0]!=m))return 3;null!=l&&(l[0]=g,l.offset=r-l.w,e(4294967286>r-l.w),e(l.offset==l.ha-i));break}return 0==y||7==y&&d&&null==l?(null!=s&&(s[0]|=null!=g.na&&0<g.na.length),null!=a&&(a[0]=u),null!=o&&(o[0]=m),0):y}function Mn(t,e,n){var r=e.width,i=e.height,a=0,o=0,s=r,u=i;if(e.Da=null!=t&&0<t.Da,e.Da&&(s=t.cd,u=t.bd,a=t.v,o=t.j,11>n||(a&=-2,o&=-2),0>a||0>o||0>=s||0>=u||a+s>r||o+u>i))return 0;if(e.v=a,e.j=o,e.va=a+s,e.o=o+u,e.U=s,e.T=u,e.da=null!=t&&0<t.da,e.da){if(!q(s,u,n=[t.ib],a=[t.hb]))return 0;e.ib=n[0],e.hb=a[0]}return e.ob=null!=t&&t.ob,e.Kb=null==t||!t.Sd,e.da&&(e.ob=e.ib<3*r/4&&e.hb<3*i/4,e.Kb=0),1}function qn(t){if(null==t)return 2;if(11>t.S){var e=t.f.RGBA;e.fb+=(t.height-1)*e.A,e.A=-e.A}else e=t.f.kb,t=t.height,e.O+=(t-1)*e.fa,e.fa=-e.fa,e.N+=(t-1>>1)*e.Ab,e.Ab=-e.Ab,e.W+=(t-1>>1)*e.Db,e.Db=-e.Db,null!=e.F&&(e.J+=(t-1)*e.lb,e.lb=-e.lb);return 0}function En(t,e,n,r){if(null==r||0>=t||0>=e)return 2;if(null!=n){if(n.Da){var i=n.cd,o=n.bd,s=-2&n.v,u=-2&n.j;if(0>s||0>u||0>=i||0>=o||s+i>t||u+o>e)return 2;t=i,e=o}if(n.da){if(!q(t,e,i=[n.ib],o=[n.hb]))return 2;t=i[0],e=o[0]}}r.width=t,r.height=e;t:{var c=r.width,l=r.height;if(t=r.S,0>=c||0>=l||!(t>=Mr&&13>t))t=2;else{if(0>=r.Rd&&null==r.sd){s=o=i=e=0;var h=(u=c*zi[t])*l;if(11>t||(o=(l+1)/2*(e=(c+1)/2),12==t&&(s=(i=c)*l)),null==(l=a(h+2*o+s))){t=1;break t}r.sd=l,11>t?((c=r.f.RGBA).eb=l,c.fb=0,c.A=u,c.size=h):((c=r.f.kb).y=l,c.O=0,c.fa=u,c.Fd=h,c.f=l,c.N=0+h,c.Ab=e,c.Cd=o,c.ea=l,c.W=0+h+o,c.Db=e,c.Ed=o,12==t&&(c.F=l,c.J=0+h+2*o),c.Tc=s,c.lb=i)}if(e=1,i=r.S,o=r.width,s=r.height,i>=Mr&&13>i)if(11>i)t=r.f.RGBA,e&=(u=Math.abs(t.A))*(s-1)+o<=t.size,e&=u>=o*zi[i],e&=null!=t.eb;else{t=r.f.kb,u=(o+1)/2,h=(s+1)/2,c=Math.abs(t.fa),l=Math.abs(t.Ab);var f=Math.abs(t.Db),d=Math.abs(t.lb),p=d*(s-1)+o;e&=c*(s-1)+o<=t.Fd,e&=l*(h-1)+u<=t.Cd,e=(e&=f*(h-1)+u<=t.Ed)&c>=o&l>=u&f>=u,e&=null!=t.y,e&=null!=t.f,e&=null!=t.ea,12==i&&(e&=d>=o,e&=p<=t.Tc,e&=null!=t.F)}else e=0;t=e?0:2}}return 0!=t||null!=n&&n.fd&&(t=qn(r)),t}var Rn=64,Dn=[0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535,131071,262143,524287,1048575,2097151,4194303,8388607,16777215],Tn=24,zn=32,Un=8,Hn=[0,0,1,1,2,2,2,2,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7];D(\"Predictor0\",\"PredictorAdd0\"),t.Predictor0=function(){return 4278190080},t.Predictor1=function(t){return t},t.Predictor2=function(t,e,n){return e[n+0]},t.Predictor3=function(t,e,n){return e[n+1]},t.Predictor4=function(t,e,n){return e[n-1]},t.Predictor5=function(t,e,n){return z(z(t,e[n+1]),e[n+0])},t.Predictor6=function(t,e,n){return z(t,e[n-1])},t.Predictor7=function(t,e,n){return z(t,e[n+0])},t.Predictor8=function(t,e,n){return z(e[n-1],e[n+0])},t.Predictor9=function(t,e,n){return z(e[n+0],e[n+1])},t.Predictor10=function(t,e,n){return z(z(t,e[n-1]),z(e[n+0],e[n+1]))},t.Predictor11=function(t,e,n){var r=e[n+0];return 0>=W(r>>24&255,t>>24&255,(e=e[n-1])>>24&255)+W(r>>16&255,t>>16&255,e>>16&255)+W(r>>8&255,t>>8&255,e>>8&255)+W(255&r,255&t,255&e)?r:t},t.Predictor12=function(t,e,n){var r=e[n+0];return(U((t>>24&255)+(r>>24&255)-((e=e[n-1])>>24&255))<<24|U((t>>16&255)+(r>>16&255)-(e>>16&255))<<16|U((t>>8&255)+(r>>8&255)-(e>>8&255))<<8|U((255&t)+(255&r)-(255&e)))>>>0},t.Predictor13=function(t,e,n){var r=e[n-1];return(H((t=z(t,e[n+0]))>>24&255,r>>24&255)<<24|H(t>>16&255,r>>16&255)<<16|H(t>>8&255,r>>8&255)<<8|H(255&t,255&r))>>>0};var Wn=t.PredictorAdd0;t.PredictorAdd1=V,D(\"Predictor2\",\"PredictorAdd2\"),D(\"Predictor3\",\"PredictorAdd3\"),D(\"Predictor4\",\"PredictorAdd4\"),D(\"Predictor5\",\"PredictorAdd5\"),D(\"Predictor6\",\"PredictorAdd6\"),D(\"Predictor7\",\"PredictorAdd7\"),D(\"Predictor8\",\"PredictorAdd8\"),D(\"Predictor9\",\"PredictorAdd9\"),D(\"Predictor10\",\"PredictorAdd10\"),D(\"Predictor11\",\"PredictorAdd11\"),D(\"Predictor12\",\"PredictorAdd12\"),D(\"Predictor13\",\"PredictorAdd13\");var Vn=t.PredictorAdd2;X(\"ColorIndexInverseTransform\",\"MapARGB\",\"32b\",function(t){return t>>8&255},function(t){return t}),X(\"VP8LColorIndexInverseTransformAlpha\",\"MapAlpha\",\"8b\",function(t){return t},function(t){return t>>8&255});var Gn,Yn=t.ColorIndexInverseTransform,Jn=t.MapARGB,Xn=t.VP8LColorIndexInverseTransformAlpha,Kn=t.MapAlpha,Zn=t.VP8LPredictorsAdd=[];Zn.length=16,(t.VP8LPredictors=[]).length=16,(t.VP8LPredictorsAdd_C=[]).length=16,(t.VP8LPredictors_C=[]).length=16;var $n,Qn,tr,er,nr,rr,ir,ar,or,sr,ur,cr,lr,hr,fr,dr,pr,gr,mr,vr,br,yr,wr,Nr,Lr,xr,Ar,Sr,_r=a(511),Pr=a(2041),kr=a(225),Fr=a(767),Ir=0,jr=Pr,Cr=kr,Or=Fr,Br=_r,Mr=0,qr=1,Er=2,Rr=3,Dr=4,Tr=5,zr=6,Ur=7,Hr=8,Wr=9,Vr=10,Gr=[2,3,7],Yr=[3,3,11],Jr=[280,256,256,256,40],Xr=[0,1,1,1,0],Kr=[17,18,0,1,2,3,4,5,16,6,7,8,9,10,11,12,13,14,15],Zr=[24,7,23,25,40,6,39,41,22,26,38,42,56,5,55,57,21,27,54,58,37,43,72,4,71,73,20,28,53,59,70,74,36,44,88,69,75,52,60,3,87,89,19,29,86,90,35,45,68,76,85,91,51,61,104,2,103,105,18,30,102,106,34,46,84,92,67,77,101,107,50,62,120,1,119,121,83,93,17,31,100,108,66,78,118,122,33,47,117,123,49,63,99,109,82,94,0,116,124,65,79,16,32,98,110,48,115,125,81,95,64,114,126,97,111,80,113,127,96,112],$r=[2954,2956,2958,2962,2970,2986,3018,3082,3212,3468,3980,5004],Qr=8,ti=[4,5,6,7,8,9,10,10,11,12,13,14,15,16,17,17,18,19,20,20,21,21,22,22,23,23,24,25,25,26,27,28,29,30,31,32,33,34,35,36,37,37,38,39,40,41,42,43,44,45,46,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,93,95,96,98,100,101,102,104,106,108,110,112,114,116,118,122,124,126,128,130,132,134,136,138,140,143,145,148,151,154,157],ei=[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,62,64,66,68,70,72,74,76,78,80,82,84,86,88,90,92,94,96,98,100,102,104,106,108,110,112,114,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,177,181,185,189,193,197,201,205,209,213,217,221,225,229,234,239,245,249,254,259,264,269,274,279,284],ni=null,ri=[[173,148,140,0],[176,155,140,135,0],[180,157,141,134,130,0],[254,254,243,230,196,177,153,140,133,130,129,0]],ii=[0,1,4,8,5,2,3,6,9,12,13,10,7,11,14,15],ai=[-0,1,-1,2,-2,3,4,6,-3,5,-4,-5,-6,7,-7,8,-8,-9],oi=[[[[128,128,128,128,128,128,128,128,128,128,128],[128,128,128,128,128,128,128,128,128,128,128],[128,128,128,128,128,128,128,128,128,128,128]],[[253,136,254,255,228,219,128,128,128,128,128],[189,129,242,255,227,213,255,219,128,128,128],[106,126,227,252,214,209,255,255,128,128,128]],[[1,98,248,255,236,226,255,255,128,128,128],[181,133,238,254,221,234,255,154,128,128,128],[78,134,202,247,198,180,255,219,128,128,128]],[[1,185,249,255,243,255,128,128,128,128,128],[184,150,247,255,236,224,128,128,128,128,128],[77,110,216,255,236,230,128,128,128,128,128]],[[1,101,251,255,241,255,128,128,128,128,128],[170,139,241,252,236,209,255,255,128,128,128],[37,116,196,243,228,255,255,255,128,128,128]],[[1,204,254,255,245,255,128,128,128,128,128],[207,160,250,255,238,128,128,128,128,128,128],[102,103,231,255,211,171,128,128,128,128,128]],[[1,152,252,255,240,255,128,128,128,128,128],[177,135,243,255,234,225,128,128,128,128,128],[80,129,211,255,194,224,128,128,128,128,128]],[[1,1,255,128,128,128,128,128,128,128,128],[246,1,255,128,128,128,128,128,128,128,128],[255,128,128,128,128,128,128,128,128,128,128]]],[[[198,35,237,223,193,187,162,160,145,155,62],[131,45,198,221,172,176,220,157,252,221,1],[68,47,146,208,149,167,221,162,255,223,128]],[[1,149,241,255,221,224,255,255,128,128,128],[184,141,234,253,222,220,255,199,128,128,128],[81,99,181,242,176,190,249,202,255,255,128]],[[1,129,232,253,214,197,242,196,255,255,128],[99,121,210,250,201,198,255,202,128,128,128],[23,91,163,242,170,187,247,210,255,255,128]],[[1,200,246,255,234,255,128,128,128,128,128],[109,178,241,255,231,245,255,255,128,128,128],[44,130,201,253,205,192,255,255,128,128,128]],[[1,132,239,251,219,209,255,165,128,128,128],[94,136,225,251,218,190,255,255,128,128,128],[22,100,174,245,186,161,255,199,128,128,128]],[[1,182,249,255,232,235,128,128,128,128,128],[124,143,241,255,227,234,128,128,128,128,128],[35,77,181,251,193,211,255,205,128,128,128]],[[1,157,247,255,236,231,255,255,128,128,128],[121,141,235,255,225,227,255,255,128,128,128],[45,99,188,251,195,217,255,224,128,128,128]],[[1,1,251,255,213,255,128,128,128,128,128],[203,1,248,255,255,128,128,128,128,128,128],[137,1,177,255,224,255,128,128,128,128,128]]],[[[253,9,248,251,207,208,255,192,128,128,128],[175,13,224,243,193,185,249,198,255,255,128],[73,17,171,221,161,179,236,167,255,234,128]],[[1,95,247,253,212,183,255,255,128,128,128],[239,90,244,250,211,209,255,255,128,128,128],[155,77,195,248,188,195,255,255,128,128,128]],[[1,24,239,251,218,219,255,205,128,128,128],[201,51,219,255,196,186,128,128,128,128,128],[69,46,190,239,201,218,255,228,128,128,128]],[[1,191,251,255,255,128,128,128,128,128,128],[223,165,249,255,213,255,128,128,128,128,128],[141,124,248,255,255,128,128,128,128,128,128]],[[1,16,248,255,255,128,128,128,128,128,128],[190,36,230,255,236,255,128,128,128,128,128],[149,1,255,128,128,128,128,128,128,128,128]],[[1,226,255,128,128,128,128,128,128,128,128],[247,192,255,128,128,128,128,128,128,128,128],[240,128,255,128,128,128,128,128,128,128,128]],[[1,134,252,255,255,128,128,128,128,128,128],[213,62,250,255,255,128,128,128,128,128,128],[55,93,255,128,128,128,128,128,128,128,128]],[[128,128,128,128,128,128,128,128,128,128,128],[128,128,128,128,128,128,128,128,128,128,128],[128,128,128,128,128,128,128,128,128,128,128]]],[[[202,24,213,235,186,191,220,160,240,175,255],[126,38,182,232,169,184,228,174,255,187,128],[61,46,138,219,151,178,240,170,255,216,128]],[[1,112,230,250,199,191,247,159,255,255,128],[166,109,228,252,211,215,255,174,128,128,128],[39,77,162,232,172,180,245,178,255,255,128]],[[1,52,220,246,198,199,249,220,255,255,128],[124,74,191,243,183,193,250,221,255,255,128],[24,71,130,219,154,170,243,182,255,255,128]],[[1,182,225,249,219,240,255,224,128,128,128],[149,150,226,252,216,205,255,171,128,128,128],[28,108,170,242,183,194,254,223,255,255,128]],[[1,81,230,252,204,203,255,192,128,128,128],[123,102,209,247,188,196,255,233,128,128,128],[20,95,153,243,164,173,255,203,128,128,128]],[[1,222,248,255,216,213,128,128,128,128,128],[168,175,246,252,235,205,255,255,128,128,128],[47,116,215,255,211,212,255,255,128,128,128]],[[1,121,236,253,212,214,255,255,128,128,128],[141,84,213,252,201,202,255,219,128,128,128],[42,80,160,240,162,185,255,205,128,128,128]],[[1,1,255,128,128,128,128,128,128,128,128],[244,1,255,128,128,128,128,128,128,128,128],[238,1,255,128,128,128,128,128,128,128,128]]]],si=[[[231,120,48,89,115,113,120,152,112],[152,179,64,126,170,118,46,70,95],[175,69,143,80,85,82,72,155,103],[56,58,10,171,218,189,17,13,152],[114,26,17,163,44,195,21,10,173],[121,24,80,195,26,62,44,64,85],[144,71,10,38,171,213,144,34,26],[170,46,55,19,136,160,33,206,71],[63,20,8,114,114,208,12,9,226],[81,40,11,96,182,84,29,16,36]],[[134,183,89,137,98,101,106,165,148],[72,187,100,130,157,111,32,75,80],[66,102,167,99,74,62,40,234,128],[41,53,9,178,241,141,26,8,107],[74,43,26,146,73,166,49,23,157],[65,38,105,160,51,52,31,115,128],[104,79,12,27,217,255,87,17,7],[87,68,71,44,114,51,15,186,23],[47,41,14,110,182,183,21,17,194],[66,45,25,102,197,189,23,18,22]],[[88,88,147,150,42,46,45,196,205],[43,97,183,117,85,38,35,179,61],[39,53,200,87,26,21,43,232,171],[56,34,51,104,114,102,29,93,77],[39,28,85,171,58,165,90,98,64],[34,22,116,206,23,34,43,166,73],[107,54,32,26,51,1,81,43,31],[68,25,106,22,64,171,36,225,114],[34,19,21,102,132,188,16,76,124],[62,18,78,95,85,57,50,48,51]],[[193,101,35,159,215,111,89,46,111],[60,148,31,172,219,228,21,18,111],[112,113,77,85,179,255,38,120,114],[40,42,1,196,245,209,10,25,109],[88,43,29,140,166,213,37,43,154],[61,63,30,155,67,45,68,1,209],[100,80,8,43,154,1,51,26,71],[142,78,78,16,255,128,34,197,171],[41,40,5,102,211,183,4,1,221],[51,50,17,168,209,192,23,25,82]],[[138,31,36,171,27,166,38,44,229],[67,87,58,169,82,115,26,59,179],[63,59,90,180,59,166,93,73,154],[40,40,21,116,143,209,34,39,175],[47,15,16,183,34,223,49,45,183],[46,17,33,183,6,98,15,32,183],[57,46,22,24,128,1,54,17,37],[65,32,73,115,28,128,23,128,205],[40,3,9,115,51,192,18,6,223],[87,37,9,115,59,77,64,21,47]],[[104,55,44,218,9,54,53,130,226],[64,90,70,205,40,41,23,26,57],[54,57,112,184,5,41,38,166,213],[30,34,26,133,152,116,10,32,134],[39,19,53,221,26,114,32,73,255],[31,9,65,234,2,15,1,118,73],[75,32,12,51,192,255,160,43,51],[88,31,35,67,102,85,55,186,85],[56,21,23,111,59,205,45,37,192],[55,38,70,124,73,102,1,34,98]],[[125,98,42,88,104,85,117,175,82],[95,84,53,89,128,100,113,101,45],[75,79,123,47,51,128,81,171,1],[57,17,5,71,102,57,53,41,49],[38,33,13,121,57,73,26,1,85],[41,10,67,138,77,110,90,47,114],[115,21,2,10,102,255,166,23,6],[101,29,16,10,85,128,101,196,26],[57,18,10,102,102,213,34,20,43],[117,20,15,36,163,128,68,1,26]],[[102,61,71,37,34,53,31,243,192],[69,60,71,38,73,119,28,222,37],[68,45,128,34,1,47,11,245,171],[62,17,19,70,146,85,55,62,70],[37,43,37,154,100,163,85,160,1],[63,9,92,136,28,64,32,201,85],[75,15,9,9,64,255,184,119,16],[86,6,28,5,64,255,25,248,1],[56,8,17,132,137,255,55,116,128],[58,15,20,82,135,57,26,121,40]],[[164,50,31,137,154,133,25,35,218],[51,103,44,131,131,123,31,6,158],[86,40,64,135,148,224,45,183,128],[22,26,17,131,240,154,14,1,209],[45,16,21,91,64,222,7,1,197],[56,21,39,155,60,138,23,102,213],[83,12,13,54,192,255,68,47,28],[85,26,85,85,128,128,32,146,171],[18,11,7,63,144,171,4,4,246],[35,27,10,146,174,171,12,26,128]],[[190,80,35,99,180,80,126,54,45],[85,126,47,87,176,51,41,20,32],[101,75,128,139,118,146,116,128,85],[56,41,15,176,236,85,37,9,62],[71,30,17,119,118,255,17,18,138],[101,38,60,138,55,70,43,26,142],[146,36,19,30,171,255,97,27,20],[138,45,61,62,219,1,81,188,64],[32,41,20,117,151,142,20,21,163],[112,19,12,61,195,128,48,4,24]]],ui=[[[[255,255,255,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255]],[[176,246,255,255,255,255,255,255,255,255,255],[223,241,252,255,255,255,255,255,255,255,255],[249,253,253,255,255,255,255,255,255,255,255]],[[255,244,252,255,255,255,255,255,255,255,255],[234,254,254,255,255,255,255,255,255,255,255],[253,255,255,255,255,255,255,255,255,255,255]],[[255,246,254,255,255,255,255,255,255,255,255],[239,253,254,255,255,255,255,255,255,255,255],[254,255,254,255,255,255,255,255,255,255,255]],[[255,248,254,255,255,255,255,255,255,255,255],[251,255,254,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255]],[[255,253,254,255,255,255,255,255,255,255,255],[251,254,254,255,255,255,255,255,255,255,255],[254,255,254,255,255,255,255,255,255,255,255]],[[255,254,253,255,254,255,255,255,255,255,255],[250,255,254,255,254,255,255,255,255,255,255],[254,255,255,255,255,255,255,255,255,255,255]],[[255,255,255,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255]]],[[[217,255,255,255,255,255,255,255,255,255,255],[225,252,241,253,255,255,254,255,255,255,255],[234,250,241,250,253,255,253,254,255,255,255]],[[255,254,255,255,255,255,255,255,255,255,255],[223,254,254,255,255,255,255,255,255,255,255],[238,253,254,254,255,255,255,255,255,255,255]],[[255,248,254,255,255,255,255,255,255,255,255],[249,254,255,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255]],[[255,253,255,255,255,255,255,255,255,255,255],[247,254,255,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255]],[[255,253,254,255,255,255,255,255,255,255,255],[252,255,255,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255]],[[255,254,254,255,255,255,255,255,255,255,255],[253,255,255,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255]],[[255,254,253,255,255,255,255,255,255,255,255],[250,255,255,255,255,255,255,255,255,255,255],[254,255,255,255,255,255,255,255,255,255,255]],[[255,255,255,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255]]],[[[186,251,250,255,255,255,255,255,255,255,255],[234,251,244,254,255,255,255,255,255,255,255],[251,251,243,253,254,255,254,255,255,255,255]],[[255,253,254,255,255,255,255,255,255,255,255],[236,253,254,255,255,255,255,255,255,255,255],[251,253,253,254,254,255,255,255,255,255,255]],[[255,254,254,255,255,255,255,255,255,255,255],[254,254,254,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255]],[[255,254,255,255,255,255,255,255,255,255,255],[254,254,255,255,255,255,255,255,255,255,255],[254,255,255,255,255,255,255,255,255,255,255]],[[255,255,255,255,255,255,255,255,255,255,255],[254,255,255,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255]],[[255,255,255,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255]],[[255,255,255,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255]],[[255,255,255,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255]]],[[[248,255,255,255,255,255,255,255,255,255,255],[250,254,252,254,255,255,255,255,255,255,255],[248,254,249,253,255,255,255,255,255,255,255]],[[255,253,253,255,255,255,255,255,255,255,255],[246,253,253,255,255,255,255,255,255,255,255],[252,254,251,254,254,255,255,255,255,255,255]],[[255,254,252,255,255,255,255,255,255,255,255],[248,254,253,255,255,255,255,255,255,255,255],[253,255,254,254,255,255,255,255,255,255,255]],[[255,251,254,255,255,255,255,255,255,255,255],[245,251,254,255,255,255,255,255,255,255,255],[253,253,254,255,255,255,255,255,255,255,255]],[[255,251,253,255,255,255,255,255,255,255,255],[252,253,254,255,255,255,255,255,255,255,255],[255,254,255,255,255,255,255,255,255,255,255]],[[255,252,255,255,255,255,255,255,255,255,255],[249,255,254,255,255,255,255,255,255,255,255],[255,255,254,255,255,255,255,255,255,255,255]],[[255,255,253,255,255,255,255,255,255,255,255],[250,255,255,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255]],[[255,255,255,255,255,255,255,255,255,255,255],[254,255,255,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255]]]],ci=[0,1,2,3,6,4,5,6,6,6,6,6,6,6,6,7,0],li=[],hi=[],fi=[],di=1,pi=2,gi=[],mi=[];vn(\"UpsampleRgbLinePair\",xn,3),vn(\"UpsampleBgrLinePair\",An,3),vn(\"UpsampleRgbaLinePair\",Fn,4),vn(\"UpsampleBgraLinePair\",kn,4),vn(\"UpsampleArgbLinePair\",Pn,4),vn(\"UpsampleRgba4444LinePair\",_n,2),vn(\"UpsampleRgb565LinePair\",Sn,2);var vi=t.UpsampleRgbLinePair,bi=t.UpsampleBgrLinePair,yi=t.UpsampleRgbaLinePair,wi=t.UpsampleBgraLinePair,Ni=t.UpsampleArgbLinePair,Li=t.UpsampleRgba4444LinePair,xi=t.UpsampleRgb565LinePair,Ai=16,Si=1<<Ai-1,_i=-227,Pi=482,ki=6,Fi=(256<<ki)-1,Ii=0,ji=a(256),Ci=a(256),Oi=a(256),Bi=a(256),Mi=a(Pi-_i),qi=a(Pi-_i);In(\"YuvToRgbRow\",xn,3),In(\"YuvToBgrRow\",An,3),In(\"YuvToRgbaRow\",Fn,4),In(\"YuvToBgraRow\",kn,4),In(\"YuvToArgbRow\",Pn,4),In(\"YuvToRgba4444Row\",_n,2),In(\"YuvToRgb565Row\",Sn,2);var Ei=[0,4,8,12,128,132,136,140,256,260,264,268,384,388,392,396],Ri=[0,2,8],Di=[8,7,6,4,4,2,2,2,1,1,1,1],Ti=1;this.WebPDecodeRGBA=function(t,n,s,u,c){var l=qr,h=new en,f=new ot;h.ba=f,f.S=l,f.width=[f.width],f.height=[f.height];var d=f.width,p=f.height,g=new st;if(null==g||null==t)var m=2;else e(null!=g),m=Bn(t,n,s,g.width,g.height,g.Pd,g.Qd,g.format,null);if(0!=m?d=0:(null!=d&&(d[0]=g.width[0]),null!=p&&(p[0]=g.height[0]),d=1),d){f.width=f.width[0],f.height=f.height[0],null!=u&&(u[0]=f.width),null!=c&&(c[0]=f.height);t:{if(u=new Gt,(c=new nn).data=t,c.w=n,c.ha=s,c.kd=1,n=[0],e(null!=c),(0==(t=Bn(c.data,c.w,c.ha,null,null,null,n,null,c))||7==t)&&n[0]&&(t=4),0==(n=t)){if(e(null!=h),u.data=c.data,u.w=c.w+c.offset,u.ha=c.ha-c.offset,u.put=dt,u.ac=ft,u.bc=pt,u.ma=h,c.xa){if(null==(t=kt())){h=1;break t}if(function(t,n){var r=[0],i=[0],a=[0];e:for(;;){if(null==t)return 0;if(null==n)return t.a=2,0;if(t.l=n,t.a=0,v(t.m,n.data,n.w,n.ha),!gt(t.m,r,i,a)){t.a=3;break e}if(t.xb=pi,n.width=r[0],n.height=i[0],!Ft(r[0],i[0],1,t,null))break e;return 1}return e(0!=t.a),0}(t,u)){if(u=0==(n=En(u.width,u.height,h.Oa,h.ba))){e:{u=t;n:for(;;){if(null==u){u=0;break e}if(e(null!=u.s.yc),e(null!=u.s.Ya),e(0<u.s.Wb),e(null!=(s=u.l)),e(null!=(c=s.ma)),0!=u.xb){if(u.ca=c.ba,u.tb=c.tb,e(null!=u.ca),!Mn(c.Oa,s,Rr)){u.a=2;break n}if(!It(u,s.width))break n;if(s.da)break n;if((s.da||rt(u.ca.S))&&mn(),11>u.ca.S||(alert(\"todo:WebPInitConvertARGBToYUV\"),null!=u.ca.f.kb.F&&mn()),u.Pb&&0<u.s.ua&&null==u.s.vb.X&&!O(u.s.vb,u.s.Wa.Xa)){u.a=1;break n}u.xb=0}if(!_t(u,u.V,u.Ba,u.c,u.i,s.o,Lt))break n;c.Dc=u.Ma,u=1;break e}e(0!=u.a),u=0}u=!u}u&&(n=t.a)}else n=t.a}else{if(null==(t=new Yt)){h=1;break t}if(t.Fa=c.na,t.P=c.P,t.qc=c.Sa,Kt(t,u)){if(0==(n=En(u.width,u.height,h.Oa,h.ba))){if(t.Aa=0,s=h.Oa,e(null!=(c=t)),null!=s){if(0<(d=0>(d=s.Md)?0:100<d?255:255*d/100)){for(p=g=0;4>p;++p)12>(m=c.pb[p]).lc&&(m.ia=d*Di[0>m.lc?0:m.lc]>>3),g|=m.ia;g&&(alert(\"todo:VP8InitRandom\"),c.ia=1)}c.Ga=s.Id,100<c.Ga?c.Ga=100:0>c.Ga&&(c.Ga=0)}(function(t,n){if(null==t)return 0;if(null==n)return Jt(t,2,\"NULL VP8Io parameter in VP8Decode().\");if(!t.cb&&!Kt(t,n))return 0;if(e(t.cb),null==n.ac||n.ac(n)){n.ob&&(t.L=0);var s=Ri[t.L];if(2==t.L?(t.yb=0,t.zb=0):(t.yb=n.v-s>>4,t.zb=n.j-s>>4,0>t.yb&&(t.yb=0),0>t.zb&&(t.zb=0)),t.Va=n.o+15+s>>4,t.Hb=n.va+15+s>>4,t.Hb>t.za&&(t.Hb=t.za),t.Va>t.Ub&&(t.Va=t.Ub),0<t.L){var u=t.ed;for(s=0;4>s;++s){var c;if(t.Qa.Cb){var l=t.Qa.Lb[s];t.Qa.Fb||(l+=u.Tb)}else l=u.Tb;for(c=0;1>=c;++c){var h=t.gd[s][c],f=l;if(u.Pc&&(f+=u.vd[0],c&&(f+=u.od[0])),0<(f=0>f?0:63<f?63:f)){var d=f;0<u.wb&&(d=4<u.wb?d>>2:d>>1)>9-u.wb&&(d=9-u.wb),1>d&&(d=1),h.dd=d,h.tc=2*f+d,h.ld=40<=f?2:15<=f?1:0}else h.tc=0;h.La=c}}}s=0}else Jt(t,6,\"Frame setup failed\"),s=t.a;if(s=0==s){if(s){t.$c=0,0<t.Aa||(t.Ic=Ti);e:{s=t.Ic,u=4*(d=t.za);var p=32*d,g=d+1,m=0<t.L?d*(0<t.Aa?2:1):0,v=(2==t.Aa?2:1)*d;if((h=u+832+(c=3*(16*s+Ri[t.L])/2*p)+(l=null!=t.Fa&&0<t.Fa.length?t.Kc.c*t.Kc.i:0))!=h)s=0;else{if(h>t.Vb){if(t.Vb=0,t.Ec=a(h),t.Fc=0,null==t.Ec){s=Jt(t,1,\"no memory during frame initialization.\");break e}t.Vb=h}h=t.Ec,f=t.Fc,t.Ac=h,t.Bc=f,f+=u,t.Gd=o(p,Ht),t.Hd=0,t.rb=o(g+1,Dt),t.sb=1,t.wa=m?o(m,Rt):null,t.Y=0,t.D.Nb=0,t.D.wa=t.wa,t.D.Y=t.Y,0<t.Aa&&(t.D.Y+=d),e(!0),t.oc=h,t.pc=f,f+=832,t.ya=o(v,zt),t.aa=0,t.D.ya=t.ya,t.D.aa=t.aa,2==t.Aa&&(t.D.aa+=d),t.R=16*d,t.B=8*d,d=(p=Ri[t.L])*t.R,p=p/2*t.B,t.sa=h,t.ta=f+d,t.qa=t.sa,t.ra=t.ta+16*s*t.R+p,t.Ha=t.qa,t.Ia=t.ra+8*s*t.B+p,t.$c=0,f+=c,t.mb=l?h:null,t.nb=l?f:null,e(f+l<=t.Fc+t.Vb),$t(t),i(t.Ac,t.Bc,0,u),s=1}}if(s){if(n.ka=0,n.y=t.sa,n.O=t.ta,n.f=t.qa,n.N=t.ra,n.ea=t.Ha,n.Vd=t.Ia,n.fa=t.R,n.Rc=t.B,n.F=null,n.J=0,!Ir){for(s=-255;255>=s;++s)_r[255+s]=0>s?-s:s;for(s=-1020;1020>=s;++s)Pr[1020+s]=-128>s?-128:127<s?127:s;for(s=-112;112>=s;++s)kr[112+s]=-16>s?-16:15<s?15:s;for(s=-255;510>=s;++s)Fr[255+s]=0>s?0:255<s?255:s;Ir=1}ir=ue,ar=ie,sr=ae,ur=oe,cr=se,or=re,lr=Ye,hr=Je,fr=Ze,dr=$e,pr=Xe,gr=Ke,mr=Qe,vr=tn,br=ze,yr=Ue,wr=He,Nr=We,hi[0]=xe,hi[1]=le,hi[2]=Ne,hi[3]=Le,hi[4]=Ae,hi[5]=_e,hi[6]=Se,hi[7]=Pe,hi[8]=Fe,hi[9]=ke,li[0]=me,li[1]=fe,li[2]=de,li[3]=pe,li[4]=ve,li[5]=be,li[6]=ye,fi[0]=Oe,fi[1]=he,fi[2]=Ie,fi[3]=je,fi[4]=Me,fi[5]=Be,fi[6]=qe,s=1}else s=0}s&&(s=function(t,n){for(t.M=0;t.M<t.Va;++t.M){var o,s=t.Jc[t.M&t.Xb],u=t.m,c=t;for(o=0;o<c.za;++o){var l=u,h=c,f=h.Ac,d=h.Bc+4*o,p=h.zc,g=h.ya[h.aa+o];if(h.Qa.Bb?g.$b=k(l,h.Pa.jb[0])?2+k(l,h.Pa.jb[2]):k(l,h.Pa.jb[1]):g.$b=0,h.kc&&(g.Ad=k(l,h.Bd)),g.Za=!k(l,145)+0,g.Za){var m=g.Ob,v=0;for(h=0;4>h;++h){var b,y=p[0+h];for(b=0;4>b;++b){y=si[f[d+b]][y];for(var w=ai[k(l,y[0])];0<w;)w=ai[2*w+k(l,y[w])];y=-w,f[d+b]=y}r(m,v,f,d,4),v+=4,p[0+h]=y}}else y=k(l,156)?k(l,128)?1:3:k(l,163)?2:0,g.Ob[0]=y,i(f,d,y,4),i(p,0,y,4);g.Dd=k(l,142)?k(l,114)?k(l,183)?1:3:2:0}if(c.m.Ka)return Jt(t,7,\"Premature end-of-partition0 encountered.\");for(;t.ja<t.za;++t.ja){if(c=s,l=(u=t).rb[u.sb-1],f=u.rb[u.sb+u.ja],o=u.ya[u.aa+u.ja],d=u.kc?o.Ad:0)l.la=f.la=0,o.Za||(l.Na=f.Na=0),o.Hc=0,o.Gc=0,o.ia=0;else{var N,L;if(l=f,f=c,d=u.Pa.Xc,p=u.ya[u.aa+u.ja],g=u.pb[p.$b],h=p.ad,m=0,v=u.rb[u.sb-1],y=b=0,i(h,m,0,384),p.Za)var x=0,A=d[3];else{w=a(16);var S=l.Na+v.Na;if(S=ni(f,d[1],S,g.Eb,0,w,0),l.Na=v.Na=(0<S)+0,1<S)ir(w,0,h,m);else{var _=w[0]+3>>3;for(w=0;256>w;w+=16)h[m+w]=_}x=1,A=d[0]}var P=15&l.la,F=15&v.la;for(w=0;4>w;++w){var I=1&F;for(_=L=0;4>_;++_)P=P>>1|(I=(S=ni(f,A,S=I+(1&P),g.Sc,x,h,m))>x)<<7,L=L<<2|(3<S?3:1<S?2:0!=h[m+0]),m+=16;P>>=4,F=F>>1|I<<7,b=(b<<8|L)>>>0}for(A=P,x=F>>4,N=0;4>N;N+=2){for(L=0,P=l.la>>4+N,F=v.la>>4+N,w=0;2>w;++w){for(I=1&F,_=0;2>_;++_)S=I+(1&P),P=P>>1|(I=0<(S=ni(f,d[2],S,g.Qc,0,h,m)))<<3,L=L<<2|(3<S?3:1<S?2:0!=h[m+0]),m+=16;P>>=2,F=F>>1|I<<5}y|=L<<4*N,A|=P<<4<<N,x|=(240&F)<<N}l.la=A,v.la=x,p.Hc=b,p.Gc=y,p.ia=43690&y?0:g.ia,d=!(b|y)}if(0<u.L&&(u.wa[u.Y+u.ja]=u.gd[o.$b][o.Za],u.wa[u.Y+u.ja].La|=!d),c.Ka)return Jt(t,7,\"Premature end-of-file encountered.\")}if($t(t),u=n,c=1,o=(s=t).D,l=0<s.L&&s.M>=s.zb&&s.M<=s.Va,0==s.Aa)e:{if(o.M=s.M,o.uc=l,On(s,o),c=1,o=(L=s.D).Nb,l=(y=Ri[s.L])*s.R,f=y/2*s.B,w=16*o*s.R,_=8*o*s.B,d=s.sa,p=s.ta-l+w,g=s.qa,h=s.ra-f+_,m=s.Ha,v=s.Ia-f+_,F=0==(P=L.M),b=P>=s.Va-1,2==s.Aa&&On(s,L),L.uc)for(I=(S=s).D.M,e(S.D.uc),L=S.yb;L<S.Hb;++L){x=L,A=I;var j=(C=(z=S).D).Nb;N=z.R;var C=C.wa[C.Y+x],O=z.sa,B=z.ta+16*j*N+16*x,M=C.dd,q=C.tc;if(0!=q)if(e(3<=q),1==z.L)0<x&&yr(O,B,N,q+4),C.La&&Nr(O,B,N,q),0<A&&br(O,B,N,q+4),C.La&&wr(O,B,N,q);else{var E=z.B,R=z.qa,D=z.ra+8*j*E+8*x,T=z.Ha,z=z.Ia+8*j*E+8*x;j=C.ld,0<x&&(hr(O,B,N,q+4,M,j),dr(R,D,T,z,E,q+4,M,j)),C.La&&(gr(O,B,N,q,M,j),vr(R,D,T,z,E,q,M,j)),0<A&&(lr(O,B,N,q+4,M,j),fr(R,D,T,z,E,q+4,M,j)),C.La&&(pr(O,B,N,q,M,j),mr(R,D,T,z,E,q,M,j))}}if(s.ia&&alert(\"todo:DitherRow\"),null!=u.put){if(L=16*P,P=16*(P+1),F?(u.y=s.sa,u.O=s.ta+w,u.f=s.qa,u.N=s.ra+_,u.ea=s.Ha,u.W=s.Ia+_):(L-=y,u.y=d,u.O=p,u.f=g,u.N=h,u.ea=m,u.W=v),b||(P-=y),P>u.o&&(P=u.o),u.F=null,u.J=null,null!=s.Fa&&0<s.Fa.length&&L<P&&(u.J=hn(s,u,L,P-L),u.F=s.mb,null==u.F&&0==u.F.length)){c=Jt(s,3,\"Could not decode alpha data.\");break e}L<u.j&&(y=u.j-L,L=u.j,e(!(1&y)),u.O+=s.R*y,u.N+=s.B*(y>>1),u.W+=s.B*(y>>1),null!=u.F&&(u.J+=u.width*y)),L<P&&(u.O+=u.v,u.N+=u.v>>1,u.W+=u.v>>1,null!=u.F&&(u.J+=u.v),u.ka=L-u.j,u.U=u.va-u.v,u.T=P-L,c=u.put(u))}o+1!=s.Ic||b||(r(s.sa,s.ta-l,d,p+16*s.R,l),r(s.qa,s.ra-f,g,h+8*s.B,f),r(s.Ha,s.Ia-f,m,v+8*s.B,f))}if(!c)return Jt(t,6,\"Output aborted.\")}return 1}(t,n)),null!=n.bc&&n.bc(n),s&=1}return s?(t.cb=0,s):0})(t,u)||(n=t.a)}}else n=t.a}0==n&&null!=h.Oa&&h.Oa.fd&&(n=qn(h.ba))}h=n}l=0!=h?null:11>l?f.f.RGBA.eb:f.f.kb.y}else l=null;return l};var zi=[3,4,3,4,4,2,2,4,4,4,2,1,1]};function c(t,e){for(var n=\"\",r=0;r<4;r++)n+=String.fromCharCode(t[e++]);return n}function l(t,e){return t[e+0]|t[e+1]<<8}function h(t,e){return(t[e+0]|t[e+1]<<8|t[e+2]<<16)>>>0}function f(t,e){return(t[e+0]|t[e+1]<<8|t[e+2]<<16|t[e+3]<<24)>>>0}new u;var d=[0],p=[0],g=[],m=new u,v=t,b=function(t,e){var n={},r=0,i=!1,a=0,o=0;if(n.frames=[],!\n/** @license\n   * Copyright (c) 2017 Dominik Homberger\n  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n  https://webpjs.appspot.com\n  WebPRiffParser dominikhlbg@gmail.com\n  */\nfunction(t,e){for(var n=0;n<4;n++)if(t[e+n]!=\"RIFF\".charCodeAt(n))return!0;return!1}(t,e)){for(f(t,e+=4),e+=8;e<t.length;){var s=c(t,e),u=f(t,e+=4);e+=4;var d=u+(1&u);switch(s){case\"VP8 \":case\"VP8L\":void 0===n.frames[r]&&(n.frames[r]={}),(m=n.frames[r]).src_off=i?o:e-8,m.src_size=a+u+8,r++,i&&(i=!1,a=0,o=0);break;case\"VP8X\":(m=n.header={}).feature_flags=t[e];var p=e+4;m.canvas_width=1+h(t,p),p+=3,m.canvas_height=1+h(t,p),p+=3;break;case\"ALPH\":i=!0,a=d+8,o=e-8;break;case\"ANIM\":(m=n.header).bgcolor=f(t,e),p=e+4,m.loop_count=l(t,p),p+=2;break;case\"ANMF\":var g,m;(m=n.frames[r]={}).offset_x=2*h(t,e),e+=3,m.offset_y=2*h(t,e),e+=3,m.width=1+h(t,e),e+=3,m.height=1+h(t,e),e+=3,m.duration=h(t,e),e+=3,g=t[e++],m.dispose=1&g,m.blend=g>>1&1}\"ANMF\"!=s&&(e+=d)}return n}}(v,0);b.response=v,b.rgbaoutput=!0,b.dataurl=!1;var y=b.header?b.header:null,w=b.frames?b.frames:null;if(y){y.loop_counter=y.loop_count,d=[y.canvas_height],p=[y.canvas_width];for(var N=0;N<w.length&&0!=w[N].blend;N++);}var L=w[0],x=m.WebPDecodeRGBA(v,L.src_off,L.src_size,p,d);L.rgba=x,L.imgwidth=p[0],L.imgheight=d[0];for(var A=0;A<p[0]*d[0]*4;A++)g[A]=x[A];return this.width=p,this.height=d,this.data=g,this}!function(e){var n,r,i,a,s,u,c,l,f,d=function(t){return t=t||{},this.isStrokeTransparent=t.isStrokeTransparent||!1,this.strokeOpacity=t.strokeOpacity||1,this.strokeStyle=t.strokeStyle||\"#000000\",this.fillStyle=t.fillStyle||\"#000000\",this.isFillTransparent=t.isFillTransparent||!1,this.fillOpacity=t.fillOpacity||1,this.font=t.font||\"10px sans-serif\",this.textBaseline=t.textBaseline||\"alphabetic\",this.textAlign=t.textAlign||\"left\",this.lineWidth=t.lineWidth||1,this.lineJoin=t.lineJoin||\"miter\",this.lineCap=t.lineCap||\"butt\",this.path=t.path||[],this.transform=void 0!==t.transform?t.transform.clone():new l,this.globalCompositeOperation=t.globalCompositeOperation||\"normal\",this.globalAlpha=t.globalAlpha||1,this.clip_path=t.clip_path||[],this.currentPoint=t.currentPoint||new u,this.miterLimit=t.miterLimit||10,this.lastPoint=t.lastPoint||new u,this.lineDashOffset=t.lineDashOffset||0,this.lineDash=t.lineDash||[],this.margin=t.margin||[0,0,0,0],this.prevPageLastElemOffset=t.prevPageLastElemOffset||0,this.ignoreClearRect=\"boolean\"!=typeof t.ignoreClearRect||t.ignoreClearRect,this};e.events.push([\"initialized\",function(){this.context2d=new p(this),n=this.internal.f2,r=this.internal.getCoordinateString,i=this.internal.getVerticalCoordinateString,a=this.internal.getHorizontalCoordinate,s=this.internal.getVerticalCoordinate,u=this.internal.Point,c=this.internal.Rectangle,l=this.internal.Matrix,f=new d}]);var p=function(t){Object.defineProperty(this,\"canvas\",{get:function(){return{parentNode:!1,style:!1}}});var e=t;Object.defineProperty(this,\"pdf\",{get:function(){return e}});var n=!1;Object.defineProperty(this,\"pageWrapXEnabled\",{get:function(){return n},set:function(t){n=Boolean(t)}});var r=!1;Object.defineProperty(this,\"pageWrapYEnabled\",{get:function(){return r},set:function(t){r=Boolean(t)}});var i=0;Object.defineProperty(this,\"posX\",{get:function(){return i},set:function(t){isNaN(t)||(i=t)}});var a=0;Object.defineProperty(this,\"posY\",{get:function(){return a},set:function(t){isNaN(t)||(a=t)}}),Object.defineProperty(this,\"margin\",{get:function(){return f.margin},set:function(t){var e;\"number\"==typeof t?e=[t,t,t,t]:((e=new Array(4))[0]=t[0],e[1]=t.length>=2?t[1]:e[0],e[2]=t.length>=3?t[2]:e[0],e[3]=t.length>=4?t[3]:e[1]),f.margin=e}});var o=!1;Object.defineProperty(this,\"autoPaging\",{get:function(){return o},set:function(t){o=t}});var s=0;Object.defineProperty(this,\"lastBreak\",{get:function(){return s},set:function(t){s=t}});var u=[];Object.defineProperty(this,\"pageBreaks\",{get:function(){return u},set:function(t){u=t}}),Object.defineProperty(this,\"ctx\",{get:function(){return f},set:function(t){t instanceof d&&(f=t)}}),Object.defineProperty(this,\"path\",{get:function(){return f.path},set:function(t){f.path=t}});var c=[];Object.defineProperty(this,\"ctxStack\",{get:function(){return c},set:function(t){c=t}}),Object.defineProperty(this,\"fillStyle\",{get:function(){return this.ctx.fillStyle},set:function(t){var e;e=g(t),this.ctx.fillStyle=e.style,this.ctx.isFillTransparent=0===e.a,this.ctx.fillOpacity=e.a,this.pdf.setFillColor(e.r,e.g,e.b,{a:e.a}),this.pdf.setTextColor(e.r,e.g,e.b,{a:e.a})}}),Object.defineProperty(this,\"strokeStyle\",{get:function(){return this.ctx.strokeStyle},set:function(t){var e=g(t);this.ctx.strokeStyle=e.style,this.ctx.isStrokeTransparent=0===e.a,this.ctx.strokeOpacity=e.a,0===e.a?this.pdf.setDrawColor(255,255,255):(e.a,this.pdf.setDrawColor(e.r,e.g,e.b))}}),Object.defineProperty(this,\"lineCap\",{get:function(){return this.ctx.lineCap},set:function(t){-1!==[\"butt\",\"round\",\"square\"].indexOf(t)&&(this.ctx.lineCap=t,this.pdf.setLineCap(t))}}),Object.defineProperty(this,\"lineWidth\",{get:function(){return this.ctx.lineWidth},set:function(t){isNaN(t)||(this.ctx.lineWidth=t,this.pdf.setLineWidth(t))}}),Object.defineProperty(this,\"lineJoin\",{get:function(){return this.ctx.lineJoin},set:function(t){-1!==[\"bevel\",\"round\",\"miter\"].indexOf(t)&&(this.ctx.lineJoin=t,this.pdf.setLineJoin(t))}}),Object.defineProperty(this,\"miterLimit\",{get:function(){return this.ctx.miterLimit},set:function(t){isNaN(t)||(this.ctx.miterLimit=t,this.pdf.setMiterLimit(t))}}),Object.defineProperty(this,\"textBaseline\",{get:function(){return this.ctx.textBaseline},set:function(t){this.ctx.textBaseline=t}}),Object.defineProperty(this,\"textAlign\",{get:function(){return this.ctx.textAlign},set:function(t){-1!==[\"right\",\"end\",\"center\",\"left\",\"start\"].indexOf(t)&&(this.ctx.textAlign=t)}});var l=null;var h=null;Object.defineProperty(this,\"fontFaces\",{get:function(){return h},set:function(t){l=null,h=t}}),Object.defineProperty(this,\"font\",{get:function(){return this.ctx.font},set:function(t){var e;if(this.ctx.font=t,null!==(e=/^\\s*(?=(?:(?:[-a-z]+\\s*){0,2}(italic|oblique))?)(?=(?:(?:[-a-z]+\\s*){0,2}(small-caps))?)(?=(?:(?:[-a-z]+\\s*){0,2}(bold(?:er)?|lighter|[1-9]00))?)(?:(?:normal|\\1|\\2|\\3)\\s*){0,3}((?:xx?-)?(?:small|large)|medium|smaller|larger|[.\\d]+(?:\\%|in|[cem]m|ex|p[ctx]))(?:\\s*\\/\\s*(normal|[.\\d]+(?:\\%|in|[cem]m|ex|p[ctx])))?\\s*([-_,\\\"\\'\\sa-z]+?)\\s*$/i.exec(t))){var n=e[1];e[2];var r=e[3],i=e[4];e[5];var a=e[6],o=/^([.\\d]+)((?:%|in|[cem]m|ex|p[ctx]))$/i.exec(i)[2];i=\"px\"===o?Math.floor(parseFloat(i)*this.pdf.internal.scaleFactor):\"em\"===o?Math.floor(parseFloat(i)*this.pdf.getFontSize()):Math.floor(parseFloat(i)*this.pdf.internal.scaleFactor),this.pdf.setFontSize(i);var s=function(t){var e,n,r=[],i=t.trim();if(\"\"===i)return Jt;if(i in Mt)return[Mt[i]];for(;\"\"!==i;){switch(n=null,e=(i=Et(i)).charAt(0)){case'\"':case\"'\":n=Rt(i.substring(1),e);break;default:n=Dt(i)}if(null===n)return Jt;if(r.push(n[0]),\"\"!==(i=Et(n[1]))&&\",\"!==i.charAt(0))return Jt;i=i.replace(/^,/,\"\")}return r}(a);if(this.fontFaces){var u=function(t,e){if(null===l){var n=function(t){var e=[];return Object.keys(t).forEach(function(n){t[n].forEach(function(t){var r=null;switch(t){case\"bold\":r={family:n,weight:\"bold\"};break;case\"italic\":r={family:n,style:\"italic\"};break;case\"bolditalic\":r={family:n,weight:\"bold\",style:\"italic\"};break;case\"\":case\"normal\":r={family:n}}null!==r&&(r.ref={name:n,style:t},e.push(r))})}),e}(t.getFontList());l=function(t){for(var e={},n=0;n<t.length;++n){var r=Ct(t[n]),i=r.family,a=r.stretch,o=r.style,s=r.weight;e[i]=e[i]||{},e[i][a]=e[i][a]||{},e[i][a][o]=e[i][a][o]||{},e[i][a][o][s]=r}return e}(n.concat(e))}return l}(this.pdf,this.fontFaces),c=s.map(function(t){return{family:t,stretch:\"normal\",weight:r,style:n}}),h=function(t,e,n){for(var r=(n=n||{}).defaultFontFamily||\"times\",i=Object.assign({},Bt,n.genericFontFamilies||{}),a=null,o=null,s=0;s<e.length;++s)if(i[(a=Ct(e[s])).family]&&(a.family=i[a.family]),t.hasOwnProperty(a.family)){o=t[a.family];break}if(!(o=o||t[r]))throw new Error(\"Could not find a font-family for the rule '\"+qt(a)+\"' and default family '\"+r+\"'.\");if(o=function(t,e){if(e[t])return e[t];var n=Ft[t],r=n<=Ft.normal?-1:1,i=Ot(e,kt,n,r);if(!i)throw new Error(\"Could not find a matching font-stretch value for \"+t);return i}(a.stretch,o),o=function(t,e){if(e[t])return e[t];for(var n=Pt[t],r=0;r<n.length;++r)if(e[n[r]])return e[n[r]];throw new Error(\"Could not find a matching font-style for \"+t)}(a.style,o),!(o=function(t,e){if(e[t])return e[t];if(400===t&&e[500])return e[500];if(500===t&&e[400])return e[400];var n=jt[t],r=Ot(e,It,n,t<400?-1:1);if(!r)throw new Error(\"Could not find a matching font-weight for value \"+t);return r}(a.weight,o)))throw new Error(\"Failed to resolve a font for the rule '\"+qt(a)+\"'.\");return o}(u,c);this.pdf.setFont(h.ref.name,h.ref.style)}else{var f=\"\";(\"bold\"===r||parseInt(r,10)>=700||\"bold\"===n)&&(f=\"bold\"),\"italic\"===n&&(f+=\"italic\"),0===f.length&&(f=\"normal\");for(var d=\"\",p={arial:\"Helvetica\",Arial:\"Helvetica\",verdana:\"Helvetica\",Verdana:\"Helvetica\",helvetica:\"Helvetica\",Helvetica:\"Helvetica\",\"sans-serif\":\"Helvetica\",fixed:\"Courier\",monospace:\"Courier\",terminal:\"Courier\",cursive:\"Times\",fantasy:\"Times\",serif:\"Times\"},g=0;g<s.length;g++){if(void 0!==this.pdf.internal.getFont(s[g],f,{noFallback:!0,disableWarning:!0})){d=s[g];break}if(\"bolditalic\"===f&&void 0!==this.pdf.internal.getFont(s[g],\"bold\",{noFallback:!0,disableWarning:!0}))d=s[g],f=\"bold\";else if(void 0!==this.pdf.internal.getFont(s[g],\"normal\",{noFallback:!0,disableWarning:!0})){d=s[g],f=\"normal\";break}}if(\"\"===d)for(var m=0;m<s.length;m++)if(p[s[m]]){d=p[s[m]];break}d=\"\"===d?\"Times\":d,this.pdf.setFont(d,f)}}}}),Object.defineProperty(this,\"globalCompositeOperation\",{get:function(){return this.ctx.globalCompositeOperation},set:function(t){this.ctx.globalCompositeOperation=t}}),Object.defineProperty(this,\"globalAlpha\",{get:function(){return this.ctx.globalAlpha},set:function(t){this.ctx.globalAlpha=t}}),Object.defineProperty(this,\"lineDashOffset\",{get:function(){return this.ctx.lineDashOffset},set:function(t){this.ctx.lineDashOffset=t,T.call(this)}}),Object.defineProperty(this,\"lineDash\",{get:function(){return this.ctx.lineDash},set:function(t){this.ctx.lineDash=t,T.call(this)}}),Object.defineProperty(this,\"ignoreClearRect\",{get:function(){return this.ctx.ignoreClearRect},set:function(t){this.ctx.ignoreClearRect=Boolean(t)}})};p.prototype.setLineDash=function(t){this.lineDash=t},p.prototype.getLineDash=function(){return this.lineDash.length%2?this.lineDash.concat(this.lineDash):this.lineDash.slice()},p.prototype.fill=function(){x.call(this,\"fill\",!1)},p.prototype.stroke=function(){x.call(this,\"stroke\",!1)},p.prototype.beginPath=function(){this.path=[{type:\"begin\"}]},p.prototype.moveTo=function(t,e){if(isNaN(t)||isNaN(e))throw o.error(\"jsPDF.context2d.moveTo: Invalid arguments\",arguments),new Error(\"Invalid arguments passed to jsPDF.context2d.moveTo\");var n=this.ctx.transform.applyToPoint(new u(t,e));this.path.push({type:\"mt\",x:n.x,y:n.y}),this.ctx.lastPoint=new u(t,e)},p.prototype.closePath=function(){var e=new u(0,0),n=0;for(n=this.path.length-1;-1!==n;n--)if(\"begin\"===this.path[n].type&&\"object\"===t(this.path[n+1])&&\"number\"==typeof this.path[n+1].x){e=new u(this.path[n+1].x,this.path[n+1].y);break}this.path.push({type:\"close\"}),this.ctx.lastPoint=new u(e.x,e.y)},p.prototype.lineTo=function(t,e){if(isNaN(t)||isNaN(e))throw o.error(\"jsPDF.context2d.lineTo: Invalid arguments\",arguments),new Error(\"Invalid arguments passed to jsPDF.context2d.lineTo\");var n=this.ctx.transform.applyToPoint(new u(t,e));this.path.push({type:\"lt\",x:n.x,y:n.y}),this.ctx.lastPoint=new u(n.x,n.y)},p.prototype.clip=function(){this.ctx.clip_path=JSON.parse(JSON.stringify(this.path)),x.call(this,null,!0)},p.prototype.quadraticCurveTo=function(t,e,n,r){if(isNaN(n)||isNaN(r)||isNaN(t)||isNaN(e))throw o.error(\"jsPDF.context2d.quadraticCurveTo: Invalid arguments\",arguments),new Error(\"Invalid arguments passed to jsPDF.context2d.quadraticCurveTo\");var i=this.ctx.transform.applyToPoint(new u(n,r)),a=this.ctx.transform.applyToPoint(new u(t,e));this.path.push({type:\"qct\",x1:a.x,y1:a.y,x:i.x,y:i.y}),this.ctx.lastPoint=new u(i.x,i.y)},p.prototype.bezierCurveTo=function(t,e,n,r,i,a){if(isNaN(i)||isNaN(a)||isNaN(t)||isNaN(e)||isNaN(n)||isNaN(r))throw o.error(\"jsPDF.context2d.bezierCurveTo: Invalid arguments\",arguments),new Error(\"Invalid arguments passed to jsPDF.context2d.bezierCurveTo\");var s=this.ctx.transform.applyToPoint(new u(i,a)),c=this.ctx.transform.applyToPoint(new u(t,e)),l=this.ctx.transform.applyToPoint(new u(n,r));this.path.push({type:\"bct\",x1:c.x,y1:c.y,x2:l.x,y2:l.y,x:s.x,y:s.y}),this.ctx.lastPoint=new u(s.x,s.y)},p.prototype.arc=function(t,e,n,r,i,a){if(isNaN(t)||isNaN(e)||isNaN(n)||isNaN(r)||isNaN(i))throw o.error(\"jsPDF.context2d.arc: Invalid arguments\",arguments),new Error(\"Invalid arguments passed to jsPDF.context2d.arc\");if(a=Boolean(a),!this.ctx.transform.isIdentity){var s=this.ctx.transform.applyToPoint(new u(t,e));t=s.x,e=s.y;var c=this.ctx.transform.applyToPoint(new u(0,n)),l=this.ctx.transform.applyToPoint(new u(0,0));n=Math.sqrt(Math.pow(c.x-l.x,2)+Math.pow(c.y-l.y,2))}Math.abs(i-r)>=2*Math.PI&&(r=0,i=2*Math.PI),this.path.push({type:\"arc\",x:t,y:e,radius:n,startAngle:r,endAngle:i,counterclockwise:a})},p.prototype.arcTo=function(t,e,n,r,i){throw new Error(\"arcTo not implemented.\")},p.prototype.rect=function(t,e,n,r){if(isNaN(t)||isNaN(e)||isNaN(n)||isNaN(r))throw o.error(\"jsPDF.context2d.rect: Invalid arguments\",arguments),new Error(\"Invalid arguments passed to jsPDF.context2d.rect\");this.moveTo(t,e),this.lineTo(t+n,e),this.lineTo(t+n,e+r),this.lineTo(t,e+r),this.lineTo(t,e),this.lineTo(t+n,e),this.lineTo(t,e)},p.prototype.fillRect=function(t,e,n,r){if(isNaN(t)||isNaN(e)||isNaN(n)||isNaN(r))throw o.error(\"jsPDF.context2d.fillRect: Invalid arguments\",arguments),new Error(\"Invalid arguments passed to jsPDF.context2d.fillRect\");if(!m.call(this)){var i={};\"butt\"!==this.lineCap&&(i.lineCap=this.lineCap,this.lineCap=\"butt\"),\"miter\"!==this.lineJoin&&(i.lineJoin=this.lineJoin,this.lineJoin=\"miter\"),this.beginPath(),this.rect(t,e,n,r),this.fill(),i.hasOwnProperty(\"lineCap\")&&(this.lineCap=i.lineCap),i.hasOwnProperty(\"lineJoin\")&&(this.lineJoin=i.lineJoin)}},p.prototype.strokeRect=function(t,e,n,r){if(isNaN(t)||isNaN(e)||isNaN(n)||isNaN(r))throw o.error(\"jsPDF.context2d.strokeRect: Invalid arguments\",arguments),new Error(\"Invalid arguments passed to jsPDF.context2d.strokeRect\");v.call(this)||(this.beginPath(),this.rect(t,e,n,r),this.stroke())},p.prototype.clearRect=function(t,e,n,r){if(isNaN(t)||isNaN(e)||isNaN(n)||isNaN(r))throw o.error(\"jsPDF.context2d.clearRect: Invalid arguments\",arguments),new Error(\"Invalid arguments passed to jsPDF.context2d.clearRect\");this.ignoreClearRect||(this.fillStyle=\"#ffffff\",this.fillRect(t,e,n,r))},p.prototype.save=function(t){t=\"boolean\"!=typeof t||t;for(var e=this.pdf.internal.getCurrentPageInfo().pageNumber,n=0;n<this.pdf.internal.getNumberOfPages();n++)this.pdf.setPage(n+1),this.pdf.internal.out(\"q\");if(this.pdf.setPage(e),t){this.ctx.fontSize=this.pdf.internal.getFontSize();var r=new d(this.ctx);this.ctxStack.push(this.ctx),this.ctx=r}},p.prototype.restore=function(t){t=\"boolean\"!=typeof t||t;for(var e=this.pdf.internal.getCurrentPageInfo().pageNumber,n=0;n<this.pdf.internal.getNumberOfPages();n++)this.pdf.setPage(n+1),this.pdf.internal.out(\"Q\");this.pdf.setPage(e),t&&0!==this.ctxStack.length&&(this.ctx=this.ctxStack.pop(),this.fillStyle=this.ctx.fillStyle,this.strokeStyle=this.ctx.strokeStyle,this.font=this.ctx.font,this.lineCap=this.ctx.lineCap,this.lineWidth=this.ctx.lineWidth,this.lineJoin=this.ctx.lineJoin,this.lineDash=this.ctx.lineDash,this.lineDashOffset=this.ctx.lineDashOffset)},p.prototype.toDataURL=function(){throw new Error(\"toDataUrl not implemented.\")};var g=function(t){var e,n,r,i;if(!0===t.isCanvasGradient&&(t=t.getColor()),!t)return{r:0,g:0,b:0,a:0,style:t};if(/transparent|rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*0+\\s*\\)/.test(t))e=0,n=0,r=0,i=0;else{var a=/rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)/.exec(t);if(null!==a)e=parseInt(a[1]),n=parseInt(a[2]),r=parseInt(a[3]),i=1;else if(null!==(a=/rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*([\\d.]+)\\s*\\)/.exec(t)))e=parseInt(a[1]),n=parseInt(a[2]),r=parseInt(a[3]),i=parseFloat(a[4]);else{if(i=1,\"string\"==typeof t&&\"#\"!==t.charAt(0)){var o=new h(t);t=o.ok?o.toHex():\"#000000\"}4===t.length?(e=t.substring(1,2),e+=e,n=t.substring(2,3),n+=n,r=t.substring(3,4),r+=r):(e=t.substring(1,3),n=t.substring(3,5),r=t.substring(5,7)),e=parseInt(e,16),n=parseInt(n,16),r=parseInt(r,16)}}return{r:e,g:n,b:r,a:i,style:t}},m=function(){return this.ctx.isFillTransparent||0==this.globalAlpha},v=function(){return Boolean(this.ctx.isStrokeTransparent||0==this.globalAlpha)};p.prototype.fillText=function(t,e,n,r){if(isNaN(e)||isNaN(n)||\"string\"!=typeof t)throw o.error(\"jsPDF.context2d.fillText: Invalid arguments\",arguments),new Error(\"Invalid arguments passed to jsPDF.context2d.fillText\");if(r=isNaN(r)?void 0:r,!m.call(this)){var i=E(this.ctx.transform.rotation),a=this.ctx.transform.scaleX;j.call(this,{text:t,x:e,y:n,scale:a,angle:i,align:this.textAlign,maxWidth:r})}},p.prototype.strokeText=function(t,e,n,r){if(isNaN(e)||isNaN(n)||\"string\"!=typeof t)throw o.error(\"jsPDF.context2d.strokeText: Invalid arguments\",arguments),new Error(\"Invalid arguments passed to jsPDF.context2d.strokeText\");if(!v.call(this)){r=isNaN(r)?void 0:r;var i=E(this.ctx.transform.rotation),a=this.ctx.transform.scaleX;j.call(this,{text:t,x:e,y:n,scale:a,renderingMode:\"stroke\",angle:i,align:this.textAlign,maxWidth:r})}},p.prototype.measureText=function(t){if(\"string\"!=typeof t)throw o.error(\"jsPDF.context2d.measureText: Invalid arguments\",arguments),new Error(\"Invalid arguments passed to jsPDF.context2d.measureText\");var e=this.pdf,n=this.pdf.internal.scaleFactor,r=e.internal.getFontSize(),i=e.getStringUnitWidth(t)*r/e.internal.scaleFactor;return new function(t){var e=(t=t||{}).width||0;return Object.defineProperty(this,\"width\",{get:function(){return e}}),this}({width:i*=Math.round(96*n/72*1e4)/1e4})},p.prototype.scale=function(t,e){if(isNaN(t)||isNaN(e))throw o.error(\"jsPDF.context2d.scale: Invalid arguments\",arguments),new Error(\"Invalid arguments passed to jsPDF.context2d.scale\");var n=new l(t,0,0,e,0,0);this.ctx.transform=this.ctx.transform.multiply(n)},p.prototype.rotate=function(t){if(isNaN(t))throw o.error(\"jsPDF.context2d.rotate: Invalid arguments\",arguments),new Error(\"Invalid arguments passed to jsPDF.context2d.rotate\");var e=new l(Math.cos(t),Math.sin(t),-Math.sin(t),Math.cos(t),0,0);this.ctx.transform=this.ctx.transform.multiply(e)},p.prototype.translate=function(t,e){if(isNaN(t)||isNaN(e))throw o.error(\"jsPDF.context2d.translate: Invalid arguments\",arguments),new Error(\"Invalid arguments passed to jsPDF.context2d.translate\");var n=new l(1,0,0,1,t,e);this.ctx.transform=this.ctx.transform.multiply(n)},p.prototype.transform=function(t,e,n,r,i,a){if(isNaN(t)||isNaN(e)||isNaN(n)||isNaN(r)||isNaN(i)||isNaN(a))throw o.error(\"jsPDF.context2d.transform: Invalid arguments\",arguments),new Error(\"Invalid arguments passed to jsPDF.context2d.transform\");var s=new l(t,e,n,r,i,a);this.ctx.transform=this.ctx.transform.multiply(s)},p.prototype.setTransform=function(t,e,n,r,i,a){t=isNaN(t)?1:t,e=isNaN(e)?0:e,n=isNaN(n)?0:n,r=isNaN(r)?1:r,i=isNaN(i)?0:i,a=isNaN(a)?0:a,this.ctx.transform=new l(t,e,n,r,i,a)};var b=function(){return this.margin[0]>0||this.margin[1]>0||this.margin[2]>0||this.margin[3]>0};p.prototype.drawImage=function(t,e,n,r,i,a,o,s,u){var h=this.pdf.getImageProperties(t),f=1,d=1,p=1,g=1;void 0!==r&&void 0!==s&&(p=s/r,g=u/i,f=h.width/r*s/r,d=h.height/i*u/i),void 0===a&&(a=e,o=n,e=0,n=0),void 0!==r&&void 0===s&&(s=r,u=i),void 0===r&&void 0===s&&(s=h.width,u=h.height);for(var m,v=this.ctx.transform.decompose(),w=E(v.rotate.shx),x=new l,S=(x=(x=(x=x.multiply(v.translate)).multiply(v.skew)).multiply(v.scale)).applyToRectangle(new c(a-e*p,o-n*g,r*f,i*d)),_=y.call(this,S),P=[],k=0;k<_.length;k+=1)-1===P.indexOf(_[k])&&P.push(_[k]);if(L(P),this.autoPaging)for(var F=P[0],I=P[P.length-1],j=F;j<I+1;j++){this.pdf.setPage(j);var C=this.pdf.internal.pageSize.width-this.margin[3]-this.margin[1],O=1===j?this.posY+this.margin[0]:this.margin[0],B=this.pdf.internal.pageSize.height-this.posY-this.margin[0]-this.margin[2],M=this.pdf.internal.pageSize.height-this.margin[0]-this.margin[2],q=1===j?0:B+(j-2)*M;if(0!==this.ctx.clip_path.length){var R=this.path;m=JSON.parse(JSON.stringify(this.ctx.clip_path)),this.path=N(m,this.posX+this.margin[3],-q+O+this.ctx.prevPageLastElemOffset),A.call(this,\"fill\",!0),this.path=R}var D=JSON.parse(JSON.stringify(S));D=N([D],this.posX+this.margin[3],-q+O+this.ctx.prevPageLastElemOffset)[0];var T=(j>F||j<I)&&b.call(this);T&&(this.pdf.saveGraphicsState(),this.pdf.rect(this.margin[3],this.margin[0],C,M,null).clip().discardPath()),this.pdf.addImage(t,\"JPEG\",D.x,D.y,D.w,D.h,null,null,w),T&&this.pdf.restoreGraphicsState()}else this.pdf.addImage(t,\"JPEG\",S.x,S.y,S.w,S.h,null,null,w)};var y=function(t,e,n){var r=[];e=e||this.pdf.internal.pageSize.width,n=n||this.pdf.internal.pageSize.height-this.margin[0]-this.margin[2];var i=this.posY+this.ctx.prevPageLastElemOffset;switch(t.type){default:case\"mt\":case\"lt\":r.push(Math.floor((t.y+i)/n)+1);break;case\"arc\":r.push(Math.floor((t.y+i-t.radius)/n)+1),r.push(Math.floor((t.y+i+t.radius)/n)+1);break;case\"qct\":var a=R(this.ctx.lastPoint.x,this.ctx.lastPoint.y,t.x1,t.y1,t.x,t.y);r.push(Math.floor((a.y+i)/n)+1),r.push(Math.floor((a.y+a.h+i)/n)+1);break;case\"bct\":var o=D(this.ctx.lastPoint.x,this.ctx.lastPoint.y,t.x1,t.y1,t.x2,t.y2,t.x,t.y);r.push(Math.floor((o.y+i)/n)+1),r.push(Math.floor((o.y+o.h+i)/n)+1);break;case\"rect\":r.push(Math.floor((t.y+i)/n)+1),r.push(Math.floor((t.y+t.h+i)/n)+1)}for(var s=0;s<r.length;s+=1)for(;this.pdf.internal.getNumberOfPages()<r[s];)w.call(this);return r},w=function(){var t=this.fillStyle,e=this.strokeStyle,n=this.font,r=this.lineCap,i=this.lineWidth,a=this.lineJoin;this.pdf.addPage(),this.fillStyle=t,this.strokeStyle=e,this.font=n,this.lineCap=r,this.lineWidth=i,this.lineJoin=a},N=function(t,e,n){for(var r=0;r<t.length;r++)switch(t[r].type){case\"bct\":t[r].x2+=e,t[r].y2+=n;case\"qct\":t[r].x1+=e,t[r].y1+=n;default:t[r].x+=e,t[r].y+=n}return t},L=function(t){return t.sort(function(t,e){return t-e})},x=function(t,e){for(var n,r,i=this.fillStyle,a=this.strokeStyle,o=this.lineCap,s=this.lineWidth,u=Math.abs(s*this.ctx.transform.scaleX),c=this.lineJoin,l=JSON.parse(JSON.stringify(this.path)),h=JSON.parse(JSON.stringify(this.path)),f=[],d=0;d<h.length;d++)if(void 0!==h[d].x)for(var p=y.call(this,h[d]),g=0;g<p.length;g+=1)-1===f.indexOf(p[g])&&f.push(p[g]);for(var m=0;m<f.length;m++)for(;this.pdf.internal.getNumberOfPages()<f[m];)w.call(this);if(L(f),this.autoPaging)for(var v=f[0],x=f[f.length-1],S=v;S<x+1;S++){this.pdf.setPage(S),this.fillStyle=i,this.strokeStyle=a,this.lineCap=o,this.lineWidth=u,this.lineJoin=c;var _=this.pdf.internal.pageSize.width-this.margin[3]-this.margin[1],P=1===S?this.posY+this.margin[0]:this.margin[0],k=this.pdf.internal.pageSize.height-this.posY-this.margin[0]-this.margin[2],F=this.pdf.internal.pageSize.height-this.margin[0]-this.margin[2],I=1===S?0:k+(S-2)*F;if(0!==this.ctx.clip_path.length){var j=this.path;n=JSON.parse(JSON.stringify(this.ctx.clip_path)),this.path=N(n,this.posX+this.margin[3],-I+P+this.ctx.prevPageLastElemOffset),A.call(this,t,!0),this.path=j}if(r=JSON.parse(JSON.stringify(l)),this.path=N(r,this.posX+this.margin[3],-I+P+this.ctx.prevPageLastElemOffset),!1===e||0===S){var C=(S>v||S<x)&&b.call(this);C&&(this.pdf.saveGraphicsState(),this.pdf.rect(this.margin[3],this.margin[0],_,F,null).clip().discardPath()),A.call(this,t,e),C&&this.pdf.restoreGraphicsState()}this.lineWidth=s}else this.lineWidth=u,A.call(this,t,e),this.lineWidth=s;this.path=l},A=function(t,e){if((\"stroke\"!==t||e||!v.call(this))&&(\"stroke\"===t||e||!m.call(this))){for(var n,r,i=[],a=this.path,o=0;o<a.length;o++){var s=a[o];switch(s.type){case\"begin\":i.push({begin:!0});break;case\"close\":i.push({close:!0});break;case\"mt\":i.push({start:s,deltas:[],abs:[]});break;case\"lt\":var u=i.length;if(a[o-1]&&!isNaN(a[o-1].x)&&(n=[s.x-a[o-1].x,s.y-a[o-1].y],u>0))for(;u>=0;u--)if(!0!==i[u-1].close&&!0!==i[u-1].begin){i[u-1].deltas.push(n),i[u-1].abs.push(s);break}break;case\"bct\":n=[s.x1-a[o-1].x,s.y1-a[o-1].y,s.x2-a[o-1].x,s.y2-a[o-1].y,s.x-a[o-1].x,s.y-a[o-1].y],i[i.length-1].deltas.push(n);break;case\"qct\":var c=a[o-1].x+2/3*(s.x1-a[o-1].x),l=a[o-1].y+2/3*(s.y1-a[o-1].y),h=s.x+2/3*(s.x1-s.x),f=s.y+2/3*(s.y1-s.y),d=s.x,p=s.y;n=[c-a[o-1].x,l-a[o-1].y,h-a[o-1].x,f-a[o-1].y,d-a[o-1].x,p-a[o-1].y],i[i.length-1].deltas.push(n);break;case\"arc\":i.push({deltas:[],abs:[],arc:!0}),Array.isArray(i[i.length-1].abs)&&i[i.length-1].abs.push(s)}}r=e?null:\"stroke\"===t?\"stroke\":\"fill\";for(var g=!1,b=0;b<i.length;b++)if(i[b].arc)for(var y=i[b].abs,w=0;w<y.length;w++){var N=y[w];\"arc\"===N.type?P.call(this,N.x,N.y,N.radius,N.startAngle,N.endAngle,N.counterclockwise,void 0,e,!g):C.call(this,N.x,N.y),g=!0}else if(!0===i[b].close)this.pdf.internal.out(\"h\"),g=!1;else if(!0!==i[b].begin){var L=i[b].start.x,x=i[b].start.y;O.call(this,i[b].deltas,L,x),g=!0}r&&k.call(this,r),e&&F.call(this)}},S=function(t){var e=this.pdf.internal.getFontSize()/this.pdf.internal.scaleFactor,n=e*(this.pdf.internal.getLineHeightFactor()-1);switch(this.ctx.textBaseline){case\"bottom\":return t-n;case\"top\":return t+e-n;case\"hanging\":return t+e-2*n;case\"middle\":return t+e/2-n;default:return t}},_=function(t){return t+this.pdf.internal.getFontSize()/this.pdf.internal.scaleFactor*(this.pdf.internal.getLineHeightFactor()-1)};p.prototype.createLinearGradient=function(){var t=function(){};return t.colorStops=[],t.addColorStop=function(t,e){this.colorStops.push([t,e])},t.getColor=function(){return 0===this.colorStops.length?\"#000000\":this.colorStops[0][1]},t.isCanvasGradient=!0,t},p.prototype.createPattern=function(){return this.createLinearGradient()},p.prototype.createRadialGradient=function(){return this.createLinearGradient()};var P=function(t,e,n,r,i,a,o,s,u){for(var c=M.call(this,n,r,i,a),l=0;l<c.length;l++){var h=c[l];0===l&&(u?I.call(this,h.x1+t,h.y1+e):C.call(this,h.x1+t,h.y1+e)),B.call(this,t,e,h.x2,h.y2,h.x3,h.y3,h.x4,h.y4)}s?F.call(this):k.call(this,o)},k=function(t){switch(t){case\"stroke\":this.pdf.internal.out(\"S\");break;case\"fill\":this.pdf.internal.out(\"f\")}},F=function(){this.pdf.clip(),this.pdf.discardPath()},I=function(t,e){this.pdf.internal.out(r(t)+\" \"+i(e)+\" m\")},j=function(t){var e;switch(t.align){case\"right\":case\"end\":e=\"right\";break;case\"center\":e=\"center\";break;default:e=\"left\"}var n=this.pdf.getTextDimensions(t.text),r=S.call(this,t.y),i=_.call(this,r)-n.h,a=this.ctx.transform.applyToPoint(new u(t.x,r)),o=this.ctx.transform.decompose(),s=new l;s=(s=(s=s.multiply(o.translate)).multiply(o.skew)).multiply(o.scale);for(var h,f,d,p=this.ctx.transform.applyToRectangle(new c(t.x,r,n.w,n.h)),g=s.applyToRectangle(new c(t.x,i,n.w,n.h)),m=y.call(this,g),v=[],w=0;w<m.length;w+=1)-1===v.indexOf(m[w])&&v.push(m[w]);if(L(v),this.autoPaging)for(var x=v[0],P=v[v.length-1],k=x;k<P+1;k++){this.pdf.setPage(k);var F=1===k?this.posY+this.margin[0]:this.margin[0],I=this.pdf.internal.pageSize.height-this.posY-this.margin[0]-this.margin[2],j=this.pdf.internal.pageSize.height-this.margin[2],C=j-this.margin[0],O=this.pdf.internal.pageSize.width-this.margin[1],B=O-this.margin[3],M=1===k?0:I+(k-2)*C;if(0!==this.ctx.clip_path.length){var q=this.path;h=JSON.parse(JSON.stringify(this.ctx.clip_path)),this.path=N(h,this.posX+this.margin[3],-1*M+F),A.call(this,\"fill\",!0),this.path=q}var E=N([JSON.parse(JSON.stringify(g))],this.posX+this.margin[3],-M+F+this.ctx.prevPageLastElemOffset)[0];t.scale>=.01&&(f=this.pdf.internal.getFontSize(),this.pdf.setFontSize(f*t.scale),d=this.lineWidth,this.lineWidth=d*t.scale);var R=\"text\"!==this.autoPaging;if(R||E.y+E.h<=j){if(R||E.y>=F&&E.x<=O){var D=R?t.text:this.pdf.splitTextToSize(t.text,t.maxWidth||O-E.x)[0],T=N([JSON.parse(JSON.stringify(p))],this.posX+this.margin[3],-M+F+this.ctx.prevPageLastElemOffset)[0],z=R&&(k>x||k<P)&&b.call(this);z&&(this.pdf.saveGraphicsState(),this.pdf.rect(this.margin[3],this.margin[0],B,C,null).clip().discardPath()),this.pdf.text(D,T.x,T.y,{angle:t.angle,align:e,renderingMode:t.renderingMode}),z&&this.pdf.restoreGraphicsState()}}else E.y<j&&(this.ctx.prevPageLastElemOffset+=j-E.y);t.scale>=.01&&(this.pdf.setFontSize(f),this.lineWidth=d)}else t.scale>=.01&&(f=this.pdf.internal.getFontSize(),this.pdf.setFontSize(f*t.scale),d=this.lineWidth,this.lineWidth=d*t.scale),this.pdf.text(t.text,a.x+this.posX,a.y+this.posY,{angle:t.angle,align:e,renderingMode:t.renderingMode,maxWidth:t.maxWidth}),t.scale>=.01&&(this.pdf.setFontSize(f),this.lineWidth=d)},C=function(t,e,n,a){n=n||0,a=a||0,this.pdf.internal.out(r(t+n)+\" \"+i(e+a)+\" l\")},O=function(t,e,n){return this.pdf.lines(t,e,n,null,null)},B=function(t,e,r,i,o,u,c,l){this.pdf.internal.out([n(a(r+t)),n(s(i+e)),n(a(o+t)),n(s(u+e)),n(a(c+t)),n(s(l+e)),\"c\"].join(\" \"))},M=function(t,e,n,r){for(var i=2*Math.PI,a=Math.PI/2;e>n;)e-=i;var o=Math.abs(n-e);o<i&&r&&(o=i-o);for(var s=[],u=r?-1:1,c=e;o>1e-5;){var l=c+u*Math.min(o,a);s.push(q.call(this,t,c,l)),o-=Math.abs(l-c),c=l}return s},q=function(t,e,n){var r=(n-e)/2,i=t*Math.cos(r),a=t*Math.sin(r),o=i,s=-a,u=o*o+s*s,c=u+o*i+s*a,l=4/3*(Math.sqrt(2*u*c)-c)/(o*a-s*i),h=o-l*s,f=s+l*o,d=h,p=-f,g=r+e,m=Math.cos(g),v=Math.sin(g);return{x1:t*Math.cos(e),y1:t*Math.sin(e),x2:h*m-f*v,y2:h*v+f*m,x3:d*m-p*v,y3:d*v+p*m,x4:t*Math.cos(n),y4:t*Math.sin(n)}},E=function(t){return 180*t/Math.PI},R=function(t,e,n,r,i,a){var o=t+.5*(n-t),s=e+.5*(r-e),u=i+.5*(n-i),l=a+.5*(r-a),h=Math.min(t,i,o,u),f=Math.max(t,i,o,u),d=Math.min(e,a,s,l),p=Math.max(e,a,s,l);return new c(h,d,f-h,p-d)},D=function(t,e,n,r,i,a,o,s){var u,l,h,f,d,p,g,m,v,b,y,w,N,L,x=n-t,A=r-e,S=i-n,_=a-r,P=o-i,k=s-a;for(l=0;l<41;l++)v=(g=(h=t+(u=l/40)*x)+u*((d=n+u*S)-h))+u*(d+u*(i+u*P-d)-g),b=(m=(f=e+u*A)+u*((p=r+u*_)-f))+u*(p+u*(a+u*k-p)-m),0==l?(y=v,w=b,N=v,L=b):(y=Math.min(y,v),w=Math.min(w,b),N=Math.max(N,v),L=Math.max(L,b));return new c(Math.round(y),Math.round(w),Math.round(N-y),Math.round(L-w))},T=function(){if(this.prevLineDash||this.ctx.lineDash.length||this.ctx.lineDashOffset){var t,e,n=(t=this.ctx.lineDash,e=this.ctx.lineDashOffset,JSON.stringify({lineDash:t,lineDashOffset:e}));this.prevLineDash!==n&&(this.pdf.setLineDash(this.ctx.lineDash,this.ctx.lineDashOffset),this.prevLineDash=n)}}}(E.API),\n/**\n * @license\n * jsPDF filters PlugIn\n * Copyright (c) 2014 Aras Abbasi\n *\n * Licensed under the MIT License.\n * http://opensource.org/licenses/mit-license\n */\nfunction(t){var n=function(t){var e,n,r,i,a,o,s,u,c,l;for(/[^\\x00-\\xFF]/.test(t),n=[],r=0,i=(t+=e=\"\\0\\0\\0\\0\".slice(t.length%4||4)).length;i>r;r+=4)0!==(a=(t.charCodeAt(r)<<24)+(t.charCodeAt(r+1)<<16)+(t.charCodeAt(r+2)<<8)+t.charCodeAt(r+3))?(o=(a=((a=((a=((a=(a-(l=a%85))/85)-(c=a%85))/85)-(u=a%85))/85)-(s=a%85))/85)%85,n.push(o+33,s+33,u+33,c+33,l+33)):n.push(122);return function(t,e){for(var n=e;n>0;n--)t.pop()}(n,e.length),String.fromCharCode.apply(String,n)+\"~>\"},r=function(t){var e,n,r,i,a,o=String,s=\"length\",u=255,c=\"charCodeAt\",l=\"slice\",h=\"replace\";for(t[l](-2),t=t[l](0,-2)[h](/\\s/g,\"\")[h](\"z\",\"!!!!!\"),r=[],i=0,a=(t+=e=\"uuuuu\"[l](t[s]%5||5))[s];a>i;i+=5)n=52200625*(t[c](i)-33)+614125*(t[c](i+1)-33)+7225*(t[c](i+2)-33)+85*(t[c](i+3)-33)+(t[c](i+4)-33),r.push(u&n>>24,u&n>>16,u&n>>8,u&n);return function(t,e){for(var n=e;n>0;n--)t.pop()}(r,e[s]),o.fromCharCode.apply(o,r)},i=function(t){return t.split(\"\").map(function(t){return(\"0\"+t.charCodeAt().toString(16)).slice(-2)}).join(\"\")+\">\"},a=function(t){var e=new RegExp(/^([0-9A-Fa-f]{2})+$/);if(-1!==(t=t.replace(/\\s/g,\"\")).indexOf(\">\")&&(t=t.substr(0,t.indexOf(\">\"))),t.length%2&&(t+=\"0\"),!1===e.test(t))return\"\";for(var n=\"\",r=0;r<t.length;r+=2)n+=String.fromCharCode(\"0x\"+(t[r]+t[r+1]));return n},o=function(t){for(var n=new Uint8Array(t.length),r=t.length;r--;)n[r]=t.charCodeAt(r);return(n=e(n)).reduce(function(t,e){return t+String.fromCharCode(e)},\"\")};t.processDataByFilters=function(t,e){var s=0,u=t||\"\",c=[];for(\"string\"==typeof(e=e||[])&&(e=[e]),s=0;s<e.length;s+=1)switch(e[s]){case\"ASCII85Decode\":case\"/ASCII85Decode\":u=r(u),c.push(\"/ASCII85Encode\");break;case\"ASCII85Encode\":case\"/ASCII85Encode\":u=n(u),c.push(\"/ASCII85Decode\");break;case\"ASCIIHexDecode\":case\"/ASCIIHexDecode\":u=a(u),c.push(\"/ASCIIHexEncode\");break;case\"ASCIIHexEncode\":case\"/ASCIIHexEncode\":u=i(u),c.push(\"/ASCIIHexDecode\");break;case\"FlateEncode\":case\"/FlateEncode\":u=o(u),c.push(\"/FlateDecode\");break;default:throw new Error('The filter: \"'+e[s]+'\" is not implemented')}return{data:u,reverseChain:c.reverse().join(\" \")}}}(E.API),\n/**\n * @license\n * jsPDF fileloading PlugIn\n * Copyright (c) 2018 Aras Abbasi (aras.abbasi@gmail.com)\n *\n * Licensed under the MIT License.\n * http://opensource.org/licenses/mit-license\n */\nfunction(t){t.loadFile=function(t,e,n){return function(t,e,n){e=!1!==e,n=\"function\"==typeof n?n:function(){};var r=void 0;try{r=function(t,e,n){var r=new XMLHttpRequest,i=0,a=function(t){var e=t.length,n=[],r=String.fromCharCode;for(i=0;i<e;i+=1)n.push(r(255&t.charCodeAt(i)));return n.join(\"\")};if(r.open(\"GET\",t,!e),r.overrideMimeType(\"text/plain; charset=x-user-defined\"),!1===e&&(r.onload=function(){200===r.status?n(a(this.responseText)):n(void 0)}),r.send(null),e&&200===r.status)return a(r.responseText)}(t,e,n)}catch(i){}return r}(t,e,n)},t.loadImageFile=t.loadFile}(E.API),function(e){function n(){return(i.html2canvas?Promise.resolve(i.html2canvas):import(\"html2canvas\")).catch(function(t){return Promise.reject(new Error(\"Could not load html2canvas: \"+t))}).then(function(t){return t.default?t.default:t})}function r(){return(i.DOMPurify?Promise.resolve(i.DOMPurify):import(\"dompurify\")).catch(function(t){return Promise.reject(new Error(\"Could not load dompurify: \"+t))}).then(function(t){return t.default?t.default:t})}var a=function(e){var n=t(e);return\"undefined\"===n?\"undefined\":\"string\"===n||e instanceof String?\"string\":\"number\"===n||e instanceof Number?\"number\":\"function\"===n||e instanceof Function?\"function\":e&&e.constructor===Array?\"array\":e&&1===e.nodeType?\"element\":\"object\"===n?\"object\":\"unknown\"},o=function(t,e){var n=document.createElement(t);for(var r in e.className&&(n.className=e.className),e.innerHTML&&e.dompurify&&(n.innerHTML=e.dompurify.sanitize(e.innerHTML)),e.style)n.style[r]=e.style[r];return n},s=function t(e,n){for(var r=3===e.nodeType?document.createTextNode(e.nodeValue):e.cloneNode(!1),i=e.firstChild;i;i=i.nextSibling)!0!==n&&1===i.nodeType&&\"SCRIPT\"===i.nodeName||r.appendChild(t(i,n));return 1===e.nodeType&&(\"CANVAS\"===e.nodeName?(r.width=e.width,r.height=e.height,r.getContext(\"2d\").drawImage(e,0,0)):\"TEXTAREA\"!==e.nodeName&&\"SELECT\"!==e.nodeName||(r.value=e.value),r.addEventListener(\"load\",function(){r.scrollTop=e.scrollTop,r.scrollLeft=e.scrollLeft},!0)),r},u=function t(e){var n=Object.assign(t.convert(Promise.resolve()),JSON.parse(JSON.stringify(t.template))),r=t.convert(Promise.resolve(),n);return(r=r.setProgress(1,t,1,[t])).set(e)};(u.prototype=Object.create(Promise.prototype)).constructor=u,u.convert=function(t,e){return t.__proto__=e||u.prototype,t},u.template={prop:{src:null,container:null,overlay:null,canvas:null,img:null,pdf:null,pageSize:null,callback:function(){}},progress:{val:0,state:null,n:0,stack:[]},opt:{filename:\"file.pdf\",margin:[0,0,0,0],enableLinks:!0,x:0,y:0,html2canvas:{},jsPDF:{},backgroundColor:\"transparent\"}},u.prototype.from=function(t,e){return this.then(function(){switch(e=e||function(t){switch(a(t)){case\"string\":return\"string\";case\"element\":return\"canvas\"===t.nodeName.toLowerCase()?\"canvas\":\"element\";default:return\"unknown\"}}(t),e){case\"string\":return this.then(r).then(function(e){return this.set({src:o(\"div\",{innerHTML:t,dompurify:e})})});case\"element\":return this.set({src:t});case\"canvas\":return this.set({canvas:t});case\"img\":return this.set({img:t});default:return this.error(\"Unknown source type.\")}})},u.prototype.to=function(t){switch(t){case\"container\":return this.toContainer();case\"canvas\":return this.toCanvas();case\"img\":return this.toImg();case\"pdf\":return this.toPdf();default:return this.error(\"Invalid target.\")}},u.prototype.toContainer=function(){return this.thenList([function(){return this.prop.src||this.error(\"Cannot duplicate - no source HTML.\")},function(){return this.prop.pageSize||this.setPageSize()}]).then(function(){var t={position:\"relative\",display:\"inline-block\",width:(\"number\"!=typeof this.opt.width||isNaN(this.opt.width)||\"number\"!=typeof this.opt.windowWidth||isNaN(this.opt.windowWidth)?Math.max(this.prop.src.clientWidth,this.prop.src.scrollWidth,this.prop.src.offsetWidth):this.opt.windowWidth)+\"px\",left:0,right:0,top:0,margin:\"auto\",backgroundColor:this.opt.backgroundColor},e=s(this.prop.src,this.opt.html2canvas.javascriptEnabled);\"BODY\"===e.tagName&&(t.height=Math.max(document.body.scrollHeight,document.body.offsetHeight,document.documentElement.clientHeight,document.documentElement.scrollHeight,document.documentElement.offsetHeight)+\"px\"),this.prop.overlay=o(\"div\",{className:\"html2pdf__overlay\",style:{position:\"fixed\",overflow:\"hidden\",zIndex:1e3,left:\"-100000px\",right:0,bottom:0,top:0}}),this.prop.container=o(\"div\",{className:\"html2pdf__container\",style:t}),this.prop.container.appendChild(e),this.prop.container.firstChild.appendChild(o(\"div\",{style:{clear:\"both\",border:\"0 none transparent\",margin:0,padding:0,height:0}})),this.prop.container.style.float=\"none\",this.prop.overlay.appendChild(this.prop.container),document.body.appendChild(this.prop.overlay),this.prop.container.firstChild.style.position=\"relative\",this.prop.container.height=Math.max(this.prop.container.firstChild.clientHeight,this.prop.container.firstChild.scrollHeight,this.prop.container.firstChild.offsetHeight)+\"px\"})},u.prototype.toCanvas=function(){var t=[function(){return document.body.contains(this.prop.container)||this.toContainer()}];return this.thenList(t).then(n).then(function(t){var e=Object.assign({},this.opt.html2canvas);return delete e.onrendered,t(this.prop.container,e)}).then(function(t){(this.opt.html2canvas.onrendered||function(){})(t),this.prop.canvas=t,document.body.removeChild(this.prop.overlay)})},u.prototype.toContext2d=function(){var t=[function(){return document.body.contains(this.prop.container)||this.toContainer()}];return this.thenList(t).then(n).then(function(t){var e=this.opt.jsPDF,n=this.opt.fontFaces,r=\"number\"!=typeof this.opt.width||isNaN(this.opt.width)||\"number\"!=typeof this.opt.windowWidth||isNaN(this.opt.windowWidth)?1:this.opt.width/this.opt.windowWidth,i=Object.assign({async:!0,allowTaint:!0,scale:r,scrollX:this.opt.scrollX||0,scrollY:this.opt.scrollY||0,backgroundColor:\"#ffffff\",imageTimeout:15e3,logging:!0,proxy:null,removeContainer:!0,foreignObjectRendering:!1,useCORS:!1},this.opt.html2canvas);if(delete i.onrendered,e.context2d.autoPaging=void 0===this.opt.autoPaging||this.opt.autoPaging,e.context2d.posX=this.opt.x,e.context2d.posY=this.opt.y,e.context2d.margin=this.opt.margin,e.context2d.fontFaces=n,n)for(var a=0;a<n.length;++a){var o=n[a],s=o.src.find(function(t){return\"truetype\"===t.format});s&&e.addFont(s.url,o.ref.name,o.ref.style)}return i.windowHeight=i.windowHeight||0,i.windowHeight=0==i.windowHeight?Math.max(this.prop.container.clientHeight,this.prop.container.scrollHeight,this.prop.container.offsetHeight):i.windowHeight,e.context2d.save(!0),t(this.prop.container,i)}).then(function(t){this.opt.jsPDF.context2d.restore(!0),(this.opt.html2canvas.onrendered||function(){})(t),this.prop.canvas=t,document.body.removeChild(this.prop.overlay)})},u.prototype.toImg=function(){return this.thenList([function(){return this.prop.canvas||this.toCanvas()}]).then(function(){var t=this.prop.canvas.toDataURL(\"image/\"+this.opt.image.type,this.opt.image.quality);this.prop.img=document.createElement(\"img\"),this.prop.img.src=t})},u.prototype.toPdf=function(){return this.thenList([function(){return this.toContext2d()}]).then(function(){this.prop.pdf=this.prop.pdf||this.opt.jsPDF})},u.prototype.output=function(t,e,n){return\"img\"===(n=n||\"pdf\").toLowerCase()||\"image\"===n.toLowerCase()?this.outputImg(t,e):this.outputPdf(t,e)},u.prototype.outputPdf=function(t,e){return this.thenList([function(){return this.prop.pdf||this.toPdf()}]).then(function(){return this.prop.pdf.output(t,e)})},u.prototype.outputImg=function(t){return this.thenList([function(){return this.prop.img||this.toImg()}]).then(function(){switch(t){case void 0:case\"img\":return this.prop.img;case\"datauristring\":case\"dataurlstring\":return this.prop.img.src;case\"datauri\":case\"dataurl\":return document.location.href=this.prop.img.src;default:throw'Image output type \"'+t+'\" is not supported.'}})},u.prototype.save=function(t){return this.thenList([function(){return this.prop.pdf||this.toPdf()}]).set(t?{filename:t}:null).then(function(){this.prop.pdf.save(this.opt.filename)})},u.prototype.doCallback=function(){return this.thenList([function(){return this.prop.pdf||this.toPdf()}]).then(function(){this.prop.callback(this.prop.pdf)})},u.prototype.set=function(t){if(\"object\"!==a(t))return this;var e=Object.keys(t||{}).map(function(e){if(e in u.template.prop)return function(){this.prop[e]=t[e]};switch(e){case\"margin\":return this.setMargin.bind(this,t.margin);case\"jsPDF\":return function(){return this.opt.jsPDF=t.jsPDF,this.setPageSize()};case\"pageSize\":return this.setPageSize.bind(this,t.pageSize);default:return function(){this.opt[e]=t[e]}}},this);return this.then(function(){return this.thenList(e)})},u.prototype.get=function(t,e){return this.then(function(){var n=t in u.template.prop?this.prop[t]:this.opt[t];return e?e(n):n})},u.prototype.setMargin=function(t){return this.then(function(){switch(a(t)){case\"number\":t=[t,t,t,t];case\"array\":if(2===t.length&&(t=[t[0],t[1],t[0],t[1]]),4===t.length)break;default:return this.error(\"Invalid margin array.\")}this.opt.margin=t}).then(this.setPageSize)},u.prototype.setPageSize=function(t){function e(t,e){return Math.floor(t*e/72*96)}return this.then(function(){(t=t||E.getPageSize(this.opt.jsPDF)).hasOwnProperty(\"inner\")||(t.inner={width:t.width-this.opt.margin[1]-this.opt.margin[3],height:t.height-this.opt.margin[0]-this.opt.margin[2]},t.inner.px={width:e(t.inner.width,t.k),height:e(t.inner.height,t.k)},t.inner.ratio=t.inner.height/t.inner.width),this.prop.pageSize=t})},u.prototype.setProgress=function(t,e,n,r){return null!=t&&(this.progress.val=t),null!=e&&(this.progress.state=e),null!=n&&(this.progress.n=n),null!=r&&(this.progress.stack=r),this.progress.ratio=this.progress.val/this.progress.state,this},u.prototype.updateProgress=function(t,e,n,r){return this.setProgress(t?this.progress.val+t:null,e||null,n?this.progress.n+n:null,r?this.progress.stack.concat(r):null)},u.prototype.then=function(t,e){var n=this;return this.thenCore(t,e,function(t,e){return n.updateProgress(null,null,1,[t]),Promise.prototype.then.call(this,function(e){return n.updateProgress(null,t),e}).then(t,e).then(function(t){return n.updateProgress(1),t})})},u.prototype.thenCore=function(t,e,n){n=n||Promise.prototype.then;var r=this;t&&(t=t.bind(r)),e&&(e=e.bind(r));var i=-1!==Promise.toString().indexOf(\"[native code]\")&&\"Promise\"===Promise.name?r:u.convert(Object.assign({},r),Promise.prototype),a=n.call(i,t,e);return u.convert(a,r.__proto__)},u.prototype.thenExternal=function(t,e){return Promise.prototype.then.call(this,t,e)},u.prototype.thenList=function(t){var e=this;return t.forEach(function(t){e=e.thenCore(t)}),e},u.prototype.catch=function(t){t&&(t=t.bind(this));var e=Promise.prototype.catch.call(this,t);return u.convert(e,this)},u.prototype.catchExternal=function(t){return Promise.prototype.catch.call(this,t)},u.prototype.error=function(t){return this.then(function(){throw new Error(t)})},u.prototype.using=u.prototype.set,u.prototype.saveAs=u.prototype.save,u.prototype.export=u.prototype.output,u.prototype.run=u.prototype.then,E.getPageSize=function(e,n,r){if(\"object\"===t(e)){var i=e;e=i.orientation,n=i.unit||n,r=i.format||r}n=n||\"mm\",r=r||\"a4\",e=(\"\"+(e||\"P\")).toLowerCase();var a,o=(\"\"+r).toLowerCase(),s={a0:[2383.94,3370.39],a1:[1683.78,2383.94],a2:[1190.55,1683.78],a3:[841.89,1190.55],a4:[595.28,841.89],a5:[419.53,595.28],a6:[297.64,419.53],a7:[209.76,297.64],a8:[147.4,209.76],a9:[104.88,147.4],a10:[73.7,104.88],b0:[2834.65,4008.19],b1:[2004.09,2834.65],b2:[1417.32,2004.09],b3:[1000.63,1417.32],b4:[708.66,1000.63],b5:[498.9,708.66],b6:[354.33,498.9],b7:[249.45,354.33],b8:[175.75,249.45],b9:[124.72,175.75],b10:[87.87,124.72],c0:[2599.37,3676.54],c1:[1836.85,2599.37],c2:[1298.27,1836.85],c3:[918.43,1298.27],c4:[649.13,918.43],c5:[459.21,649.13],c6:[323.15,459.21],c7:[229.61,323.15],c8:[161.57,229.61],c9:[113.39,161.57],c10:[79.37,113.39],dl:[311.81,623.62],letter:[612,792],\"government-letter\":[576,756],legal:[612,1008],\"junior-legal\":[576,360],ledger:[1224,792],tabloid:[792,1224],\"credit-card\":[153,243]};switch(n){case\"pt\":a=1;break;case\"mm\":a=72/25.4;break;case\"cm\":a=72/2.54;break;case\"in\":a=72;break;case\"px\":a=.75;break;case\"pc\":case\"em\":a=12;break;case\"ex\":a=6;break;default:throw\"Invalid unit: \"+n}var u,c=0,l=0;if(s.hasOwnProperty(o))c=s[o][1]/a,l=s[o][0]/a;else try{c=r[1],l=r[0]}catch(h){throw new Error(\"Invalid format: \"+r)}if(\"p\"===e||\"portrait\"===e)e=\"p\",l>c&&(u=l,l=c,c=u);else{if(\"l\"!==e&&\"landscape\"!==e)throw\"Invalid orientation: \"+e;e=\"l\",c>l&&(u=l,l=c,c=u)}return{width:l,height:c,unit:n,k:a,orientation:e}},e.html=function(t,e){(e=e||{}).callback=e.callback||function(){},e.html2canvas=e.html2canvas||{},e.html2canvas.canvas=e.html2canvas.canvas||this.canvas,e.jsPDF=e.jsPDF||this,e.fontFaces=e.fontFaces?e.fontFaces.map(Ct):null;var n=new u(e);return e.worker?n:n.from(t).doCallback()}}(E.API),E.API.addJS=function(t){return Ut=t,this.internal.events.subscribe(\"postPutResources\",function(){Tt=this.internal.newObject(),this.internal.out(\"<<\"),this.internal.out(\"/Names [(EmbeddedJS) \"+(Tt+1)+\" 0 R]\"),this.internal.out(\">>\"),this.internal.out(\"endobj\"),zt=this.internal.newObject(),this.internal.out(\"<<\"),this.internal.out(\"/S /JavaScript\"),this.internal.out(\"/JS (\"+Ut+\")\"),this.internal.out(\">>\"),this.internal.out(\"endobj\")}),this.internal.events.subscribe(\"putCatalog\",function(){void 0!==Tt&&void 0!==zt&&this.internal.out(\"/Names <</JavaScript \"+Tt+\" 0 R>>\")}),this},\n/**\n * @license\n * Copyright (c) 2014 Steven Spungin (TwelveTone LLC)  steven@twelvetone.tv\n *\n * Licensed under the MIT License.\n * http://opensource.org/licenses/mit-license\n */\nfunction(t){var e;t.events.push([\"postPutResources\",function(){var t=this,n=/^(\\d+) 0 obj$/;if(this.outline.root.children.length>0)for(var r=t.outline.render().split(/\\r\\n/),i=0;i<r.length;i++){var a=r[i],o=n.exec(a);if(null!=o){var s=o[1];t.internal.newObjectDeferredBegin(s,!1)}t.internal.write(a)}if(this.outline.createNamedDestinations){var u=this.internal.pages.length,c=[];for(i=0;i<u;i++){var l=t.internal.newObject();c.push(l);var h=t.internal.getPageInfo(i+1);t.internal.write(\"<< /D[\"+h.objId+\" 0 R /XYZ null null null]>> endobj\")}var f=t.internal.newObject();for(t.internal.write(\"<< /Names [ \"),i=0;i<c.length;i++)t.internal.write(\"(page_\"+(i+1)+\")\"+c[i]+\" 0 R\");t.internal.write(\" ] >>\",\"endobj\"),e=t.internal.newObject(),t.internal.write(\"<< /Dests \"+f+\" 0 R\"),t.internal.write(\">>\",\"endobj\")}}]),t.events.push([\"putCatalog\",function(){var t=this;t.outline.root.children.length>0&&(t.internal.write(\"/Outlines\",this.outline.makeRef(this.outline.root)),this.outline.createNamedDestinations&&t.internal.write(\"/Names \"+e+\" 0 R\"))}]),t.events.push([\"initialized\",function(){var t=this;t.outline={createNamedDestinations:!1,root:{children:[]}},t.outline.add=function(t,e,n){var r={title:e,options:n,children:[]};return null==t&&(t=this.root),t.children.push(r),r},t.outline.render=function(){return this.ctx={},this.ctx.val=\"\",this.ctx.pdf=t,this.genIds_r(this.root),this.renderRoot(this.root),this.renderItems(this.root),this.ctx.val},t.outline.genIds_r=function(e){e.id=t.internal.newObjectDeferred();for(var n=0;n<e.children.length;n++)this.genIds_r(e.children[n])},t.outline.renderRoot=function(t){this.objStart(t),this.line(\"/Type /Outlines\"),t.children.length>0&&(this.line(\"/First \"+this.makeRef(t.children[0])),this.line(\"/Last \"+this.makeRef(t.children[t.children.length-1]))),this.line(\"/Count \"+this.count_r({count:0},t)),this.objEnd()},t.outline.renderItems=function(e){for(var n=this.ctx.pdf.internal.getVerticalCoordinateString,r=0;r<e.children.length;r++){var i=e.children[r];this.objStart(i),this.line(\"/Title \"+this.makeString(i.title)),this.line(\"/Parent \"+this.makeRef(e)),r>0&&this.line(\"/Prev \"+this.makeRef(e.children[r-1])),r<e.children.length-1&&this.line(\"/Next \"+this.makeRef(e.children[r+1])),i.children.length>0&&(this.line(\"/First \"+this.makeRef(i.children[0])),this.line(\"/Last \"+this.makeRef(i.children[i.children.length-1])));var a=this.count=this.count_r({count:0},i);if(a>0&&this.line(\"/Count \"+a),i.options&&i.options.pageNumber){var o=t.internal.getPageInfo(i.options.pageNumber);this.line(\"/Dest [\"+o.objId+\" 0 R /XYZ 0 \"+n(0)+\" 0]\")}this.objEnd()}for(var s=0;s<e.children.length;s++)this.renderItems(e.children[s])},t.outline.line=function(t){this.ctx.val+=t+\"\\r\\n\"},t.outline.makeRef=function(t){return t.id+\" 0 R\"},t.outline.makeString=function(e){return\"(\"+t.internal.pdfEscape(e)+\")\"},t.outline.objStart=function(t){this.ctx.val+=\"\\r\\n\"+t.id+\" 0 obj\\r\\n<<\\r\\n\"},t.outline.objEnd=function(){this.ctx.val+=\">> \\r\\nendobj\\r\\n\"},t.outline.count_r=function(t,e){for(var n=0;n<e.children.length;n++)t.count++,this.count_r(t,e.children[n]);return t.count}}])}(E.API),\n/**\n * @license\n *\n * Licensed under the MIT License.\n * http://opensource.org/licenses/mit-license\n */\nfunction(t){var e=[192,193,194,195,196,197,198,199];t.processJPEG=function(t,n,r,i,a,o){var s,u=this.decode.DCT_DECODE,c=null;if(\"string\"==typeof t||this.__addimage__.isArrayBuffer(t)||this.__addimage__.isArrayBufferView(t)){switch(t=a||t,t=this.__addimage__.isArrayBuffer(t)?new Uint8Array(t):t,s=function(t){for(var n,r=256*t.charCodeAt(4)+t.charCodeAt(5),i=t.length,a={width:0,height:0,numcomponents:1},o=4;o<i;o+=2){if(o+=r,-1!==e.indexOf(t.charCodeAt(o+1))){n=256*t.charCodeAt(o+5)+t.charCodeAt(o+6),a={width:256*t.charCodeAt(o+7)+t.charCodeAt(o+8),height:n,numcomponents:t.charCodeAt(o+9)};break}r=256*t.charCodeAt(o+2)+t.charCodeAt(o+3)}return a}(t=this.__addimage__.isArrayBufferView(t)?this.__addimage__.arrayBufferToBinaryString(t):t),s.numcomponents){case 1:o=this.color_spaces.DEVICE_GRAY;break;case 4:o=this.color_spaces.DEVICE_CMYK;break;case 3:o=this.color_spaces.DEVICE_RGB}c={data:t,width:s.width,height:s.height,colorSpace:o,bitsPerComponent:8,filter:u,index:n,alias:r}}return c}}(E.API),E.API.processPNG=function(t,i,a,o){if(this.__addimage__.isArrayBuffer(t)&&(t=new Uint8Array(t)),this.__addimage__.isArrayBufferView(t)){var s,u=r(t,{checkCrc:!0}),c=u.width,l=u.height,h=u.channels,f=u.palette,d=u.depth;s=f&&1===h?function(t){for(var e=t.width,r=t.height,i=t.data,a=t.palette,o=t.depth,s=!1,u=[],c=[],l=void 0,h=!1,f=0,d=0;d<a.length;d++){var p=n(a[d],4),g=p[0],m=p[1],v=p[2],b=p[3];u.push(g,m,v),null!=b&&(0===b?(f++,c.length<1&&c.push(d)):b<255&&(h=!0))}if(h||f>1){s=!0,c=void 0;var y=e*r;l=new Uint8Array(y);for(var w=new DataView(i.buffer),N=0;N<y;N++){var L=re(w,N,o),x=n(a[L],4)[3];l[N]=x}}return{colorSpace:\"Indexed\",colorsPerPixel:1,colorBytes:i,alphaBytes:l,needSMask:s,palette:u,mask:c}}(u):2===h||4===h?function(t){for(var e=t.data,n=t.width,r=t.height,i=t.channels,a=t.depth,o=2===i?\"DeviceGray\":\"DeviceRGB\",s=i-1,u=n*r,c=s,l=u*c,h=1*u,f=Math.ceil(l*a/8),d=Math.ceil(h*a/8),p=new Uint8Array(f),g=new Uint8Array(d),m=new DataView(e.buffer),v=new DataView(p.buffer),b=new DataView(g.buffer),y=!1,w=0;w<u;w++){for(var N=w*i,L=0;L<c;L++)ie(v,re(m,N+L,a),w*c+L,a);var x=re(m,N+c,a);x<(1<<a)-1&&(y=!0),ie(b,x,1*w,a)}return{colorSpace:o,colorsPerPixel:s,colorBytes:p,alphaBytes:g,needSMask:y}}(u):function(t){var e=t.data,n=1===t.channels?\"DeviceGray\":\"DeviceRGB\";return{colorSpace:n,colorsPerPixel:\"DeviceGray\"===n?1:3,colorBytes:e instanceof Uint8Array?e:new Uint8Array(e.buffer),needSMask:!1}}(u);var p,g,m,v=s,b=v.colorSpace,y=v.colorsPerPixel,w=v.colorBytes,N=v.alphaBytes,L=v.needSMask,x=v.palette,A=v.mask,S=null;return o!==E.API.image_compression.NONE&&\"function\"==typeof e?(S=function(t){var e;switch(t){case E.API.image_compression.FAST:e=11;break;case E.API.image_compression.MEDIUM:e=13;break;case E.API.image_compression.SLOW:e=14;break;default:e=12}return e}(o),p=this.decode.FLATE_DECODE,g=\"/Predictor \".concat(S,\" \"),t=Xt(w,c*y,y,o),L&&(m=Xt(N,c,1,o))):(p=void 0,g=\"\",t=w,L&&(m=N)),g+=\"/Colors \".concat(y,\" /BitsPerComponent \").concat(d,\" /Columns \").concat(c),(this.__addimage__.isArrayBuffer(t)||this.__addimage__.isArrayBufferView(t))&&(t=this.__addimage__.arrayBufferToBinaryString(t)),(m&&this.__addimage__.isArrayBuffer(m)||this.__addimage__.isArrayBufferView(m))&&(m=this.__addimage__.arrayBufferToBinaryString(m)),{alias:a,data:t,index:i,filter:p,decodeParameters:g,transparency:A,palette:x,sMask:m,predictor:S,width:c,height:l,bitsPerComponent:d,colorSpace:b}}},function(t){t.processGIF89A=function(e,n,r,i){var a=new oe(e),o=a.width,s=a.height,u=[];a.decodeAndBlitFrameRGBA(0,u);var c={data:u,width:o,height:s},l=new ue(100).encode(c,100);return t.processJPEG.call(this,l,n,r,i)},t.processGIF87A=t.processGIF89A}(E.API),ce.prototype.parseHeader=function(){if(this.fileSize=this.datav.getUint32(this.pos,!0),this.pos+=4,this.reserved=this.datav.getUint32(this.pos,!0),this.pos+=4,this.offset=this.datav.getUint32(this.pos,!0),this.pos+=4,this.headerSize=this.datav.getUint32(this.pos,!0),this.pos+=4,this.width=this.datav.getUint32(this.pos,!0),this.pos+=4,this.height=this.datav.getInt32(this.pos,!0),this.pos+=4,this.planes=this.datav.getUint16(this.pos,!0),this.pos+=2,this.bitPP=this.datav.getUint16(this.pos,!0),this.pos+=2,this.compress=this.datav.getUint32(this.pos,!0),this.pos+=4,this.rawSize=this.datav.getUint32(this.pos,!0),this.pos+=4,this.hr=this.datav.getUint32(this.pos,!0),this.pos+=4,this.vr=this.datav.getUint32(this.pos,!0),this.pos+=4,this.colors=this.datav.getUint32(this.pos,!0),this.pos+=4,this.importantColors=this.datav.getUint32(this.pos,!0),this.pos+=4,16===this.bitPP&&this.is_with_alpha&&(this.bitPP=15),this.bitPP<15){var t=0===this.colors?1<<this.bitPP:this.colors;this.palette=new Array(t);for(var e=0;e<t;e++){var n=this.datav.getUint8(this.pos++,!0),r=this.datav.getUint8(this.pos++,!0),i=this.datav.getUint8(this.pos++,!0),a=this.datav.getUint8(this.pos++,!0);this.palette[e]={red:i,green:r,blue:n,quad:a}}}this.height<0&&(this.height*=-1,this.bottom_up=!1)},ce.prototype.parseBGR=function(){this.pos=this.offset;try{var t=\"bit\"+this.bitPP,e=this.width*this.height*4;this.data=new Uint8Array(e),this[t]()}catch(n){o.log(\"bit decode error:\"+n)}},ce.prototype.bit1=function(){var t,e=Math.ceil(this.width/8),n=e%4;for(t=this.height-1;t>=0;t--){for(var r=this.bottom_up?t:this.height-1-t,i=0;i<e;i++)for(var a=this.datav.getUint8(this.pos++,!0),o=r*this.width*4+8*i*4,s=0;s<8&&8*i+s<this.width;s++){var u=this.palette[a>>7-s&1];this.data[o+4*s]=u.blue,this.data[o+4*s+1]=u.green,this.data[o+4*s+2]=u.red,this.data[o+4*s+3]=255}0!==n&&(this.pos+=4-n)}},ce.prototype.bit4=function(){for(var t=Math.ceil(this.width/2),e=t%4,n=this.height-1;n>=0;n--){for(var r=this.bottom_up?n:this.height-1-n,i=0;i<t;i++){var a=this.datav.getUint8(this.pos++,!0),o=r*this.width*4+2*i*4,s=a>>4,u=15&a,c=this.palette[s];if(this.data[o]=c.blue,this.data[o+1]=c.green,this.data[o+2]=c.red,this.data[o+3]=255,2*i+1>=this.width)break;c=this.palette[u],this.data[o+4]=c.blue,this.data[o+4+1]=c.green,this.data[o+4+2]=c.red,this.data[o+4+3]=255}0!==e&&(this.pos+=4-e)}},ce.prototype.bit8=function(){for(var t=this.width%4,e=this.height-1;e>=0;e--){for(var n=this.bottom_up?e:this.height-1-e,r=0;r<this.width;r++){var i=this.datav.getUint8(this.pos++,!0),a=n*this.width*4+4*r;if(i<this.palette.length){var o=this.palette[i];this.data[a]=o.red,this.data[a+1]=o.green,this.data[a+2]=o.blue,this.data[a+3]=255}else this.data[a]=255,this.data[a+1]=255,this.data[a+2]=255,this.data[a+3]=255}0!==t&&(this.pos+=4-t)}},ce.prototype.bit15=function(){for(var t=this.width%3,e=parseInt(\"11111\",2),n=this.height-1;n>=0;n--){for(var r=this.bottom_up?n:this.height-1-n,i=0;i<this.width;i++){var a=this.datav.getUint16(this.pos,!0);this.pos+=2;var o=(a&e)/e*255|0,s=(a>>5&e)/e*255|0,u=(a>>10&e)/e*255|0,c=a>>15?255:0,l=r*this.width*4+4*i;this.data[l]=u,this.data[l+1]=s,this.data[l+2]=o,this.data[l+3]=c}this.pos+=t}},ce.prototype.bit16=function(){for(var t=this.width%3,e=parseInt(\"11111\",2),n=parseInt(\"111111\",2),r=this.height-1;r>=0;r--){for(var i=this.bottom_up?r:this.height-1-r,a=0;a<this.width;a++){var o=this.datav.getUint16(this.pos,!0);this.pos+=2;var s=(o&e)/e*255|0,u=(o>>5&n)/n*255|0,c=(o>>11)/e*255|0,l=i*this.width*4+4*a;this.data[l]=c,this.data[l+1]=u,this.data[l+2]=s,this.data[l+3]=255}this.pos+=t}},ce.prototype.bit24=function(){for(var t=this.height-1;t>=0;t--){for(var e=this.bottom_up?t:this.height-1-t,n=0;n<this.width;n++){var r=this.datav.getUint8(this.pos++,!0),i=this.datav.getUint8(this.pos++,!0),a=this.datav.getUint8(this.pos++,!0),o=e*this.width*4+4*n;this.data[o]=a,this.data[o+1]=i,this.data[o+2]=r,this.data[o+3]=255}this.pos+=this.width%4}},ce.prototype.bit32=function(){for(var t=this.height-1;t>=0;t--)for(var e=this.bottom_up?t:this.height-1-t,n=0;n<this.width;n++){var r=this.datav.getUint8(this.pos++,!0),i=this.datav.getUint8(this.pos++,!0),a=this.datav.getUint8(this.pos++,!0),o=this.datav.getUint8(this.pos++,!0),s=e*this.width*4+4*n;this.data[s]=a,this.data[s+1]=i,this.data[s+2]=r,this.data[s+3]=o}},ce.prototype.getData=function(){return this.data},\n/**\n * @license\n * Copyright (c) 2018 Aras Abbasi\n *\n * Licensed under the MIT License.\n * http://opensource.org/licenses/mit-license\n */\nfunction(t){t.processBMP=function(e,n,r,i){var a=new ce(e,!1),o=a.width,s=a.height,u={data:a.getData(),width:o,height:s},c=new ue(100).encode(u,100);return t.processJPEG.call(this,c,n,r,i)}}(E.API),le.prototype.getData=function(){return this.data},\n/**\n * @license\n * Copyright (c) 2019 Aras Abbasi\n *\n * Licensed under the MIT License.\n * http://opensource.org/licenses/mit-license\n */\nfunction(t){t.processWEBP=function(e,n,r,i){var a=new le(e),o=a.width,s=a.height,u={data:a.getData(),width:o,height:s},c=new ue(100).encode(u,100);return t.processJPEG.call(this,c,n,r,i)}}(E.API),E.API.processRGBA=function(t,e,n){for(var r=t.data,i=r.length,a=new Uint8Array(i/4*3),o=new Uint8Array(i/4),s=0,u=0,c=0;c<i;c+=4){var l=r[c],h=r[c+1],f=r[c+2],d=r[c+3];a[s++]=l,a[s++]=h,a[s++]=f,o[u++]=d}var p=this.__addimage__.arrayBufferToBinaryString(a);return{alpha:this.__addimage__.arrayBufferToBinaryString(o),data:p,index:e,alias:n,colorSpace:\"DeviceRGB\",bitsPerComponent:8,width:t.width,height:t.height}},E.API.setLanguage=function(t){return void 0===this.internal.languageSettings&&(this.internal.languageSettings={},this.internal.languageSettings.isSubscribed=!1),void 0!=={af:\"Afrikaans\",sq:\"Albanian\",ar:\"Arabic (Standard)\",\"ar-DZ\":\"Arabic (Algeria)\",\"ar-BH\":\"Arabic (Bahrain)\",\"ar-EG\":\"Arabic (Egypt)\",\"ar-IQ\":\"Arabic (Iraq)\",\"ar-JO\":\"Arabic (Jordan)\",\"ar-KW\":\"Arabic (Kuwait)\",\"ar-LB\":\"Arabic (Lebanon)\",\"ar-LY\":\"Arabic (Libya)\",\"ar-MA\":\"Arabic (Morocco)\",\"ar-OM\":\"Arabic (Oman)\",\"ar-QA\":\"Arabic (Qatar)\",\"ar-SA\":\"Arabic (Saudi Arabia)\",\"ar-SY\":\"Arabic (Syria)\",\"ar-TN\":\"Arabic (Tunisia)\",\"ar-AE\":\"Arabic (U.A.E.)\",\"ar-YE\":\"Arabic (Yemen)\",an:\"Aragonese\",hy:\"Armenian\",as:\"Assamese\",ast:\"Asturian\",az:\"Azerbaijani\",eu:\"Basque\",be:\"Belarusian\",bn:\"Bengali\",bs:\"Bosnian\",br:\"Breton\",bg:\"Bulgarian\",my:\"Burmese\",ca:\"Catalan\",ch:\"Chamorro\",ce:\"Chechen\",zh:\"Chinese\",\"zh-HK\":\"Chinese (Hong Kong)\",\"zh-CN\":\"Chinese (PRC)\",\"zh-SG\":\"Chinese (Singapore)\",\"zh-TW\":\"Chinese (Taiwan)\",cv:\"Chuvash\",co:\"Corsican\",cr:\"Cree\",hr:\"Croatian\",cs:\"Czech\",da:\"Danish\",nl:\"Dutch (Standard)\",\"nl-BE\":\"Dutch (Belgian)\",en:\"English\",\"en-AU\":\"English (Australia)\",\"en-BZ\":\"English (Belize)\",\"en-CA\":\"English (Canada)\",\"en-IE\":\"English (Ireland)\",\"en-JM\":\"English (Jamaica)\",\"en-NZ\":\"English (New Zealand)\",\"en-PH\":\"English (Philippines)\",\"en-ZA\":\"English (South Africa)\",\"en-TT\":\"English (Trinidad & Tobago)\",\"en-GB\":\"English (United Kingdom)\",\"en-US\":\"English (United States)\",\"en-ZW\":\"English (Zimbabwe)\",eo:\"Esperanto\",et:\"Estonian\",fo:\"Faeroese\",fj:\"Fijian\",fi:\"Finnish\",fr:\"French (Standard)\",\"fr-BE\":\"French (Belgium)\",\"fr-CA\":\"French (Canada)\",\"fr-FR\":\"French (France)\",\"fr-LU\":\"French (Luxembourg)\",\"fr-MC\":\"French (Monaco)\",\"fr-CH\":\"French (Switzerland)\",fy:\"Frisian\",fur:\"Friulian\",gd:\"Gaelic (Scots)\",\"gd-IE\":\"Gaelic (Irish)\",gl:\"Galacian\",ka:\"Georgian\",de:\"German (Standard)\",\"de-AT\":\"German (Austria)\",\"de-DE\":\"German (Germany)\",\"de-LI\":\"German (Liechtenstein)\",\"de-LU\":\"German (Luxembourg)\",\"de-CH\":\"German (Switzerland)\",el:\"Greek\",gu:\"Gujurati\",ht:\"Haitian\",he:\"Hebrew\",hi:\"Hindi\",hu:\"Hungarian\",is:\"Icelandic\",id:\"Indonesian\",iu:\"Inuktitut\",ga:\"Irish\",it:\"Italian (Standard)\",\"it-CH\":\"Italian (Switzerland)\",ja:\"Japanese\",kn:\"Kannada\",ks:\"Kashmiri\",kk:\"Kazakh\",km:\"Khmer\",ky:\"Kirghiz\",tlh:\"Klingon\",ko:\"Korean\",\"ko-KP\":\"Korean (North Korea)\",\"ko-KR\":\"Korean (South Korea)\",la:\"Latin\",lv:\"Latvian\",lt:\"Lithuanian\",lb:\"Luxembourgish\",mk:\"North Macedonia\",ms:\"Malay\",ml:\"Malayalam\",mt:\"Maltese\",mi:\"Maori\",mr:\"Marathi\",mo:\"Moldavian\",nv:\"Navajo\",ng:\"Ndonga\",ne:\"Nepali\",no:\"Norwegian\",nb:\"Norwegian (Bokmal)\",nn:\"Norwegian (Nynorsk)\",oc:\"Occitan\",or:\"Oriya\",om:\"Oromo\",fa:\"Persian\",\"fa-IR\":\"Persian/Iran\",pl:\"Polish\",pt:\"Portuguese\",\"pt-BR\":\"Portuguese (Brazil)\",pa:\"Punjabi\",\"pa-IN\":\"Punjabi (India)\",\"pa-PK\":\"Punjabi (Pakistan)\",qu:\"Quechua\",rm:\"Rhaeto-Romanic\",ro:\"Romanian\",\"ro-MO\":\"Romanian (Moldavia)\",ru:\"Russian\",\"ru-MO\":\"Russian (Moldavia)\",sz:\"Sami (Lappish)\",sg:\"Sango\",sa:\"Sanskrit\",sc:\"Sardinian\",sd:\"Sindhi\",si:\"Singhalese\",sr:\"Serbian\",sk:\"Slovak\",sl:\"Slovenian\",so:\"Somani\",sb:\"Sorbian\",es:\"Spanish\",\"es-AR\":\"Spanish (Argentina)\",\"es-BO\":\"Spanish (Bolivia)\",\"es-CL\":\"Spanish (Chile)\",\"es-CO\":\"Spanish (Colombia)\",\"es-CR\":\"Spanish (Costa Rica)\",\"es-DO\":\"Spanish (Dominican Republic)\",\"es-EC\":\"Spanish (Ecuador)\",\"es-SV\":\"Spanish (El Salvador)\",\"es-GT\":\"Spanish (Guatemala)\",\"es-HN\":\"Spanish (Honduras)\",\"es-MX\":\"Spanish (Mexico)\",\"es-NI\":\"Spanish (Nicaragua)\",\"es-PA\":\"Spanish (Panama)\",\"es-PY\":\"Spanish (Paraguay)\",\"es-PE\":\"Spanish (Peru)\",\"es-PR\":\"Spanish (Puerto Rico)\",\"es-ES\":\"Spanish (Spain)\",\"es-UY\":\"Spanish (Uruguay)\",\"es-VE\":\"Spanish (Venezuela)\",sx:\"Sutu\",sw:\"Swahili\",sv:\"Swedish\",\"sv-FI\":\"Swedish (Finland)\",\"sv-SV\":\"Swedish (Sweden)\",ta:\"Tamil\",tt:\"Tatar\",te:\"Teluga\",th:\"Thai\",tig:\"Tigre\",ts:\"Tsonga\",tn:\"Tswana\",tr:\"Turkish\",tk:\"Turkmen\",uk:\"Ukrainian\",hsb:\"Upper Sorbian\",ur:\"Urdu\",ve:\"Venda\",vi:\"Vietnamese\",vo:\"Volapuk\",wa:\"Walloon\",cy:\"Welsh\",xh:\"Xhosa\",ji:\"Yiddish\",zu:\"Zulu\"}[t]&&(this.internal.languageSettings.languageCode=t,!1===this.internal.languageSettings.isSubscribed&&(this.internal.events.subscribe(\"putCatalog\",function(){this.internal.write(\"/Lang (\"+this.internal.languageSettings.languageCode+\")\")}),this.internal.languageSettings.isSubscribed=!0)),this},Ht=E.API,Wt=Ht.getCharWidthsArray=function(e,n){var r,i,a=(n=n||{}).font||this.internal.getFont(),o=n.fontSize||this.internal.getFontSize(),s=n.charSpace||this.internal.getCharSpace(),u=n.widths?n.widths:a.metadata.Unicode.widths,c=u.fof?u.fof:1,l=n.kerning?n.kerning:a.metadata.Unicode.kerning,h=l.fof?l.fof:1,f=!1!==n.doKerning,d=0,p=e.length,g=0,m=u[0]||c,v=[];for(r=0;r<p;r++)i=e.charCodeAt(r),\"function\"==typeof a.metadata.widthOfString?v.push((a.metadata.widthOfGlyph(a.metadata.characterToGlyph(i))+s*(1e3/o)||0)/1e3):(d=f&&\"object\"===t(l[i])&&!isNaN(parseInt(l[i][g],10))?l[i][g]/h:0,v.push((u[i]||m)/c+d)),g=i;return v},Vt=Ht.getStringUnitWidth=function(t,e){var n=(e=e||{}).fontSize||this.internal.getFontSize(),r=e.font||this.internal.getFont(),i=e.charSpace||this.internal.getCharSpace();return Ht.processArabic&&(t=Ht.processArabic(t)),\"function\"==typeof r.metadata.widthOfString?r.metadata.widthOfString(t,n,i)/n:Wt.apply(this,arguments).reduce(function(t,e){return t+e},0)},Gt=function(t,e,n,r){for(var i=[],a=0,o=t.length,s=0;a!==o&&s+e[a]<n;)s+=e[a],a++;i.push(t.slice(0,a));var u=a;for(s=0;a!==o;)s+e[a]>r&&(i.push(t.slice(u,a)),s=0,u=a),s+=e[a],a++;return u!==a&&i.push(t.slice(u,a)),i},Yt=function(t,e,n){n||(n={});var r,i,a,o,s,u,c,l=[],h=[l],f=n.textIndent||0,d=0,p=0,g=t.split(\" \"),m=Wt.apply(this,[\" \",n])[0];if(u=-1===n.lineIndent?g[0].length+2:n.lineIndent||0){var v=Array(u).join(\" \"),b=[];g.map(function(t){(t=t.split(/\\s*\\n/)).length>1?b=b.concat(t.map(function(t,e){return(e&&t.length?\"\\n\":\"\")+t})):b.push(t[0])}),g=b,u=Vt.apply(this,[v,n])}for(a=0,o=g.length;a<o;a++){var y=0;if(r=g[a],u&&\"\\n\"==r[0]&&(r=r.substr(1),y=1),f+d+(p=(i=Wt.apply(this,[r,n])).reduce(function(t,e){return t+e},0))>e||y){if(p>e){for(s=Gt.apply(this,[r,i,e-(f+d),e]),l.push(s.shift()),l=[s.pop()];s.length;)h.push([s.shift()]);p=i.slice(r.length-(l[0]?l[0].length:0)).reduce(function(t,e){return t+e},0)}else l=[r];h.push(l),f=p+u,d=m}else l.push(r),f+=d+p,d=m}return c=u?function(t,e){return(e?v:\"\")+t.join(\" \")}:function(t){return t.join(\" \")},h.map(c)},Ht.splitTextToSize=function(t,e,n){var r,i=(n=n||{}).fontSize||this.internal.getFontSize(),a=function(t){if(t.widths&&t.kerning)return{widths:t.widths,kerning:t.kerning};var e=this.internal.getFont(t.fontName,t.fontStyle),n=\"Unicode\";return e.metadata[n]?{widths:e.metadata[n].widths||{0:1},kerning:e.metadata[n].kerning||{}}:{font:e.metadata,fontSize:this.internal.getFontSize(),charSpace:this.internal.getCharSpace()}}.call(this,n);r=Array.isArray(t)?t:String(t).split(/\\r?\\n/);var o=1*this.internal.scaleFactor*e/i;a.textIndent=n.textIndent?1*n.textIndent*this.internal.scaleFactor/i:0,a.lineIndent=n.lineIndent;var s,u,c=[];for(s=0,u=r.length;s<u;s++)c=c.concat(Yt.apply(this,[r[s],o,a]));return c},function(e){e.__fontmetrics__=e.__fontmetrics__||{};for(var n=\"0123456789abcdef\",r=\"klmnopqrstuvwxyz\",i={},a={},o=0;o<16;o++)i[r[o]]=n[o],a[n[o]]=r[o];var s=function(t){return\"0x\"+parseInt(t,10).toString(16)},u=e.__fontmetrics__.compress=function(e){var n,r,i,o,c=[\"{\"];for(var l in e){if(n=e[l],isNaN(parseInt(l,10))?r=\"'\"+l+\"'\":(l=parseInt(l,10),r=(r=s(l).slice(2)).slice(0,-1)+a[r.slice(-1)]),\"number\"==typeof n)n<0?(i=s(n).slice(3),o=\"-\"):(i=s(n).slice(2),o=\"\"),i=o+i.slice(0,-1)+a[i.slice(-1)];else{if(\"object\"!==t(n))throw new Error(\"Don't know what to do with value type \"+t(n)+\".\");i=u(n)}c.push(r+i)}return c.push(\"}\"),c.join(\"\")},c=e.__fontmetrics__.uncompress=function(t){if(\"string\"!=typeof t)throw new Error(\"Invalid argument passed to uncompress.\");for(var e,n,r,a,o={},s=1,u=o,c=[],l=\"\",h=\"\",f=t.length-1,d=1;d<f;d+=1)\"'\"==(a=t[d])?e?(r=e.join(\"\"),e=void 0):e=[]:e?e.push(a):\"{\"==a?(c.push([u,r]),u={},r=void 0):\"}\"==a?((n=c.pop())[0][n[1]]=u,r=void 0,u=n[0]):\"-\"==a?s=-1:void 0===r?i.hasOwnProperty(a)?(l+=i[a],r=parseInt(l,16)*s,s=1,l=\"\"):l+=a:i.hasOwnProperty(a)?(h+=i[a],u[r]=parseInt(h,16)*s,s=1,r=void 0,h=\"\"):h+=a;return o},l={codePages:[\"WinAnsiEncoding\"],WinAnsiEncoding:c(\"{19m8n201n9q201o9r201s9l201t9m201u8m201w9n201x9o201y8o202k8q202l8r202m9p202q8p20aw8k203k8t203t8v203u9v2cq8s212m9t15m8w15n9w2dw9s16k8u16l9u17s9z17x8y17y9y}\")},h={Unicode:{Courier:l,\"Courier-Bold\":l,\"Courier-BoldOblique\":l,\"Courier-Oblique\":l,Helvetica:l,\"Helvetica-Bold\":l,\"Helvetica-BoldOblique\":l,\"Helvetica-Oblique\":l,\"Times-Roman\":l,\"Times-Bold\":l,\"Times-BoldItalic\":l,\"Times-Italic\":l}},f={Unicode:{\"Courier-Oblique\":c(\"{'widths'{k3w'fof'6o}'kerning'{'fof'-6o}}\"),\"Times-BoldItalic\":c(\"{'widths'{k3o2q4ycx2r201n3m201o6o201s2l201t2l201u2l201w3m201x3m201y3m2k1t2l2r202m2n2n3m2o3m2p5n202q6o2r1w2s2l2t2l2u3m2v3t2w1t2x2l2y1t2z1w3k3m3l3m3m3m3n3m3o3m3p3m3q3m3r3m3s3m203t2l203u2l3v2l3w3t3x3t3y3t3z3m4k5n4l4m4m4m4n4m4o4s4p4m4q4m4r4s4s4y4t2r4u3m4v4m4w3x4x5t4y4s4z4s5k3x5l4s5m4m5n3r5o3x5p4s5q4m5r5t5s4m5t3x5u3x5v2l5w1w5x2l5y3t5z3m6k2l6l3m6m3m6n2w6o3m6p2w6q2l6r3m6s3r6t1w6u1w6v3m6w1w6x4y6y3r6z3m7k3m7l3m7m2r7n2r7o1w7p3r7q2w7r4m7s3m7t2w7u2r7v2n7w1q7x2n7y3t202l3mcl4mal2ram3man3mao3map3mar3mas2lat4uau1uav3maw3way4uaz2lbk2sbl3t'fof'6obo2lbp3tbq3mbr1tbs2lbu1ybv3mbz3mck4m202k3mcm4mcn4mco4mcp4mcq5ycr4mcs4mct4mcu4mcv4mcw2r2m3rcy2rcz2rdl4sdm4sdn4sdo4sdp4sdq4sds4sdt4sdu4sdv4sdw4sdz3mek3mel3mem3men3meo3mep3meq4ser2wes2wet2weu2wev2wew1wex1wey1wez1wfl3rfm3mfn3mfo3mfp3mfq3mfr3tfs3mft3rfu3rfv3rfw3rfz2w203k6o212m6o2dw2l2cq2l3t3m3u2l17s3x19m3m}'kerning'{cl{4qu5kt5qt5rs17ss5ts}201s{201ss}201t{cks4lscmscnscoscpscls2wu2yu201ts}201x{2wu2yu}2k{201ts}2w{4qx5kx5ou5qx5rs17su5tu}2x{17su5tu5ou}2y{4qx5kx5ou5qx5rs17ss5ts}'fof'-6ofn{17sw5tw5ou5qw5rs}7t{cksclscmscnscoscps4ls}3u{17su5tu5os5qs}3v{17su5tu5os5qs}7p{17su5tu}ck{4qu5kt5qt5rs17ss5ts}4l{4qu5kt5qt5rs17ss5ts}cm{4qu5kt5qt5rs17ss5ts}cn{4qu5kt5qt5rs17ss5ts}co{4qu5kt5qt5rs17ss5ts}cp{4qu5kt5qt5rs17ss5ts}6l{4qu5ou5qw5rt17su5tu}5q{ckuclucmucnucoucpu4lu}5r{ckuclucmucnucoucpu4lu}7q{cksclscmscnscoscps4ls}6p{4qu5ou5qw5rt17sw5tw}ek{4qu5ou5qw5rt17su5tu}el{4qu5ou5qw5rt17su5tu}em{4qu5ou5qw5rt17su5tu}en{4qu5ou5qw5rt17su5tu}eo{4qu5ou5qw5rt17su5tu}ep{4qu5ou5qw5rt17su5tu}es{17ss5ts5qs4qu}et{4qu5ou5qw5rt17sw5tw}eu{4qu5ou5qw5rt17ss5ts}ev{17ss5ts5qs4qu}6z{17sw5tw5ou5qw5rs}fm{17sw5tw5ou5qw5rs}7n{201ts}fo{17sw5tw5ou5qw5rs}fp{17sw5tw5ou5qw5rs}fq{17sw5tw5ou5qw5rs}7r{cksclscmscnscoscps4ls}fs{17sw5tw5ou5qw5rs}ft{17su5tu}fu{17su5tu}fv{17su5tu}fw{17su5tu}fz{cksclscmscnscoscps4ls}}}\"),\"Helvetica-Bold\":c(\"{'widths'{k3s2q4scx1w201n3r201o6o201s1w201t1w201u1w201w3m201x3m201y3m2k1w2l2l202m2n2n3r2o3r2p5t202q6o2r1s2s2l2t2l2u2r2v3u2w1w2x2l2y1w2z1w3k3r3l3r3m3r3n3r3o3r3p3r3q3r3r3r3s3r203t2l203u2l3v2l3w3u3x3u3y3u3z3x4k6l4l4s4m4s4n4s4o4s4p4m4q3x4r4y4s4s4t1w4u3r4v4s4w3x4x5n4y4s4z4y5k4m5l4y5m4s5n4m5o3x5p4s5q4m5r5y5s4m5t4m5u3x5v2l5w1w5x2l5y3u5z3r6k2l6l3r6m3x6n3r6o3x6p3r6q2l6r3x6s3x6t1w6u1w6v3r6w1w6x5t6y3x6z3x7k3x7l3x7m2r7n3r7o2l7p3x7q3r7r4y7s3r7t3r7u3m7v2r7w1w7x2r7y3u202l3rcl4sal2lam3ran3rao3rap3rar3ras2lat4tau2pav3raw3uay4taz2lbk2sbl3u'fof'6obo2lbp3xbq3rbr1wbs2lbu2obv3rbz3xck4s202k3rcm4scn4sco4scp4scq6ocr4scs4mct4mcu4mcv4mcw1w2m2zcy1wcz1wdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3xek3rel3rem3ren3reo3rep3req5ter3res3ret3reu3rev3rew1wex1wey1wez1wfl3xfm3xfn3xfo3xfp3xfq3xfr3ufs3xft3xfu3xfv3xfw3xfz3r203k6o212m6o2dw2l2cq2l3t3r3u2l17s4m19m3r}'kerning'{cl{4qs5ku5ot5qs17sv5tv}201t{2ww4wy2yw}201w{2ks}201x{2ww4wy2yw}2k{201ts201xs}2w{7qs4qu5kw5os5qw5rs17su5tu7tsfzs}2x{5ow5qs}2y{7qs4qu5kw5os5qw5rs17su5tu7tsfzs}'fof'-6o7p{17su5tu5ot}ck{4qs5ku5ot5qs17sv5tv}4l{4qs5ku5ot5qs17sv5tv}cm{4qs5ku5ot5qs17sv5tv}cn{4qs5ku5ot5qs17sv5tv}co{4qs5ku5ot5qs17sv5tv}cp{4qs5ku5ot5qs17sv5tv}6l{17st5tt5os}17s{2kwclvcmvcnvcovcpv4lv4wwckv}5o{2kucltcmtcntcotcpt4lt4wtckt}5q{2ksclscmscnscoscps4ls4wvcks}5r{2ks4ws}5t{2kwclvcmvcnvcovcpv4lv4wwckv}eo{17st5tt5os}fu{17su5tu5ot}6p{17ss5ts}ek{17st5tt5os}el{17st5tt5os}em{17st5tt5os}en{17st5tt5os}6o{201ts}ep{17st5tt5os}es{17ss5ts}et{17ss5ts}eu{17ss5ts}ev{17ss5ts}6z{17su5tu5os5qt}fm{17su5tu5os5qt}fn{17su5tu5os5qt}fo{17su5tu5os5qt}fp{17su5tu5os5qt}fq{17su5tu5os5qt}fs{17su5tu5os5qt}ft{17su5tu5ot}7m{5os}fv{17su5tu5ot}fw{17su5tu5ot}}}\"),Courier:c(\"{'widths'{k3w'fof'6o}'kerning'{'fof'-6o}}\"),\"Courier-BoldOblique\":c(\"{'widths'{k3w'fof'6o}'kerning'{'fof'-6o}}\"),\"Times-Bold\":c(\"{'widths'{k3q2q5ncx2r201n3m201o6o201s2l201t2l201u2l201w3m201x3m201y3m2k1t2l2l202m2n2n3m2o3m2p6o202q6o2r1w2s2l2t2l2u3m2v3t2w1t2x2l2y1t2z1w3k3m3l3m3m3m3n3m3o3m3p3m3q3m3r3m3s3m203t2l203u2l3v2l3w3t3x3t3y3t3z3m4k5x4l4s4m4m4n4s4o4s4p4m4q3x4r4y4s4y4t2r4u3m4v4y4w4m4x5y4y4s4z4y5k3x5l4y5m4s5n3r5o4m5p4s5q4s5r6o5s4s5t4s5u4m5v2l5w1w5x2l5y3u5z3m6k2l6l3m6m3r6n2w6o3r6p2w6q2l6r3m6s3r6t1w6u2l6v3r6w1w6x5n6y3r6z3m7k3r7l3r7m2w7n2r7o2l7p3r7q3m7r4s7s3m7t3m7u2w7v2r7w1q7x2r7y3o202l3mcl4sal2lam3man3mao3map3mar3mas2lat4uau1yav3maw3tay4uaz2lbk2sbl3t'fof'6obo2lbp3rbr1tbs2lbu2lbv3mbz3mck4s202k3mcm4scn4sco4scp4scq6ocr4scs4mct4mcu4mcv4mcw2r2m3rcy2rcz2rdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3rek3mel3mem3men3meo3mep3meq4ser2wes2wet2weu2wev2wew1wex1wey1wez1wfl3rfm3mfn3mfo3mfp3mfq3mfr3tfs3mft3rfu3rfv3rfw3rfz3m203k6o212m6o2dw2l2cq2l3t3m3u2l17s4s19m3m}'kerning'{cl{4qt5ks5ot5qy5rw17sv5tv}201t{cks4lscmscnscoscpscls4wv}2k{201ts}2w{4qu5ku7mu5os5qx5ru17su5tu}2x{17su5tu5ou5qs}2y{4qv5kv7mu5ot5qz5ru17su5tu}'fof'-6o7t{cksclscmscnscoscps4ls}3u{17su5tu5os5qu}3v{17su5tu5os5qu}fu{17su5tu5ou5qu}7p{17su5tu5ou5qu}ck{4qt5ks5ot5qy5rw17sv5tv}4l{4qt5ks5ot5qy5rw17sv5tv}cm{4qt5ks5ot5qy5rw17sv5tv}cn{4qt5ks5ot5qy5rw17sv5tv}co{4qt5ks5ot5qy5rw17sv5tv}cp{4qt5ks5ot5qy5rw17sv5tv}6l{17st5tt5ou5qu}17s{ckuclucmucnucoucpu4lu4wu}5o{ckuclucmucnucoucpu4lu4wu}5q{ckzclzcmzcnzcozcpz4lz4wu}5r{ckxclxcmxcnxcoxcpx4lx4wu}5t{ckuclucmucnucoucpu4lu4wu}7q{ckuclucmucnucoucpu4lu}6p{17sw5tw5ou5qu}ek{17st5tt5qu}el{17st5tt5ou5qu}em{17st5tt5qu}en{17st5tt5qu}eo{17st5tt5qu}ep{17st5tt5ou5qu}es{17ss5ts5qu}et{17sw5tw5ou5qu}eu{17sw5tw5ou5qu}ev{17ss5ts5qu}6z{17sw5tw5ou5qu5rs}fm{17sw5tw5ou5qu5rs}fn{17sw5tw5ou5qu5rs}fo{17sw5tw5ou5qu5rs}fp{17sw5tw5ou5qu5rs}fq{17sw5tw5ou5qu5rs}7r{cktcltcmtcntcotcpt4lt5os}fs{17sw5tw5ou5qu5rs}ft{17su5tu5ou5qu}7m{5os}fv{17su5tu5ou5qu}fw{17su5tu5ou5qu}fz{cksclscmscnscoscps4ls}}}\"),Symbol:c(\"{'widths'{k3uaw4r19m3m2k1t2l2l202m2y2n3m2p5n202q6o3k3m2s2l2t2l2v3r2w1t3m3m2y1t2z1wbk2sbl3r'fof'6o3n3m3o3m3p3m3q3m3r3m3s3m3t3m3u1w3v1w3w3r3x3r3y3r3z2wbp3t3l3m5v2l5x2l5z3m2q4yfr3r7v3k7w1o7x3k}'kerning'{'fof'-6o}}\"),Helvetica:c(\"{'widths'{k3p2q4mcx1w201n3r201o6o201s1q201t1q201u1q201w2l201x2l201y2l2k1w2l1w202m2n2n3r2o3r2p5t202q6o2r1n2s2l2t2l2u2r2v3u2w1w2x2l2y1w2z1w3k3r3l3r3m3r3n3r3o3r3p3r3q3r3r3r3s3r203t2l203u2l3v1w3w3u3x3u3y3u3z3r4k6p4l4m4m4m4n4s4o4s4p4m4q3x4r4y4s4s4t1w4u3m4v4m4w3r4x5n4y4s4z4y5k4m5l4y5m4s5n4m5o3x5p4s5q4m5r5y5s4m5t4m5u3x5v1w5w1w5x1w5y2z5z3r6k2l6l3r6m3r6n3m6o3r6p3r6q1w6r3r6s3r6t1q6u1q6v3m6w1q6x5n6y3r6z3r7k3r7l3r7m2l7n3m7o1w7p3r7q3m7r4s7s3m7t3m7u3m7v2l7w1u7x2l7y3u202l3rcl4mal2lam3ran3rao3rap3rar3ras2lat4tau2pav3raw3uay4taz2lbk2sbl3u'fof'6obo2lbp3rbr1wbs2lbu2obv3rbz3xck4m202k3rcm4mcn4mco4mcp4mcq6ocr4scs4mct4mcu4mcv4mcw1w2m2ncy1wcz1wdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3xek3rel3rem3ren3reo3rep3req5ter3mes3ret3reu3rev3rew1wex1wey1wez1wfl3rfm3rfn3rfo3rfp3rfq3rfr3ufs3xft3rfu3rfv3rfw3rfz3m203k6o212m6o2dw2l2cq2l3t3r3u1w17s4m19m3r}'kerning'{5q{4wv}cl{4qs5kw5ow5qs17sv5tv}201t{2wu4w1k2yu}201x{2wu4wy2yu}17s{2ktclucmucnu4otcpu4lu4wycoucku}2w{7qs4qz5k1m17sy5ow5qx5rsfsu5ty7tufzu}2x{17sy5ty5oy5qs}2y{7qs4qz5k1m17sy5ow5qx5rsfsu5ty7tufzu}'fof'-6o7p{17sv5tv5ow}ck{4qs5kw5ow5qs17sv5tv}4l{4qs5kw5ow5qs17sv5tv}cm{4qs5kw5ow5qs17sv5tv}cn{4qs5kw5ow5qs17sv5tv}co{4qs5kw5ow5qs17sv5tv}cp{4qs5kw5ow5qs17sv5tv}6l{17sy5ty5ow}do{17st5tt}4z{17st5tt}7s{fst}dm{17st5tt}dn{17st5tt}5o{ckwclwcmwcnwcowcpw4lw4wv}dp{17st5tt}dq{17st5tt}7t{5ow}ds{17st5tt}5t{2ktclucmucnu4otcpu4lu4wycoucku}fu{17sv5tv5ow}6p{17sy5ty5ow5qs}ek{17sy5ty5ow}el{17sy5ty5ow}em{17sy5ty5ow}en{5ty}eo{17sy5ty5ow}ep{17sy5ty5ow}es{17sy5ty5qs}et{17sy5ty5ow5qs}eu{17sy5ty5ow5qs}ev{17sy5ty5ow5qs}6z{17sy5ty5ow5qs}fm{17sy5ty5ow5qs}fn{17sy5ty5ow5qs}fo{17sy5ty5ow5qs}fp{17sy5ty5qs}fq{17sy5ty5ow5qs}7r{5ow}fs{17sy5ty5ow5qs}ft{17sv5tv5ow}7m{5ow}fv{17sv5tv5ow}fw{17sv5tv5ow}}}\"),\"Helvetica-BoldOblique\":c(\"{'widths'{k3s2q4scx1w201n3r201o6o201s1w201t1w201u1w201w3m201x3m201y3m2k1w2l2l202m2n2n3r2o3r2p5t202q6o2r1s2s2l2t2l2u2r2v3u2w1w2x2l2y1w2z1w3k3r3l3r3m3r3n3r3o3r3p3r3q3r3r3r3s3r203t2l203u2l3v2l3w3u3x3u3y3u3z3x4k6l4l4s4m4s4n4s4o4s4p4m4q3x4r4y4s4s4t1w4u3r4v4s4w3x4x5n4y4s4z4y5k4m5l4y5m4s5n4m5o3x5p4s5q4m5r5y5s4m5t4m5u3x5v2l5w1w5x2l5y3u5z3r6k2l6l3r6m3x6n3r6o3x6p3r6q2l6r3x6s3x6t1w6u1w6v3r6w1w6x5t6y3x6z3x7k3x7l3x7m2r7n3r7o2l7p3x7q3r7r4y7s3r7t3r7u3m7v2r7w1w7x2r7y3u202l3rcl4sal2lam3ran3rao3rap3rar3ras2lat4tau2pav3raw3uay4taz2lbk2sbl3u'fof'6obo2lbp3xbq3rbr1wbs2lbu2obv3rbz3xck4s202k3rcm4scn4sco4scp4scq6ocr4scs4mct4mcu4mcv4mcw1w2m2zcy1wcz1wdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3xek3rel3rem3ren3reo3rep3req5ter3res3ret3reu3rev3rew1wex1wey1wez1wfl3xfm3xfn3xfo3xfp3xfq3xfr3ufs3xft3xfu3xfv3xfw3xfz3r203k6o212m6o2dw2l2cq2l3t3r3u2l17s4m19m3r}'kerning'{cl{4qs5ku5ot5qs17sv5tv}201t{2ww4wy2yw}201w{2ks}201x{2ww4wy2yw}2k{201ts201xs}2w{7qs4qu5kw5os5qw5rs17su5tu7tsfzs}2x{5ow5qs}2y{7qs4qu5kw5os5qw5rs17su5tu7tsfzs}'fof'-6o7p{17su5tu5ot}ck{4qs5ku5ot5qs17sv5tv}4l{4qs5ku5ot5qs17sv5tv}cm{4qs5ku5ot5qs17sv5tv}cn{4qs5ku5ot5qs17sv5tv}co{4qs5ku5ot5qs17sv5tv}cp{4qs5ku5ot5qs17sv5tv}6l{17st5tt5os}17s{2kwclvcmvcnvcovcpv4lv4wwckv}5o{2kucltcmtcntcotcpt4lt4wtckt}5q{2ksclscmscnscoscps4ls4wvcks}5r{2ks4ws}5t{2kwclvcmvcnvcovcpv4lv4wwckv}eo{17st5tt5os}fu{17su5tu5ot}6p{17ss5ts}ek{17st5tt5os}el{17st5tt5os}em{17st5tt5os}en{17st5tt5os}6o{201ts}ep{17st5tt5os}es{17ss5ts}et{17ss5ts}eu{17ss5ts}ev{17ss5ts}6z{17su5tu5os5qt}fm{17su5tu5os5qt}fn{17su5tu5os5qt}fo{17su5tu5os5qt}fp{17su5tu5os5qt}fq{17su5tu5os5qt}fs{17su5tu5os5qt}ft{17su5tu5ot}7m{5os}fv{17su5tu5ot}fw{17su5tu5ot}}}\"),ZapfDingbats:c(\"{'widths'{k4u2k1w'fof'6o}'kerning'{'fof'-6o}}\"),\"Courier-Bold\":c(\"{'widths'{k3w'fof'6o}'kerning'{'fof'-6o}}\"),\"Times-Italic\":c(\"{'widths'{k3n2q4ycx2l201n3m201o5t201s2l201t2l201u2l201w3r201x3r201y3r2k1t2l2l202m2n2n3m2o3m2p5n202q5t2r1p2s2l2t2l2u3m2v4n2w1t2x2l2y1t2z1w3k3m3l3m3m3m3n3m3o3m3p3m3q3m3r3m3s3m203t2l203u2l3v2l3w4n3x4n3y4n3z3m4k5w4l3x4m3x4n4m4o4s4p3x4q3x4r4s4s4s4t2l4u2w4v4m4w3r4x5n4y4m4z4s5k3x5l4s5m3x5n3m5o3r5p4s5q3x5r5n5s3x5t3r5u3r5v2r5w1w5x2r5y2u5z3m6k2l6l3m6m3m6n2w6o3m6p2w6q1w6r3m6s3m6t1w6u1w6v2w6w1w6x4s6y3m6z3m7k3m7l3m7m2r7n2r7o1w7p3m7q2w7r4m7s2w7t2w7u2r7v2s7w1v7x2s7y3q202l3mcl3xal2ram3man3mao3map3mar3mas2lat4wau1vav3maw4nay4waz2lbk2sbl4n'fof'6obo2lbp3mbq3obr1tbs2lbu1zbv3mbz3mck3x202k3mcm3xcn3xco3xcp3xcq5tcr4mcs3xct3xcu3xcv3xcw2l2m2ucy2lcz2ldl4mdm4sdn4sdo4sdp4sdq4sds4sdt4sdu4sdv4sdw4sdz3mek3mel3mem3men3meo3mep3meq4mer2wes2wet2weu2wev2wew1wex1wey1wez1wfl3mfm3mfn3mfo3mfp3mfq3mfr4nfs3mft3mfu3mfv3mfw3mfz2w203k6o212m6m2dw2l2cq2l3t3m3u2l17s3r19m3m}'kerning'{cl{5kt4qw}201s{201sw}201t{201tw2wy2yy6q-t}201x{2wy2yy}2k{201tw}2w{7qs4qy7rs5ky7mw5os5qx5ru17su5tu}2x{17ss5ts5os}2y{7qs4qy7rs5ky7mw5os5qx5ru17su5tu}'fof'-6o6t{17ss5ts5qs}7t{5os}3v{5qs}7p{17su5tu5qs}ck{5kt4qw}4l{5kt4qw}cm{5kt4qw}cn{5kt4qw}co{5kt4qw}cp{5kt4qw}6l{4qs5ks5ou5qw5ru17su5tu}17s{2ks}5q{ckvclvcmvcnvcovcpv4lv}5r{ckuclucmucnucoucpu4lu}5t{2ks}6p{4qs5ks5ou5qw5ru17su5tu}ek{4qs5ks5ou5qw5ru17su5tu}el{4qs5ks5ou5qw5ru17su5tu}em{4qs5ks5ou5qw5ru17su5tu}en{4qs5ks5ou5qw5ru17su5tu}eo{4qs5ks5ou5qw5ru17su5tu}ep{4qs5ks5ou5qw5ru17su5tu}es{5ks5qs4qs}et{4qs5ks5ou5qw5ru17su5tu}eu{4qs5ks5qw5ru17su5tu}ev{5ks5qs4qs}ex{17ss5ts5qs}6z{4qv5ks5ou5qw5ru17su5tu}fm{4qv5ks5ou5qw5ru17su5tu}fn{4qv5ks5ou5qw5ru17su5tu}fo{4qv5ks5ou5qw5ru17su5tu}fp{4qv5ks5ou5qw5ru17su5tu}fq{4qv5ks5ou5qw5ru17su5tu}7r{5os}fs{4qv5ks5ou5qw5ru17su5tu}ft{17su5tu5qs}fu{17su5tu5qs}fv{17su5tu5qs}fw{17su5tu5qs}}}\"),\"Times-Roman\":c(\"{'widths'{k3n2q4ycx2l201n3m201o6o201s2l201t2l201u2l201w2w201x2w201y2w2k1t2l2l202m2n2n3m2o3m2p5n202q6o2r1m2s2l2t2l2u3m2v3s2w1t2x2l2y1t2z1w3k3m3l3m3m3m3n3m3o3m3p3m3q3m3r3m3s3m203t2l203u2l3v1w3w3s3x3s3y3s3z2w4k5w4l4s4m4m4n4m4o4s4p3x4q3r4r4s4s4s4t2l4u2r4v4s4w3x4x5t4y4s4z4s5k3r5l4s5m4m5n3r5o3x5p4s5q4s5r5y5s4s5t4s5u3x5v2l5w1w5x2l5y2z5z3m6k2l6l2w6m3m6n2w6o3m6p2w6q2l6r3m6s3m6t1w6u1w6v3m6w1w6x4y6y3m6z3m7k3m7l3m7m2l7n2r7o1w7p3m7q3m7r4s7s3m7t3m7u2w7v3k7w1o7x3k7y3q202l3mcl4sal2lam3man3mao3map3mar3mas2lat4wau1vav3maw3say4waz2lbk2sbl3s'fof'6obo2lbp3mbq2xbr1tbs2lbu1zbv3mbz2wck4s202k3mcm4scn4sco4scp4scq5tcr4mcs3xct3xcu3xcv3xcw2l2m2tcy2lcz2ldl4sdm4sdn4sdo4sdp4sdq4sds4sdt4sdu4sdv4sdw4sdz3mek2wel2wem2wen2weo2wep2weq4mer2wes2wet2weu2wev2wew1wex1wey1wez1wfl3mfm3mfn3mfo3mfp3mfq3mfr3sfs3mft3mfu3mfv3mfw3mfz3m203k6o212m6m2dw2l2cq2l3t3m3u1w17s4s19m3m}'kerning'{cl{4qs5ku17sw5ou5qy5rw201ss5tw201ws}201s{201ss}201t{ckw4lwcmwcnwcowcpwclw4wu201ts}2k{201ts}2w{4qs5kw5os5qx5ru17sx5tx}2x{17sw5tw5ou5qu}2y{4qs5kw5os5qx5ru17sx5tx}'fof'-6o7t{ckuclucmucnucoucpu4lu5os5rs}3u{17su5tu5qs}3v{17su5tu5qs}7p{17sw5tw5qs}ck{4qs5ku17sw5ou5qy5rw201ss5tw201ws}4l{4qs5ku17sw5ou5qy5rw201ss5tw201ws}cm{4qs5ku17sw5ou5qy5rw201ss5tw201ws}cn{4qs5ku17sw5ou5qy5rw201ss5tw201ws}co{4qs5ku17sw5ou5qy5rw201ss5tw201ws}cp{4qs5ku17sw5ou5qy5rw201ss5tw201ws}6l{17su5tu5os5qw5rs}17s{2ktclvcmvcnvcovcpv4lv4wuckv}5o{ckwclwcmwcnwcowcpw4lw4wu}5q{ckyclycmycnycoycpy4ly4wu5ms}5r{cktcltcmtcntcotcpt4lt4ws}5t{2ktclvcmvcnvcovcpv4lv4wuckv}7q{cksclscmscnscoscps4ls}6p{17su5tu5qw5rs}ek{5qs5rs}el{17su5tu5os5qw5rs}em{17su5tu5os5qs5rs}en{17su5qs5rs}eo{5qs5rs}ep{17su5tu5os5qw5rs}es{5qs}et{17su5tu5qw5rs}eu{17su5tu5qs5rs}ev{5qs}6z{17sv5tv5os5qx5rs}fm{5os5qt5rs}fn{17sv5tv5os5qx5rs}fo{17sv5tv5os5qx5rs}fp{5os5qt5rs}fq{5os5qt5rs}7r{ckuclucmucnucoucpu4lu5os}fs{17sv5tv5os5qx5rs}ft{17ss5ts5qs}fu{17sw5tw5qs}fv{17sw5tw5qs}fw{17ss5ts5qs}fz{ckuclucmucnucoucpu4lu5os5rs}}}\"),\"Helvetica-Oblique\":c(\"{'widths'{k3p2q4mcx1w201n3r201o6o201s1q201t1q201u1q201w2l201x2l201y2l2k1w2l1w202m2n2n3r2o3r2p5t202q6o2r1n2s2l2t2l2u2r2v3u2w1w2x2l2y1w2z1w3k3r3l3r3m3r3n3r3o3r3p3r3q3r3r3r3s3r203t2l203u2l3v1w3w3u3x3u3y3u3z3r4k6p4l4m4m4m4n4s4o4s4p4m4q3x4r4y4s4s4t1w4u3m4v4m4w3r4x5n4y4s4z4y5k4m5l4y5m4s5n4m5o3x5p4s5q4m5r5y5s4m5t4m5u3x5v1w5w1w5x1w5y2z5z3r6k2l6l3r6m3r6n3m6o3r6p3r6q1w6r3r6s3r6t1q6u1q6v3m6w1q6x5n6y3r6z3r7k3r7l3r7m2l7n3m7o1w7p3r7q3m7r4s7s3m7t3m7u3m7v2l7w1u7x2l7y3u202l3rcl4mal2lam3ran3rao3rap3rar3ras2lat4tau2pav3raw3uay4taz2lbk2sbl3u'fof'6obo2lbp3rbr1wbs2lbu2obv3rbz3xck4m202k3rcm4mcn4mco4mcp4mcq6ocr4scs4mct4mcu4mcv4mcw1w2m2ncy1wcz1wdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3xek3rel3rem3ren3reo3rep3req5ter3mes3ret3reu3rev3rew1wex1wey1wez1wfl3rfm3rfn3rfo3rfp3rfq3rfr3ufs3xft3rfu3rfv3rfw3rfz3m203k6o212m6o2dw2l2cq2l3t3r3u1w17s4m19m3r}'kerning'{5q{4wv}cl{4qs5kw5ow5qs17sv5tv}201t{2wu4w1k2yu}201x{2wu4wy2yu}17s{2ktclucmucnu4otcpu4lu4wycoucku}2w{7qs4qz5k1m17sy5ow5qx5rsfsu5ty7tufzu}2x{17sy5ty5oy5qs}2y{7qs4qz5k1m17sy5ow5qx5rsfsu5ty7tufzu}'fof'-6o7p{17sv5tv5ow}ck{4qs5kw5ow5qs17sv5tv}4l{4qs5kw5ow5qs17sv5tv}cm{4qs5kw5ow5qs17sv5tv}cn{4qs5kw5ow5qs17sv5tv}co{4qs5kw5ow5qs17sv5tv}cp{4qs5kw5ow5qs17sv5tv}6l{17sy5ty5ow}do{17st5tt}4z{17st5tt}7s{fst}dm{17st5tt}dn{17st5tt}5o{ckwclwcmwcnwcowcpw4lw4wv}dp{17st5tt}dq{17st5tt}7t{5ow}ds{17st5tt}5t{2ktclucmucnu4otcpu4lu4wycoucku}fu{17sv5tv5ow}6p{17sy5ty5ow5qs}ek{17sy5ty5ow}el{17sy5ty5ow}em{17sy5ty5ow}en{5ty}eo{17sy5ty5ow}ep{17sy5ty5ow}es{17sy5ty5qs}et{17sy5ty5ow5qs}eu{17sy5ty5ow5qs}ev{17sy5ty5ow5qs}6z{17sy5ty5ow5qs}fm{17sy5ty5ow5qs}fn{17sy5ty5ow5qs}fo{17sy5ty5ow5qs}fp{17sy5ty5qs}fq{17sy5ty5ow5qs}7r{5ow}fs{17sy5ty5ow5qs}ft{17sv5tv5ow}7m{5ow}fv{17sv5tv5ow}fw{17sv5tv5ow}}}\")}};e.events.push([\"addFont\",function(t){var e=t.font,n=f.Unicode[e.postScriptName];n&&(e.metadata.Unicode={},e.metadata.Unicode.widths=n.widths,e.metadata.Unicode.kerning=n.kerning);var r=h.Unicode[e.postScriptName];r&&(e.metadata.Unicode.encoding=r,e.encoding=r.codePages[0])}])}(E.API),\n/**\n * @license\n * Licensed under the MIT License.\n * http://opensource.org/licenses/mit-license\n */\nfunction(t){var e=function(t){for(var e=t.length,n=new Uint8Array(e),r=0;r<e;r++)n[r]=t.charCodeAt(r);return n};t.API.events.push([\"addFont\",function(n){var r=void 0,i=n.font,a=n.instance;if(!i.isStandardFont){if(void 0===a)throw new Error(\"Font does not exist in vFS, import fonts or remove declaration doc.addFont('\"+i.postScriptName+\"').\");if(\"string\"!=typeof(r=!1===a.existsFileInVFS(i.postScriptName)?a.loadFile(i.postScriptName):a.getFileFromVFS(i.postScriptName)))throw new Error(\"Font is not stored as string-data in vFS, import fonts or remove declaration doc.addFont('\"+i.postScriptName+\"').\");!function(n,r){r=/^\\x00\\x01\\x00\\x00/.test(r)?e(r):e(f(r)),n.metadata=t.API.TTFFont.open(r),n.metadata.Unicode=n.metadata.Unicode||{encoding:{},kerning:{},widths:[]},n.metadata.glyIdsUsed=[0]}(i,r)}}])}(E),E.API.addSvgAsImage=function(t,e,n,r,a,s,u,c){if(isNaN(e)||isNaN(n))throw o.error(\"jsPDF.addSvgAsImage: Invalid coordinates\",arguments),new Error(\"Invalid coordinates passed to jsPDF.addSvgAsImage\");if(isNaN(r)||isNaN(a))throw o.error(\"jsPDF.addSvgAsImage: Invalid measurements\",arguments),new Error(\"Invalid measurements (width and/or height) passed to jsPDF.addSvgAsImage\");var l=document.createElement(\"canvas\");l.width=r,l.height=a;var h=l.getContext(\"2d\");h.fillStyle=\"#fff\",h.fillRect(0,0,l.width,l.height);var f={ignoreMouse:!0,ignoreAnimation:!0,ignoreDimensions:!0},d=this;return(i.canvg?Promise.resolve(i.canvg):import(\"canvg\")).catch(function(t){return Promise.reject(new Error(\"Could not load canvg: \"+t))}).then(function(t){return t.default?t.default:t}).then(function(e){return e.fromString(h,t,f)},function(){return Promise.reject(new Error(\"Could not load canvg.\"))}).then(function(t){return t.render(f)}).then(function(){d.addImage(l.toDataURL(\"image/jpeg\",1),e,n,r,a,u,c)})},E.API.putTotalPages=function(t){var e,n=0;parseInt(this.internal.getFont().id.substr(1),10)<15?(e=new RegExp(t,\"g\"),n=this.internal.getNumberOfPages()):(e=new RegExp(this.pdfEscape16(t,this.internal.getFont()),\"g\"),n=this.pdfEscape16(this.internal.getNumberOfPages()+\"\",this.internal.getFont()));for(var r=1;r<=this.internal.getNumberOfPages();r++)for(var i=0;i<this.internal.pages[r].length;i++)this.internal.pages[r][i]=this.internal.pages[r][i].replace(e,n);return this},E.API.viewerPreferences=function(e,n){var r;e=e||{},n=n||!1;var i,a,o,s={HideToolbar:{defaultValue:!1,value:!1,type:\"boolean\",explicitSet:!1,valueSet:[!0,!1],pdfVersion:1.3},HideMenubar:{defaultValue:!1,value:!1,type:\"boolean\",explicitSet:!1,valueSet:[!0,!1],pdfVersion:1.3},HideWindowUI:{defaultValue:!1,value:!1,type:\"boolean\",explicitSet:!1,valueSet:[!0,!1],pdfVersion:1.3},FitWindow:{defaultValue:!1,value:!1,type:\"boolean\",explicitSet:!1,valueSet:[!0,!1],pdfVersion:1.3},CenterWindow:{defaultValue:!1,value:!1,type:\"boolean\",explicitSet:!1,valueSet:[!0,!1],pdfVersion:1.3},DisplayDocTitle:{defaultValue:!1,value:!1,type:\"boolean\",explicitSet:!1,valueSet:[!0,!1],pdfVersion:1.4},NonFullScreenPageMode:{defaultValue:\"UseNone\",value:\"UseNone\",type:\"name\",explicitSet:!1,valueSet:[\"UseNone\",\"UseOutlines\",\"UseThumbs\",\"UseOC\"],pdfVersion:1.3},Direction:{defaultValue:\"L2R\",value:\"L2R\",type:\"name\",explicitSet:!1,valueSet:[\"L2R\",\"R2L\"],pdfVersion:1.3},ViewArea:{defaultValue:\"CropBox\",value:\"CropBox\",type:\"name\",explicitSet:!1,valueSet:[\"MediaBox\",\"CropBox\",\"TrimBox\",\"BleedBox\",\"ArtBox\"],pdfVersion:1.4},ViewClip:{defaultValue:\"CropBox\",value:\"CropBox\",type:\"name\",explicitSet:!1,valueSet:[\"MediaBox\",\"CropBox\",\"TrimBox\",\"BleedBox\",\"ArtBox\"],pdfVersion:1.4},PrintArea:{defaultValue:\"CropBox\",value:\"CropBox\",type:\"name\",explicitSet:!1,valueSet:[\"MediaBox\",\"CropBox\",\"TrimBox\",\"BleedBox\",\"ArtBox\"],pdfVersion:1.4},PrintClip:{defaultValue:\"CropBox\",value:\"CropBox\",type:\"name\",explicitSet:!1,valueSet:[\"MediaBox\",\"CropBox\",\"TrimBox\",\"BleedBox\",\"ArtBox\"],pdfVersion:1.4},PrintScaling:{defaultValue:\"AppDefault\",value:\"AppDefault\",type:\"name\",explicitSet:!1,valueSet:[\"AppDefault\",\"None\"],pdfVersion:1.6},Duplex:{defaultValue:\"\",value:\"none\",type:\"name\",explicitSet:!1,valueSet:[\"Simplex\",\"DuplexFlipShortEdge\",\"DuplexFlipLongEdge\",\"none\"],pdfVersion:1.7},PickTrayByPDFSize:{defaultValue:!1,value:!1,type:\"boolean\",explicitSet:!1,valueSet:[!0,!1],pdfVersion:1.7},PrintPageRange:{defaultValue:\"\",value:\"\",type:\"array\",explicitSet:!1,valueSet:null,pdfVersion:1.7},NumCopies:{defaultValue:1,value:1,type:\"integer\",explicitSet:!1,valueSet:null,pdfVersion:1.7}},u=Object.keys(s),c=[],l=0,h=0,f=0;function d(t,e){var n,r=!1;for(n=0;n<t.length;n+=1)t[n]===e&&(r=!0);return r}if(void 0===this.internal.viewerpreferences&&(this.internal.viewerpreferences={},this.internal.viewerpreferences.configuration=JSON.parse(JSON.stringify(s)),this.internal.viewerpreferences.isSubscribed=!1),r=this.internal.viewerpreferences.configuration,\"reset\"===e||!0===n){var p=u.length;for(f=0;f<p;f+=1)r[u[f]].value=r[u[f]].defaultValue,r[u[f]].explicitSet=!1}if(\"object\"===t(e))for(a in e)if(o=e[a],d(u,a)&&void 0!==o){if(\"boolean\"===r[a].type&&\"boolean\"==typeof o)r[a].value=o;else if(\"name\"===r[a].type&&d(r[a].valueSet,o))r[a].value=o;else if(\"integer\"===r[a].type&&Number.isInteger(o))r[a].value=o;else if(\"array\"===r[a].type){for(l=0;l<o.length;l+=1)if(i=!0,1===o[l].length&&\"number\"==typeof o[l][0])c.push(String(o[l]-1));else if(o[l].length>1){for(h=0;h<o[l].length;h+=1)\"number\"!=typeof o[l][h]&&(i=!1);!0===i&&c.push([o[l][0]-1,o[l][1]-1].join(\" \"))}r[a].value=\"[\"+c.join(\" \")+\"]\"}else r[a].value=r[a].defaultValue;r[a].explicitSet=!0}return!1===this.internal.viewerpreferences.isSubscribed&&(this.internal.events.subscribe(\"putCatalog\",function(){var t,e=[];for(t in r)!0===r[t].explicitSet&&(\"name\"===r[t].type?e.push(\"/\"+t+\" /\"+r[t].value):e.push(\"/\"+t+\" \"+r[t].value));0!==e.length&&this.internal.write(\"/ViewerPreferences\\n<<\\n\"+e.join(\"\\n\")+\"\\n>>\")}),this.internal.viewerpreferences.isSubscribed=!0),this.internal.viewerpreferences.configuration=r,this},\n/** ====================================================================\n * @license\n * jsPDF XMP metadata plugin\n * Copyright (c) 2016 Jussi Utunen, u-jussi@suomi24.fi\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n * ====================================================================\n */\nfunction(t){var e=function(){var t='<rdf:RDF xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"><rdf:Description rdf:about=\"\" xmlns:jspdf=\"'+this.internal.__metadata__.namespaceuri+'\"><jspdf:metadata>',e=unescape(encodeURIComponent('<x:xmpmeta xmlns:x=\"adobe:ns:meta/\">')),n=unescape(encodeURIComponent(t)),r=unescape(encodeURIComponent(this.internal.__metadata__.metadata)),i=unescape(encodeURIComponent(\"</jspdf:metadata></rdf:Description></rdf:RDF>\")),a=unescape(encodeURIComponent(\"</x:xmpmeta>\")),o=n.length+r.length+i.length+e.length+a.length;this.internal.__metadata__.metadata_object_number=this.internal.newObject(),this.internal.write(\"<< /Type /Metadata /Subtype /XML /Length \"+o+\" >>\"),this.internal.write(\"stream\"),this.internal.write(e+n+r+i+a),this.internal.write(\"endstream\"),this.internal.write(\"endobj\")},n=function(){this.internal.__metadata__.metadata_object_number&&this.internal.write(\"/Metadata \"+this.internal.__metadata__.metadata_object_number+\" 0 R\")};t.addMetadata=function(t,r){return void 0===this.internal.__metadata__&&(this.internal.__metadata__={metadata:t,namespaceuri:r||\"http://jspdf.default.namespaceuri/\"},this.internal.events.subscribe(\"putCatalog\",n),this.internal.events.subscribe(\"postPutResources\",e)),this}}(E.API),function(t){var e=t.API,n=e.pdfEscape16=function(t,e){for(var n,r=e.metadata.Unicode.widths,i=[\"\",\"0\",\"00\",\"000\",\"0000\"],a=[\"\"],o=0,s=t.length;o<s;++o){if(n=e.metadata.characterToGlyph(t.charCodeAt(o)),e.metadata.glyIdsUsed.push(n),e.metadata.toUnicode[n]=t.charCodeAt(o),-1==r.indexOf(n)&&(r.push(n),r.push([parseInt(e.metadata.widthOfGlyph(n),10)])),\"0\"==n)return a.join(\"\");n=n.toString(16),a.push(i[4-n.length],n)}return a.join(\"\")},r=function(t){var e,n,r,i,a,o,s;for(a=\"/CIDInit /ProcSet findresource begin\\n12 dict begin\\nbegincmap\\n/CIDSystemInfo <<\\n  /Registry (Adobe)\\n  /Ordering (UCS)\\n  /Supplement 0\\n>> def\\n/CMapName /Adobe-Identity-UCS def\\n/CMapType 2 def\\n1 begincodespacerange\\n<0000><ffff>\\nendcodespacerange\",r=[],o=0,s=(n=Object.keys(t).sort(function(t,e){return t-e})).length;o<s;o++)e=n[o],r.length>=100&&(a+=\"\\n\"+r.length+\" beginbfchar\\n\"+r.join(\"\\n\")+\"\\nendbfchar\",r=[]),void 0!==t[e]&&null!==t[e]&&\"function\"==typeof t[e].toString&&(i=(\"0000\"+t[e].toString(16)).slice(-4),e=(\"0000\"+(+e).toString(16)).slice(-4),r.push(\"<\"+e+\"><\"+i+\">\"));return r.length&&(a+=\"\\n\"+r.length+\" beginbfchar\\n\"+r.join(\"\\n\")+\"\\nendbfchar\\n\"),a+\"endcmap\\nCMapName currentdict /CMap defineresource pop\\nend\\nend\"};e.events.push([\"putFont\",function(e){!function(e){var n=e.font,i=e.out,a=e.newObject,o=e.putStream;if(n.metadata instanceof t.API.TTFFont&&\"Identity-H\"===n.encoding){for(var s=n.metadata.Unicode.widths,u=n.metadata.subset.encode(n.metadata.glyIdsUsed,1),c=\"\",l=0;l<u.length;l++)c+=String.fromCharCode(u[l]);var h=a();o({data:c,addLength1:!0,objectId:h}),i(\"endobj\");var f=a();o({data:r(n.metadata.toUnicode),addLength1:!0,objectId:f}),i(\"endobj\");var d=a();i(\"<<\"),i(\"/Type /FontDescriptor\"),i(\"/FontName /\"+j(n.fontName)),i(\"/FontFile2 \"+h+\" 0 R\"),i(\"/FontBBox \"+t.API.PDFObject.convert(n.metadata.bbox)),i(\"/Flags \"+n.metadata.flags),i(\"/StemV \"+n.metadata.stemV),i(\"/ItalicAngle \"+n.metadata.italicAngle),i(\"/Ascent \"+n.metadata.ascender),i(\"/Descent \"+n.metadata.decender),i(\"/CapHeight \"+n.metadata.capHeight),i(\">>\"),i(\"endobj\");var p=a();i(\"<<\"),i(\"/Type /Font\"),i(\"/BaseFont /\"+j(n.fontName)),i(\"/FontDescriptor \"+d+\" 0 R\"),i(\"/W \"+t.API.PDFObject.convert(s)),i(\"/CIDToGIDMap /Identity\"),i(\"/DW 1000\"),i(\"/Subtype /CIDFontType2\"),i(\"/CIDSystemInfo\"),i(\"<<\"),i(\"/Supplement 0\"),i(\"/Registry (Adobe)\"),i(\"/Ordering (\"+n.encoding+\")\"),i(\">>\"),i(\">>\"),i(\"endobj\"),n.objectNumber=a(),i(\"<<\"),i(\"/Type /Font\"),i(\"/Subtype /Type0\"),i(\"/ToUnicode \"+f+\" 0 R\"),i(\"/BaseFont /\"+j(n.fontName)),i(\"/Encoding /\"+n.encoding),i(\"/DescendantFonts [\"+p+\" 0 R]\"),i(\">>\"),i(\"endobj\"),n.isAlreadyPutted=!0}}(e)}]),e.events.push([\"putFont\",function(e){!function(e){var n=e.font,i=e.out,a=e.newObject,o=e.putStream;if(n.metadata instanceof t.API.TTFFont&&\"WinAnsiEncoding\"===n.encoding){for(var s=n.metadata.rawData,u=\"\",c=0;c<s.length;c++)u+=String.fromCharCode(s[c]);var l=a();o({data:u,addLength1:!0,objectId:l}),i(\"endobj\");var h=a();o({data:r(n.metadata.toUnicode),addLength1:!0,objectId:h}),i(\"endobj\");var f=a();i(\"<<\"),i(\"/Descent \"+n.metadata.decender),i(\"/CapHeight \"+n.metadata.capHeight),i(\"/StemV \"+n.metadata.stemV),i(\"/Type /FontDescriptor\"),i(\"/FontFile2 \"+l+\" 0 R\"),i(\"/Flags 96\"),i(\"/FontBBox \"+t.API.PDFObject.convert(n.metadata.bbox)),i(\"/FontName /\"+j(n.fontName)),i(\"/ItalicAngle \"+n.metadata.italicAngle),i(\"/Ascent \"+n.metadata.ascender),i(\">>\"),i(\"endobj\"),n.objectNumber=a();for(var d=0;d<n.metadata.hmtx.widths.length;d++)n.metadata.hmtx.widths[d]=parseInt(n.metadata.hmtx.widths[d]*(1e3/n.metadata.head.unitsPerEm));i(\"<</Subtype/TrueType/Type/Font/ToUnicode \"+h+\" 0 R/BaseFont/\"+j(n.fontName)+\"/FontDescriptor \"+f+\" 0 R/Encoding/\"+n.encoding+\" /FirstChar 29 /LastChar 255 /Widths \"+t.API.PDFObject.convert(n.metadata.hmtx.widths)+\">>\"),i(\"endobj\"),n.isAlreadyPutted=!0}}(e)}]);var i=function(t){var e,r=t.text||\"\",i=t.x,a=t.y,o=t.options||{},s=t.mutex||{},u=s.pdfEscape,c=s.activeFontKey,l=s.fonts,h=c,f=\"\",d=0,p=\"\",g=l[h].encoding;if(\"Identity-H\"!==l[h].encoding)return{text:r,x:i,y:a,options:o,mutex:s};for(p=r,h=c,Array.isArray(r)&&(p=r[0]),d=0;d<p.length;d+=1)l[h].metadata.hasOwnProperty(\"cmap\")&&(e=l[h].metadata.cmap.unicode.codeMap[p[d].charCodeAt(0)]),e||p[d].charCodeAt(0)<256&&l[h].metadata.hasOwnProperty(\"Unicode\")?f+=p[d]:f+=\"\";var m=\"\";return parseInt(h.slice(1))<14||\"WinAnsiEncoding\"===g?m=u(f,h).split(\"\").map(function(t){return t.charCodeAt(0).toString(16)}).join(\"\"):\"Identity-H\"===g&&(m=n(f,l[h])),s.isHex=!0,{text:m,x:i,y:a,options:o,mutex:s}};e.events.push([\"postProcessText\",function(t){var e=t.text||\"\",n=[],r={text:e,x:t.x,y:t.y,options:t.options,mutex:t.mutex};if(Array.isArray(e)){var a=0;for(a=0;a<e.length;a+=1)Array.isArray(e[a])&&3===e[a].length?n.push([i(Object.assign({},r,{text:e[a][0]})).text,e[a][1],e[a][2]]):n.push(i(Object.assign({},r,{text:e[a]})).text);t.text=n}else t.text=i(Object.assign({},r,{text:e})).text}])}(E),\n/**\n * @license\n * jsPDF virtual FileSystem functionality\n *\n * Licensed under the MIT License.\n * http://opensource.org/licenses/mit-license\n */\nfunction(t){var e=function(){return void 0===this.internal.vFS&&(this.internal.vFS={}),!0};t.existsFileInVFS=function(t){return e.call(this),void 0!==this.internal.vFS[t]},t.addFileToVFS=function(t,n){return e.call(this),this.internal.vFS[t]=n,this},t.getFileFromVFS=function(t){return e.call(this),void 0!==this.internal.vFS[t]?this.internal.vFS[t]:null}}(E.API),\n/**\n * @license\n * Unicode Bidi Engine based on the work of Alex Shensis (@asthensis)\n * MIT License\n */\nfunction(t){t.__bidiEngine__=t.prototype.__bidiEngine__=function(t){var n,r,i,a,o,s,u,c=e,l=[[0,3,0,1,0,0,0],[0,3,0,1,2,2,0],[0,3,0,17,2,0,1],[0,3,5,5,4,1,0],[0,3,21,21,4,0,1],[0,3,5,5,4,2,0]],h=[[2,0,1,1,0,1,0],[2,0,1,1,0,2,0],[2,0,2,1,3,2,0],[2,0,2,33,3,1,1]],f={L:0,R:1,EN:2,AN:3,N:4,B:5,S:6},d={0:0,5:1,6:2,7:3,32:4,251:5,254:6,255:7},p=[\"(\",\")\",\"(\",\"<\",\">\",\"<\",\"[\",\"]\",\"[\",\"{\",\"}\",\"{\",\"«\",\"»\",\"«\",\"‹\",\"›\",\"‹\",\"⁅\",\"⁆\",\"⁅\",\"⁽\",\"⁾\",\"⁽\",\"₍\",\"₎\",\"₍\",\"≤\",\"≥\",\"≤\",\"〈\",\"〉\",\"〈\",\"﹙\",\"﹚\",\"﹙\",\"﹛\",\"﹜\",\"﹛\",\"﹝\",\"﹞\",\"﹝\",\"﹤\",\"﹥\",\"﹤\"],g=new RegExp(/^([1-4|9]|1[0-9]|2[0-9]|3[0168]|4[04589]|5[012]|7[78]|159|16[0-9]|17[0-2]|21[569]|22[03489]|250)$/),m=!1,v=0;this.__bidiEngine__={};var b=function(t){var e=t.charCodeAt(),n=e>>8,r=d[n];return void 0!==r?c[256*r+(255&e)]:252===n||253===n?\"AL\":g.test(n)?\"L\":8===n?\"R\":\"N\"},y=function(t){for(var e,n=0;n<t.length;n++){if(\"L\"===(e=b(t.charAt(n))))return!1;if(\"R\"===e)return!0}return!1},w=function(t,e,o,s){var u,c,l,h,f=e[s];switch(f){case\"L\":case\"R\":case\"LRE\":case\"RLE\":case\"LRO\":case\"RLO\":case\"PDF\":m=!1;break;case\"N\":case\"AN\":break;case\"EN\":m&&(f=\"AN\");break;case\"AL\":m=!0,f=\"R\";break;case\"WS\":case\"BN\":f=\"N\";break;case\"CS\":s<1||s+1>=e.length||\"EN\"!==(u=o[s-1])&&\"AN\"!==u||\"EN\"!==(c=e[s+1])&&\"AN\"!==c?f=\"N\":m&&(c=\"AN\"),f=c===u?c:\"N\";break;case\"ES\":f=\"EN\"===(u=s>0?o[s-1]:\"B\")&&s+1<e.length&&\"EN\"===e[s+1]?\"EN\":\"N\";break;case\"ET\":if(s>0&&\"EN\"===o[s-1]){f=\"EN\";break}if(m){f=\"N\";break}for(l=s+1,h=e.length;l<h&&\"ET\"===e[l];)l++;f=l<h&&\"EN\"===e[l]?\"EN\":\"N\";break;case\"NSM\":if(i&&!a){for(h=e.length,l=s+1;l<h&&\"NSM\"===e[l];)l++;if(l<h){var d=t[s],p=d>=1425&&d<=2303||64286===d;if(u=e[l],p&&(\"R\"===u||\"AL\"===u)){f=\"R\";break}}}f=s<1||\"B\"===(u=e[s-1])?\"N\":o[s-1];break;case\"B\":m=!1,n=!0,f=v;break;case\"S\":r=!0,f=\"N\"}return f},N=function(t,e,n){var r=t.split(\"\");return n&&L(r,n,{hiLevel:v}),r.reverse(),e&&e.reverse(),r.join(\"\")},L=function(t,e,i){var a,o,s,u,c,d=-1,p=t.length,g=0,y=[],N=v?h:l,L=[];for(m=!1,n=!1,r=!1,o=0;o<p;o++)L[o]=b(t[o]);for(s=0;s<p;s++){if(c=g,y[s]=w(t,L,y,s),a=240&(g=N[c][f[y[s]]]),g&=15,e[s]=u=N[g][5],a>0)if(16===a){for(o=d;o<s;o++)e[o]=1;d=-1}else d=-1;if(N[g][6])-1===d&&(d=s);else if(d>-1){for(o=d;o<s;o++)e[o]=u;d=-1}\"B\"===L[s]&&(e[s]=0),i.hiLevel|=u}r&&function(t,e,n){for(var r=0;r<n;r++)if(\"S\"===t[r]){e[r]=v;for(var i=r-1;i>=0&&\"WS\"===t[i];i--)e[i]=v}}(L,e,p)},x=function(t,e,r,i,a){if(!(a.hiLevel<t)){if(1===t&&1===v&&!n)return e.reverse(),void(r&&r.reverse());for(var o,s,u,c,l=e.length,h=0;h<l;){if(i[h]>=t){for(u=h+1;u<l&&i[u]>=t;)u++;for(c=h,s=u-1;c<s;c++,s--)o=e[c],e[c]=e[s],e[s]=o,r&&(o=r[c],r[c]=r[s],r[s]=o);h=u}h++}}},A=function(t,e,n){var r=t.split(\"\"),i={hiLevel:v};return n||(n=[]),L(r,n,i),function(t,e,n){if(0!==n.hiLevel&&u)for(var r,i=0;i<t.length;i++)1===e[i]&&(r=p.indexOf(t[i]))>=0&&(t[i]=p[r+1])}(r,n,i),x(2,r,e,n,i),x(1,r,e,n,i),r.join(\"\")};return this.__bidiEngine__.doBidiReorder=function(t,e,n){if(function(t,e){if(e)for(var n=0;n<t.length;n++)e[n]=n;void 0===a&&(a=y(t)),void 0===s&&(s=y(t))}(t,e),i||!o||s)if(i&&o&&a^s)v=a?1:0,t=N(t,e,n);else if(!i&&o&&s)v=a?1:0,t=A(t,e,n),t=N(t,e);else if(!i||a||o||s){if(i&&!o&&a^s)t=N(t,e),a?(v=0,t=A(t,e,n)):(v=1,t=A(t,e,n),t=N(t,e));else if(i&&a&&!o&&s)v=1,t=A(t,e,n),t=N(t,e);else if(!i&&!o&&a^s){var r=u;a?(v=1,t=A(t,e,n),v=0,u=!1,t=A(t,e,n),u=r):(v=0,t=A(t,e,n),t=N(t,e),v=1,u=!1,t=A(t,e,n),u=r,t=N(t,e))}}else v=0,t=A(t,e,n);else v=a?1:0,t=A(t,e,n);return t},this.__bidiEngine__.setOptions=function(t){t&&(i=t.isInputVisual,o=t.isOutputVisual,a=t.isInputRtl,s=t.isOutputRtl,u=t.isSymmetricSwapping)},this.__bidiEngine__.setOptions(t),this.__bidiEngine__};var e=[\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"S\",\"B\",\"S\",\"WS\",\"B\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"B\",\"B\",\"B\",\"S\",\"WS\",\"N\",\"N\",\"ET\",\"ET\",\"ET\",\"N\",\"N\",\"N\",\"N\",\"N\",\"ES\",\"CS\",\"ES\",\"CS\",\"CS\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"CS\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"N\",\"N\",\"N\",\"N\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"B\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"CS\",\"N\",\"ET\",\"ET\",\"ET\",\"ET\",\"N\",\"N\",\"N\",\"N\",\"L\",\"N\",\"N\",\"BN\",\"N\",\"N\",\"ET\",\"ET\",\"EN\",\"EN\",\"N\",\"L\",\"N\",\"N\",\"N\",\"EN\",\"L\",\"N\",\"N\",\"N\",\"N\",\"N\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"N\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"N\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"N\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"N\",\"N\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"N\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"N\",\"L\",\"N\",\"N\",\"N\",\"N\",\"N\",\"ET\",\"N\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"R\",\"NSM\",\"R\",\"NSM\",\"NSM\",\"R\",\"NSM\",\"NSM\",\"R\",\"NSM\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"N\",\"N\",\"N\",\"N\",\"N\",\"R\",\"R\",\"R\",\"R\",\"R\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"AN\",\"AN\",\"AN\",\"AN\",\"AN\",\"AN\",\"N\",\"N\",\"AL\",\"ET\",\"ET\",\"AL\",\"CS\",\"AL\",\"N\",\"N\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"AL\",\"AL\",\"N\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"AN\",\"AN\",\"AN\",\"AN\",\"AN\",\"AN\",\"AN\",\"AN\",\"AN\",\"AN\",\"ET\",\"AN\",\"AN\",\"AL\",\"AL\",\"AL\",\"NSM\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"AN\",\"N\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"AL\",\"AL\",\"NSM\",\"NSM\",\"N\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"AL\",\"AL\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"N\",\"AL\",\"AL\",\"NSM\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"N\",\"N\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"AL\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"R\",\"R\",\"N\",\"N\",\"N\",\"N\",\"R\",\"N\",\"N\",\"N\",\"N\",\"N\",\"WS\",\"WS\",\"WS\",\"WS\",\"WS\",\"WS\",\"WS\",\"WS\",\"WS\",\"WS\",\"WS\",\"BN\",\"BN\",\"BN\",\"L\",\"R\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"WS\",\"B\",\"LRE\",\"RLE\",\"PDF\",\"LRO\",\"RLO\",\"CS\",\"ET\",\"ET\",\"ET\",\"ET\",\"ET\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"CS\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"WS\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"N\",\"LRI\",\"RLI\",\"FSI\",\"PDI\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"EN\",\"L\",\"N\",\"N\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"ES\",\"ES\",\"N\",\"N\",\"N\",\"L\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"ES\",\"ES\",\"N\",\"N\",\"N\",\"N\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"N\",\"N\",\"N\",\"ET\",\"ET\",\"ET\",\"ET\",\"ET\",\"ET\",\"ET\",\"ET\",\"ET\",\"ET\",\"ET\",\"ET\",\"ET\",\"ET\",\"ET\",\"ET\",\"ET\",\"ET\",\"ET\",\"ET\",\"ET\",\"ET\",\"ET\",\"ET\",\"ET\",\"ET\",\"ET\",\"ET\",\"ET\",\"ET\",\"ET\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"L\",\"L\",\"L\",\"L\",\"L\",\"N\",\"N\",\"N\",\"N\",\"N\",\"R\",\"NSM\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"ES\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"N\",\"R\",\"R\",\"R\",\"R\",\"R\",\"N\",\"R\",\"N\",\"R\",\"R\",\"N\",\"R\",\"R\",\"N\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"R\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"CS\",\"N\",\"CS\",\"N\",\"N\",\"CS\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"ET\",\"N\",\"N\",\"ES\",\"ES\",\"N\",\"N\",\"N\",\"N\",\"N\",\"ET\",\"ET\",\"N\",\"N\",\"N\",\"N\",\"N\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"N\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"N\",\"N\",\"BN\",\"N\",\"N\",\"N\",\"ET\",\"ET\",\"ET\",\"N\",\"N\",\"N\",\"N\",\"N\",\"ES\",\"CS\",\"ES\",\"CS\",\"CS\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"CS\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"N\",\"N\",\"N\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"N\",\"N\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"N\",\"N\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"N\",\"N\",\"L\",\"L\",\"L\",\"N\",\"N\",\"N\",\"ET\",\"ET\",\"N\",\"N\",\"N\",\"ET\",\"ET\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\",\"N\"],n=new t.__bidiEngine__({isInputVisual:!0});t.API.events.push([\"postProcessText\",function(t){var e=t.text;t.x,t.y;var r=t.options||{};t.mutex,r.lang;var i=[];if(r.isInputVisual=\"boolean\"!=typeof r.isInputVisual||r.isInputVisual,n.setOptions(r),\"[object Array]\"===Object.prototype.toString.call(e)){var a=0;for(i=[],a=0;a<e.length;a+=1)\"[object Array]\"===Object.prototype.toString.call(e[a])?i.push([n.doBidiReorder(e[a][0]),e[a][1],e[a][2]]):i.push([n.doBidiReorder(e[a])]);t.text=i}else t.text=n.doBidiReorder(e);n.setOptions({isInputVisual:!0})}])}(E),E.API.TTFFont=function(){function t(t){var e;if(this.rawData=t,e=this.contents=new fe(t),this.contents.pos=4,\"ttcf\"===e.readString(4))throw new Error(\"TTCF not supported.\");e.pos=0,this.parse(),this.subset=new je(this),this.registerTTF()}return t.open=function(e){return new t(e)},t.prototype.parse=function(){return this.directory=new de(this.contents),this.head=new me(this),this.name=new xe(this),this.cmap=new be(this),this.toUnicode={},this.hhea=new ye(this),this.maxp=new Ae(this),this.hmtx=new Se(this),this.post=new Ne(this),this.os2=new we(this),this.loca=new Ie(this),this.glyf=new Pe(this),this.ascender=this.os2.exists&&this.os2.ascender||this.hhea.ascender,this.decender=this.os2.exists&&this.os2.decender||this.hhea.decender,this.lineGap=this.os2.exists&&this.os2.lineGap||this.hhea.lineGap,this.bbox=[this.head.xMin,this.head.yMin,this.head.xMax,this.head.yMax]},t.prototype.registerTTF=function(){var t,e,n,r,i;if(this.scaleFactor=1e3/this.head.unitsPerEm,this.bbox=function(){var e,n,r,i;for(i=[],e=0,n=(r=this.bbox).length;e<n;e++)t=r[e],i.push(Math.round(t*this.scaleFactor));return i}.call(this),this.stemV=0,this.post.exists?(n=255&(r=this.post.italic_angle),32768&(e=r>>16)&&(e=-(1+(65535^e))),this.italicAngle=+(e+\".\"+n)):this.italicAngle=0,this.ascender=Math.round(this.ascender*this.scaleFactor),this.decender=Math.round(this.decender*this.scaleFactor),this.lineGap=Math.round(this.lineGap*this.scaleFactor),this.capHeight=this.os2.exists&&this.os2.capHeight||this.ascender,this.xHeight=this.os2.exists&&this.os2.xHeight||0,this.familyClass=(this.os2.exists&&this.os2.familyClass||0)>>8,this.isSerif=1===(i=this.familyClass)||2===i||3===i||4===i||5===i||7===i,this.isScript=10===this.familyClass,this.flags=0,this.post.isFixedPitch&&(this.flags|=1),this.isSerif&&(this.flags|=2),this.isScript&&(this.flags|=8),0!==this.italicAngle&&(this.flags|=64),this.flags|=32,!this.cmap.unicode)throw new Error(\"No unicode cmap for font\")},t.prototype.characterToGlyph=function(t){var e;return(null!=(e=this.cmap.unicode)?e.codeMap[t]:void 0)||0},t.prototype.widthOfGlyph=function(t){var e;return e=1e3/this.head.unitsPerEm,this.hmtx.forGlyph(t).advance*e},t.prototype.widthOfString=function(t,e,n){var r,i,a,o;for(a=0,i=0,o=(t=\"\"+t).length;0<=o?i<o:i>o;i=0<=o?++i:--i)r=t.charCodeAt(i),a+=this.widthOfGlyph(this.characterToGlyph(r))+n*(1e3/e)||0;return a*(e/1e3)},t.prototype.lineHeight=function(t,e){var n;return null==e&&(e=!1),n=e?this.lineGap:0,(this.ascender+n-this.decender)/1e3*t},t}();var he,fe=function(){function t(t){this.data=null!=t?t:[],this.pos=0,this.length=this.data.length}return t.prototype.readByte=function(){return this.data[this.pos++]},t.prototype.writeByte=function(t){return this.data[this.pos++]=t},t.prototype.readUInt32=function(){return 16777216*this.readByte()+(this.readByte()<<16)+(this.readByte()<<8)+this.readByte()},t.prototype.writeUInt32=function(t){return this.writeByte(t>>>24&255),this.writeByte(t>>16&255),this.writeByte(t>>8&255),this.writeByte(255&t)},t.prototype.readInt32=function(){var t;return(t=this.readUInt32())>=2147483648?t-4294967296:t},t.prototype.writeInt32=function(t){return t<0&&(t+=4294967296),this.writeUInt32(t)},t.prototype.readUInt16=function(){return this.readByte()<<8|this.readByte()},t.prototype.writeUInt16=function(t){return this.writeByte(t>>8&255),this.writeByte(255&t)},t.prototype.readInt16=function(){var t;return(t=this.readUInt16())>=32768?t-65536:t},t.prototype.writeInt16=function(t){return t<0&&(t+=65536),this.writeUInt16(t)},t.prototype.readString=function(t){var e,n;for(n=[],e=0;0<=t?e<t:e>t;e=0<=t?++e:--e)n[e]=String.fromCharCode(this.readByte());return n.join(\"\")},t.prototype.writeString=function(t){var e,n,r;for(r=[],e=0,n=t.length;0<=n?e<n:e>n;e=0<=n?++e:--e)r.push(this.writeByte(t.charCodeAt(e)));return r},t.prototype.readShort=function(){return this.readInt16()},t.prototype.writeShort=function(t){return this.writeInt16(t)},t.prototype.readLongLong=function(){var t,e,n,r,i,a,o,s;return t=this.readByte(),e=this.readByte(),n=this.readByte(),r=this.readByte(),i=this.readByte(),a=this.readByte(),o=this.readByte(),s=this.readByte(),128&t?-1*(72057594037927940*(255^t)+281474976710656*(255^e)+1099511627776*(255^n)+4294967296*(255^r)+16777216*(255^i)+65536*(255^a)+256*(255^o)+(255^s)+1):72057594037927940*t+281474976710656*e+1099511627776*n+4294967296*r+16777216*i+65536*a+256*o+s},t.prototype.writeLongLong=function(t){var e,n;return e=Math.floor(t/4294967296),n=4294967295&t,this.writeByte(e>>24&255),this.writeByte(e>>16&255),this.writeByte(e>>8&255),this.writeByte(255&e),this.writeByte(n>>24&255),this.writeByte(n>>16&255),this.writeByte(n>>8&255),this.writeByte(255&n)},t.prototype.readInt=function(){return this.readInt32()},t.prototype.writeInt=function(t){return this.writeInt32(t)},t.prototype.read=function(t){var e,n;for(e=[],n=0;0<=t?n<t:n>t;n=0<=t?++n:--n)e.push(this.readByte());return e},t.prototype.write=function(t){var e,n,r,i;for(i=[],n=0,r=t.length;n<r;n++)e=t[n],i.push(this.writeByte(e));return i},t}(),de=function(){var t;function e(t){var e,n,r;for(this.scalarType=t.readInt(),this.tableCount=t.readShort(),this.searchRange=t.readShort(),this.entrySelector=t.readShort(),this.rangeShift=t.readShort(),this.tables={},n=0,r=this.tableCount;0<=r?n<r:n>r;n=0<=r?++n:--n)e={tag:t.readString(4),checksum:t.readInt(),offset:t.readInt(),length:t.readInt()},this.tables[e.tag]=e}return e.prototype.encode=function(e){var n,r,i,a,o,s,u,c,l,h,f,d,p;for(p in f=Object.keys(e).length,s=Math.log(2),l=16*Math.floor(Math.log(f)/s),a=Math.floor(l/s),c=16*f-l,(r=new fe).writeInt(this.scalarType),r.writeShort(f),r.writeShort(l),r.writeShort(a),r.writeShort(c),i=16*f,u=r.pos+i,o=null,d=[],e)for(h=e[p],r.writeString(p),r.writeInt(t(h)),r.writeInt(u),r.writeInt(h.length),d=d.concat(h),\"head\"===p&&(o=u),u+=h.length;u%4;)d.push(0),u++;return r.write(d),n=2981146554-t(r.data),r.pos=o+8,r.writeUInt32(n),r.data},t=function(t){var e,n,r,i;for(t=_e.call(t);t.length%4;)t.push(0);for(r=new fe(t),n=0,e=0,i=t.length;e<i;e=e+=4)n+=r.readUInt32();return 4294967295&n},e}(),pe={}.hasOwnProperty,ge=function(t,e){for(var n in e)pe.call(e,n)&&(t[n]=e[n]);function r(){this.constructor=t}return r.prototype=e.prototype,t.prototype=new r,t.__super__=e.prototype,t};he=function(){function t(t){var e;this.file=t,e=this.file.directory.tables[this.tag],this.exists=!!e,e&&(this.offset=e.offset,this.length=e.length,this.parse(this.file.contents))}return t.prototype.parse=function(){},t.prototype.encode=function(){},t.prototype.raw=function(){return this.exists?(this.file.contents.pos=this.offset,this.file.contents.read(this.length)):null},t}();var me=function(){function t(){return t.__super__.constructor.apply(this,arguments)}return ge(t,he),t.prototype.tag=\"head\",t.prototype.parse=function(t){return t.pos=this.offset,this.version=t.readInt(),this.revision=t.readInt(),this.checkSumAdjustment=t.readInt(),this.magicNumber=t.readInt(),this.flags=t.readShort(),this.unitsPerEm=t.readShort(),this.created=t.readLongLong(),this.modified=t.readLongLong(),this.xMin=t.readShort(),this.yMin=t.readShort(),this.xMax=t.readShort(),this.yMax=t.readShort(),this.macStyle=t.readShort(),this.lowestRecPPEM=t.readShort(),this.fontDirectionHint=t.readShort(),this.indexToLocFormat=t.readShort(),this.glyphDataFormat=t.readShort()},t.prototype.encode=function(t){var e;return(e=new fe).writeInt(this.version),e.writeInt(this.revision),e.writeInt(this.checkSumAdjustment),e.writeInt(this.magicNumber),e.writeShort(this.flags),e.writeShort(this.unitsPerEm),e.writeLongLong(this.created),e.writeLongLong(this.modified),e.writeShort(this.xMin),e.writeShort(this.yMin),e.writeShort(this.xMax),e.writeShort(this.yMax),e.writeShort(this.macStyle),e.writeShort(this.lowestRecPPEM),e.writeShort(this.fontDirectionHint),e.writeShort(t),e.writeShort(this.glyphDataFormat),e.data},t}(),ve=function(){function t(t,e){var n,r,i,a,o,s,u,c,l,h,f,d,p,g,m,v,b;switch(this.platformID=t.readUInt16(),this.encodingID=t.readShort(),this.offset=e+t.readInt(),l=t.pos,t.pos=this.offset,this.format=t.readUInt16(),this.length=t.readUInt16(),this.language=t.readUInt16(),this.isUnicode=3===this.platformID&&1===this.encodingID&&4===this.format||0===this.platformID&&4===this.format,this.codeMap={},this.format){case 0:for(s=0;s<256;++s)this.codeMap[s]=t.readByte();break;case 4:for(f=t.readUInt16(),h=f/2,t.pos+=6,i=function(){var e,n;for(n=[],s=e=0;0<=h?e<h:e>h;s=0<=h?++e:--e)n.push(t.readUInt16());return n}(),t.pos+=2,p=function(){var e,n;for(n=[],s=e=0;0<=h?e<h:e>h;s=0<=h?++e:--e)n.push(t.readUInt16());return n}(),u=function(){var e,n;for(n=[],s=e=0;0<=h?e<h:e>h;s=0<=h?++e:--e)n.push(t.readUInt16());return n}(),c=function(){var e,n;for(n=[],s=e=0;0<=h?e<h:e>h;s=0<=h?++e:--e)n.push(t.readUInt16());return n}(),r=(this.length-t.pos+this.offset)/2,o=function(){var e,n;for(n=[],s=e=0;0<=r?e<r:e>r;s=0<=r?++e:--e)n.push(t.readUInt16());return n}(),s=m=0,b=i.length;m<b;s=++m)for(g=i[s],n=v=d=p[s];d<=g?v<=g:v>=g;n=d<=g?++v:--v)0===c[s]?a=n+u[s]:0!==(a=o[c[s]/2+(n-d)-(h-s)]||0)&&(a+=u[s]),this.codeMap[n]=65535&a}t.pos=l}return t.encode=function(t,e){var n,r,i,a,o,s,u,c,l,h,f,d,p,g,m,v,b,y,w,N,L,x,A,S,_,P,k,F,I,j,C,O,B,M,q,E,R,D,T,z,U,H,W,V,G,Y;switch(F=new fe,a=Object.keys(t).sort(function(t,e){return t-e}),e){case\"macroman\":for(p=0,g=function(){var t=[];for(d=0;d<256;++d)t.push(0);return t}(),v={0:0},i={},I=0,B=a.length;I<B;I++)null==v[W=t[r=a[I]]]&&(v[W]=++p),i[r]={old:t[r],new:v[t[r]]},g[r]=v[t[r]];return F.writeUInt16(1),F.writeUInt16(0),F.writeUInt32(12),F.writeUInt16(0),F.writeUInt16(262),F.writeUInt16(0),F.write(g),{charMap:i,subtable:F.data,maxGlyphID:p+1};case\"unicode\":for(P=[],l=[],b=0,v={},n={},m=u=null,j=0,M=a.length;j<M;j++)null==v[w=t[r=a[j]]]&&(v[w]=++b),n[r]={old:w,new:v[w]},o=v[w]-r,null!=m&&o===u||(m&&l.push(m),P.push(r),u=o),m=r;for(m&&l.push(m),l.push(65535),P.push(65535),S=2*(A=P.length),x=2*Math.pow(Math.log(A)/Math.LN2,2),h=Math.log(x/2)/Math.LN2,L=2*A-x,s=[],N=[],f=[],d=C=0,q=P.length;C<q;d=++C){if(_=P[d],c=l[d],65535===_){s.push(0),N.push(0);break}if(_-(k=n[_].new)>=32768)for(s.push(0),N.push(2*(f.length+A-d)),r=O=_;_<=c?O<=c:O>=c;r=_<=c?++O:--O)f.push(n[r].new);else s.push(k-_),N.push(0)}for(F.writeUInt16(3),F.writeUInt16(1),F.writeUInt32(12),F.writeUInt16(4),F.writeUInt16(16+8*A+2*f.length),F.writeUInt16(0),F.writeUInt16(S),F.writeUInt16(x),F.writeUInt16(h),F.writeUInt16(L),U=0,E=l.length;U<E;U++)r=l[U],F.writeUInt16(r);for(F.writeUInt16(0),H=0,R=P.length;H<R;H++)r=P[H],F.writeUInt16(r);for(V=0,D=s.length;V<D;V++)o=s[V],F.writeUInt16(o);for(G=0,T=N.length;G<T;G++)y=N[G],F.writeUInt16(y);for(Y=0,z=f.length;Y<z;Y++)p=f[Y],F.writeUInt16(p);return{charMap:n,subtable:F.data,maxGlyphID:b+1}}},t}(),be=function(){function t(){return t.__super__.constructor.apply(this,arguments)}return ge(t,he),t.prototype.tag=\"cmap\",t.prototype.parse=function(t){var e,n,r;for(t.pos=this.offset,this.version=t.readUInt16(),r=t.readUInt16(),this.tables=[],this.unicode=null,n=0;0<=r?n<r:n>r;n=0<=r?++n:--n)e=new ve(t,this.offset),this.tables.push(e),e.isUnicode&&null==this.unicode&&(this.unicode=e);return!0},t.encode=function(t,e){var n,r;return null==e&&(e=\"macroman\"),n=ve.encode(t,e),(r=new fe).writeUInt16(0),r.writeUInt16(1),n.table=r.data.concat(n.subtable),n},t}(),ye=function(){function t(){return t.__super__.constructor.apply(this,arguments)}return ge(t,he),t.prototype.tag=\"hhea\",t.prototype.parse=function(t){return t.pos=this.offset,this.version=t.readInt(),this.ascender=t.readShort(),this.decender=t.readShort(),this.lineGap=t.readShort(),this.advanceWidthMax=t.readShort(),this.minLeftSideBearing=t.readShort(),this.minRightSideBearing=t.readShort(),this.xMaxExtent=t.readShort(),this.caretSlopeRise=t.readShort(),this.caretSlopeRun=t.readShort(),this.caretOffset=t.readShort(),t.pos+=8,this.metricDataFormat=t.readShort(),this.numberOfMetrics=t.readUInt16()},t}(),we=function(){function t(){return t.__super__.constructor.apply(this,arguments)}return ge(t,he),t.prototype.tag=\"OS/2\",t.prototype.parse=function(t){if(t.pos=this.offset,this.version=t.readUInt16(),this.averageCharWidth=t.readShort(),this.weightClass=t.readUInt16(),this.widthClass=t.readUInt16(),this.type=t.readShort(),this.ySubscriptXSize=t.readShort(),this.ySubscriptYSize=t.readShort(),this.ySubscriptXOffset=t.readShort(),this.ySubscriptYOffset=t.readShort(),this.ySuperscriptXSize=t.readShort(),this.ySuperscriptYSize=t.readShort(),this.ySuperscriptXOffset=t.readShort(),this.ySuperscriptYOffset=t.readShort(),this.yStrikeoutSize=t.readShort(),this.yStrikeoutPosition=t.readShort(),this.familyClass=t.readShort(),this.panose=function(){var e,n;for(n=[],e=0;e<10;++e)n.push(t.readByte());return n}(),this.charRange=function(){var e,n;for(n=[],e=0;e<4;++e)n.push(t.readInt());return n}(),this.vendorID=t.readString(4),this.selection=t.readShort(),this.firstCharIndex=t.readShort(),this.lastCharIndex=t.readShort(),this.version>0&&(this.ascent=t.readShort(),this.descent=t.readShort(),this.lineGap=t.readShort(),this.winAscent=t.readShort(),this.winDescent=t.readShort(),this.codePageRange=function(){var e,n;for(n=[],e=0;e<2;e=++e)n.push(t.readInt());return n}(),this.version>1))return this.xHeight=t.readShort(),this.capHeight=t.readShort(),this.defaultChar=t.readShort(),this.breakChar=t.readShort(),this.maxContext=t.readShort()},t}(),Ne=function(){function t(){return t.__super__.constructor.apply(this,arguments)}return ge(t,he),t.prototype.tag=\"post\",t.prototype.parse=function(t){var e,n,r;switch(t.pos=this.offset,this.format=t.readInt(),this.italicAngle=t.readInt(),this.underlinePosition=t.readShort(),this.underlineThickness=t.readShort(),this.isFixedPitch=t.readInt(),this.minMemType42=t.readInt(),this.maxMemType42=t.readInt(),this.minMemType1=t.readInt(),this.maxMemType1=t.readInt(),this.format){case 65536:case 196608:break;case 131072:var i;for(n=t.readUInt16(),this.glyphNameIndex=[],i=0;0<=n?i<n:i>n;i=0<=n?++i:--i)this.glyphNameIndex.push(t.readUInt16());for(this.names=[],r=[];t.pos<this.offset+this.length;)e=t.readByte(),r.push(this.names.push(t.readString(e)));return r;case 151552:return n=t.readUInt16(),this.offsets=t.read(n);case 262144:return this.map=function(){var e,n,r;for(r=[],i=e=0,n=this.file.maxp.numGlyphs;0<=n?e<n:e>n;i=0<=n?++e:--e)r.push(t.readUInt32());return r}.call(this)}},t}(),Le=function(t,e){this.raw=t,this.length=t.length,this.platformID=e.platformID,this.encodingID=e.encodingID,this.languageID=e.languageID},xe=function(){function t(){return t.__super__.constructor.apply(this,arguments)}return ge(t,he),t.prototype.tag=\"name\",t.prototype.parse=function(t){var e,n,r,i,a,o,s,u,c,l,h;for(t.pos=this.offset,t.readShort(),e=t.readShort(),o=t.readShort(),n=[],i=0;0<=e?i<e:i>e;i=0<=e?++i:--i)n.push({platformID:t.readShort(),encodingID:t.readShort(),languageID:t.readShort(),nameID:t.readShort(),length:t.readShort(),offset:this.offset+o+t.readShort()});for(s={},i=c=0,l=n.length;c<l;i=++c)r=n[i],t.pos=r.offset,u=t.readString(r.length),a=new Le(u,r),null==s[h=r.nameID]&&(s[h]=[]),s[r.nameID].push(a);this.strings=s,this.copyright=s[0],this.fontFamily=s[1],this.fontSubfamily=s[2],this.uniqueSubfamily=s[3],this.fontName=s[4],this.version=s[5];try{this.postscriptName=s[6][0].raw.replace(/[\\x00-\\x19\\x80-\\xff]/g,\"\")}catch(f){this.postscriptName=s[4][0].raw.replace(/[\\x00-\\x19\\x80-\\xff]/g,\"\")}return this.trademark=s[7],this.manufacturer=s[8],this.designer=s[9],this.description=s[10],this.vendorUrl=s[11],this.designerUrl=s[12],this.license=s[13],this.licenseUrl=s[14],this.preferredFamily=s[15],this.preferredSubfamily=s[17],this.compatibleFull=s[18],this.sampleText=s[19]},t}(),Ae=function(){function t(){return t.__super__.constructor.apply(this,arguments)}return ge(t,he),t.prototype.tag=\"maxp\",t.prototype.parse=function(t){return t.pos=this.offset,this.version=t.readInt(),this.numGlyphs=t.readUInt16(),this.maxPoints=t.readUInt16(),this.maxContours=t.readUInt16(),this.maxCompositePoints=t.readUInt16(),this.maxComponentContours=t.readUInt16(),this.maxZones=t.readUInt16(),this.maxTwilightPoints=t.readUInt16(),this.maxStorage=t.readUInt16(),this.maxFunctionDefs=t.readUInt16(),this.maxInstructionDefs=t.readUInt16(),this.maxStackElements=t.readUInt16(),this.maxSizeOfInstructions=t.readUInt16(),this.maxComponentElements=t.readUInt16(),this.maxComponentDepth=t.readUInt16()},t}(),Se=function(){function t(){return t.__super__.constructor.apply(this,arguments)}return ge(t,he),t.prototype.tag=\"hmtx\",t.prototype.parse=function(t){var e,n,r,i,a,o,s;for(t.pos=this.offset,this.metrics=[],e=0,o=this.file.hhea.numberOfMetrics;0<=o?e<o:e>o;e=0<=o?++e:--e)this.metrics.push({advance:t.readUInt16(),lsb:t.readInt16()});for(r=this.file.maxp.numGlyphs-this.file.hhea.numberOfMetrics,this.leftSideBearings=function(){var n,i;for(i=[],e=n=0;0<=r?n<r:n>r;e=0<=r?++n:--n)i.push(t.readInt16());return i}(),this.widths=function(){var t,e,n,r;for(r=[],t=0,e=(n=this.metrics).length;t<e;t++)i=n[t],r.push(i.advance);return r}.call(this),n=this.widths[this.widths.length-1],s=[],e=a=0;0<=r?a<r:a>r;e=0<=r?++a:--a)s.push(this.widths.push(n));return s},t.prototype.forGlyph=function(t){return t in this.metrics?this.metrics[t]:{advance:this.metrics[this.metrics.length-1].advance,lsb:this.leftSideBearings[t-this.metrics.length]}},t}(),_e=[].slice,Pe=function(){function t(){return t.__super__.constructor.apply(this,arguments)}return ge(t,he),t.prototype.tag=\"glyf\",t.prototype.parse=function(){return this.cache={}},t.prototype.glyphFor=function(t){var e,n,r,i,a,o,s,u,c,l;return t in this.cache?this.cache[t]:(i=this.file.loca,e=this.file.contents,n=i.indexOf(t),0===(r=i.lengthOf(t))?this.cache[t]=null:(e.pos=this.offset+n,a=(o=new fe(e.read(r))).readShort(),u=o.readShort(),l=o.readShort(),s=o.readShort(),c=o.readShort(),this.cache[t]=-1===a?new Fe(o,u,l,s,c):new ke(o,a,u,l,s,c),this.cache[t]))},t.prototype.encode=function(t,e,n){var r,i,a,o,s;for(a=[],i=[],o=0,s=e.length;o<s;o++)r=t[e[o]],i.push(a.length),r&&(a=a.concat(r.encode(n)));return i.push(a.length),{table:a,offsets:i}},t}(),ke=function(){function t(t,e,n,r,i,a){this.raw=t,this.numberOfContours=e,this.xMin=n,this.yMin=r,this.xMax=i,this.yMax=a,this.compound=!1}return t.prototype.encode=function(){return this.raw.data},t}(),Fe=function(){function t(t,e,n,r,i){var a,o;for(this.raw=t,this.xMin=e,this.yMin=n,this.xMax=r,this.yMax=i,this.compound=!0,this.glyphIDs=[],this.glyphOffsets=[],a=this.raw;o=a.readShort(),this.glyphOffsets.push(a.pos),this.glyphIDs.push(a.readUInt16()),32&o;)a.pos+=1&o?4:2,128&o?a.pos+=8:64&o?a.pos+=4:8&o&&(a.pos+=2)}return t.prototype.encode=function(){var t,e,n;for(e=new fe(_e.call(this.raw.data)),t=0,n=this.glyphIDs.length;t<n;++t)e.pos=this.glyphOffsets[t];return e.data},t}(),Ie=function(){function t(){return t.__super__.constructor.apply(this,arguments)}return ge(t,he),t.prototype.tag=\"loca\",t.prototype.parse=function(t){var e,n;return t.pos=this.offset,e=this.file.head.indexToLocFormat,this.offsets=0===e?function(){var e,r;for(r=[],n=0,e=this.length;n<e;n+=2)r.push(2*t.readUInt16());return r}.call(this):function(){var e,r;for(r=[],n=0,e=this.length;n<e;n+=4)r.push(t.readUInt32());return r}.call(this)},t.prototype.indexOf=function(t){return this.offsets[t]},t.prototype.lengthOf=function(t){return this.offsets[t+1]-this.offsets[t]},t.prototype.encode=function(t,e){for(var n=new Uint32Array(this.offsets.length),r=0,i=0,a=0;a<n.length;++a)if(n[a]=r,i<e.length&&e[i]==a){++i,n[a]=r;var o=this.offsets[a],s=this.offsets[a+1]-o;s>0&&(r+=s)}for(var u=new Array(4*n.length),c=0;c<n.length;++c)u[4*c+3]=255&n[c],u[4*c+2]=(65280&n[c])>>8,u[4*c+1]=(16711680&n[c])>>16,u[4*c]=(4278190080&n[c])>>24;return u},t}(),je=function(){function t(t){this.font=t,this.subset={},this.unicodes={},this.next=33}return t.prototype.generateCmap=function(){var t,e,n,r,i;for(e in r=this.font.cmap.tables[0].codeMap,t={},i=this.subset)n=i[e],t[e]=r[n];return t},t.prototype.glyphsFor=function(t){var e,n,r,i,a,o,s;for(r={},a=0,o=t.length;a<o;a++)r[i=t[a]]=this.font.glyf.glyphFor(i);for(i in e=[],r)(null!=(n=r[i])?n.compound:void 0)&&e.push.apply(e,n.glyphIDs);if(e.length>0)for(i in s=this.glyphsFor(e))n=s[i],r[i]=n;return r},t.prototype.encode=function(t,e){var n,r,i,a,o,s,u,c,l,h,f,d,p,g,m;for(r in n=be.encode(this.generateCmap(),\"unicode\"),a=this.glyphsFor(t),f={0:0},m=n.charMap)f[(s=m[r]).old]=s.new;for(d in h=n.maxGlyphID,a)d in f||(f[d]=h++);return c=function(t){var e,n;for(e in n={},t)n[t[e]]=e;return n}(f),l=Object.keys(c).sort(function(t,e){return t-e}),p=function(){var t,e,n;for(n=[],t=0,e=l.length;t<e;t++)o=l[t],n.push(c[o]);return n}(),i=this.font.glyf.encode(a,p,f),u=this.font.loca.encode(i.offsets,p),g={cmap:this.font.cmap.raw(),glyf:i.table,loca:u,hmtx:this.font.hmtx.raw(),hhea:this.font.hhea.raw(),maxp:this.font.maxp.raw(),post:this.font.post.raw(),name:this.font.name.raw(),head:this.font.head.encode(e)},this.font.os2.exists&&(g[\"OS/2\"]=this.font.os2.raw()),this.font.directory.encode(g)},t}();E.API.PDFObject=function(){var t;function e(){}return t=function(t,e){return(Array(e+1).join(\"0\")+t).slice(-e)},e.convert=function(n){var r,i,a,o;if(Array.isArray(n))return\"[\"+function(){var t,i,a;for(a=[],t=0,i=n.length;t<i;t++)r=n[t],a.push(e.convert(r));return a}().join(\" \")+\"]\";if(\"string\"==typeof n)return\"/\"+n;if(null!=n?n.isString:void 0)return\"(\"+n+\")\";if(n instanceof Date)return\"(D:\"+t(n.getUTCFullYear(),4)+t(n.getUTCMonth(),2)+t(n.getUTCDate(),2)+t(n.getUTCHours(),2)+t(n.getUTCMinutes(),2)+t(n.getUTCSeconds(),2)+\"Z)\";if(\"[object Object]\"==={}.toString.call(n)){for(i in a=[\"<<\"],n)o=n[i],a.push(\"/\"+i+\" \"+e.convert(o));return a.push(\">>\"),a.join(\"\\n\")}return\"\"+n},e}();export{St as AcroForm,xt as AcroFormAppearance,mt as AcroFormButton,wt as AcroFormCheckBox,ft as AcroFormChoiceField,pt as AcroFormComboBox,gt as AcroFormEditBox,dt as AcroFormListBox,Lt as AcroFormPasswordField,vt as AcroFormPushButton,bt as AcroFormRadioButton,Nt as AcroFormTextField,O as GState,M as ShadingPattern,q as TilingPattern,E as default,E as jsPDF};\n\n"],
  "mappings": "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AK,GAAE,MAAK,CAAC,OAAM,OAAM,OAAM,KAAK,GAAE,MAAK,CAAC,OAAM,OAAM,OAAM,KAAK,GAAE,MAAK,CAAC,OAAM,OAAM,OAAM,KAAK,GAAE,MAAK,CAAC,OAAM,OAAM,OAAM,KAAK,GAAE,MAAK,CAAC,OAAM,OAAM,OAAM,KAAK,GAAE,MAAK,CAAC,OAAM,OAAM,OAAM,KAAK,GAAE,MAAK,CAAC,OAAM,OAAM,OAAM,KAAK,GAAE,MAAK,CAAC,OAAM,OAAM,OAAM,KAAK,GAAE,MAAK,CAAC,OAAM,OAAM,OAAM,KAAK,GAAE,MAAK,CAAC,OAAM,KAAK,GAAE,MAAK,CAAC,OAAM,OAAM,OAAM,KAAK,GAAE,MAAK,CAAC,OAAM,OAAM,OAAM,KAAK,GAAE,MAAK,CAAC,OAAM,KAAK,GAAE,MAAK,CAAC,KAAK,GAAE,MAAK,CAAC,OAAM,OAAM,OAAM,KAAK,GAAE,MAAK,CAAC,OAAM,OAAM,OAAM,KAAK,GAAE,MAAK,CAAC,OAAM,OAAM,OAAM,KAAK,GAAE,MAAK,CAAC,OAAM,OAAM,OAAM,KAAK,GAAE,MAAK,CAAC,OAAM,OAAM,OAAM,KAAK,GAAE,MAAK,CAAC,OAAM,OAAM,OAAM,KAAK,GAAE,MAAK,CAAC,OAAM,OAAM,OAAM,KAAK,GAAE,MAAK,CAAC,OAAM,OAAM,OAAM,KAAK,GAAE,MAAK,CAAC,OAAM,OAAM,OAAM,KAAK,GAAE,MAAK,CAAC,OAAM,OAAM,OAAM,KAAK,GAAE,MAAK,CAAC,OAAM,KAAK,GAAE,MAAK,CAAC,OAAM,KAAK,GAAE,MAAK,CAAC,OAAM,KAAK,GAAE,MAAK,CAAC,OAAM,KAAK,GAAE,MAAK,CAAC,OAAM,KAAK,GAAE,MAAK,CAAC,OAAM,KAAK,GAAE,MAAK,CAAC,OAAM,OAAM,OAAM,KAAK,GAAE,MAAK,CAAC,OAAM,OAAM,OAAM,KAAK,GAAE,MAAK,CAAC,OAAM,OAAM,OAAM,KAAK,GAAE,MAAK,CAAC,OAAM,OAAM,OAAM,KAAK,GAAE,MAAK,CAAC,OAAM,OAAM,OAAM,KAAK,GAAE,MAAK,CAAC,OAAM,OAAM,OAAM,KAAK,GAAE,MAAK,CAAC,OAAM,OAAM,OAAM,KA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AAI,MAAK,MAAK,MAAK,MAAK,OAAM,OAAM,OAAM,QAAO,QAAO,QAAO,SAAQ,SAAQ,SAAQ,SAAQ,QAAQ,GAAE,KAAG,IAAG,KAAG,IAAG,KAAG,GAAE,KAAG,CAAC,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,G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MAAK,MAAK,MAAK,KAAI,KAAI,KAAI,KAAI,MAAK,KAAI,KAAI,MAAK,MAAK,MAAK,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,KAAI,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,KAAI,MAAK,MAAK,MAAK,MAAK,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,KAAI,KAAI,MAAK,MAAK,MAAK,MAAK,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,KAAI,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,KAAI,OAAM,KAAI,OAAM,OAAM,KAAI,OAAM,OAAM,KAAI,OAAM,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,KAAI,KAAI,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,KAAI,KAAI,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,MAAK,MAAK,KAAI,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,OAAM,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,MAAK,KAAI,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,MAAK,MAAK,OAAM,OAAM,KAAI,OAAM,OAAM,OAAM,OAAM,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,KAAI,MAAK,MAAK,OAAM,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,KAAI,KAAI,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,MAAK,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,KAAI,OAAM,OAAM,OAAM,OAAM,OAAM,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,KAAI,OAAM,OAAM,OAAM,OAAM,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,KAAI,KAAI,KAAI,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,KAAI,KAAI,KAAI,KAAI,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,OAAM,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,KAAI,MAAK,KAAI,KAAI,MAAK,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,KAAI,KAAI,MAAK,MAAK,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,MAAK,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,MAAK,MAAK,MAAK,MAAK,KAAI,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,KAAI,KAAI,MAAK,KAAI,KAAI,KAAI,MAAK,MAAK,MAAK,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,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",
  "names": ["c", "w", "d", "err", "b", "i", "j", "x", "s", "l", "le", "v", "m", "a", "p", "o", "nt", "st", "l", "bt", "s", "t", "i", "c", "lt", "dt", "b", "d", "p", "v", "o", "t2", "a", "i2", "w", "_a", "_b", "_e", "it", "j", "k", "m", "st", "a", "b", "o", "k", "td", "dt", "i", "v", "t", "m", "o", "t", "w", "err", "d", "f", "b", "v", "c", "o", "i", "st", "l", "fl", "h", "Deflate", "AsyncDeflate", "Inflate", "c", "dt", "AsyncInflate", "Gzip", "c", "f", "Gunzip", "p", "s", "AsyncGunzip", "Zlib", "c", "f", "a", "d", "Unzlib", "AsyncUnzlib", "Decompress", "AsyncDecompress", "err", "d", "i", "c", "DecodeUTF8", "_a", "s", "EncodeUTF8", "i", "l", "w", "v", "c", "_a", "s", "l", "d", "b", "le", "k", "l", "f", "u", "c", "ce", "fl", "dt", "y", "o", "ZipPassThrough", "ZipDeflate", "AsyncZipDeflate", "err", "Zip", "f", "o", "u", "err", "bt", "l", "_a", "_b", "UnzipPassThrough", "UnzipInflate", "AsyncUnzipInflate", "_", "err", "Unzip", "f", "i", "l", "_a", "u", "err", "dat", "final", "l", "t", "i", "u", "a", "f", "o", "r", "a", "a", "t", "slice", "returnArray", "i", "s", "w", "c", "h", "m", "bits", "f", "k", "v", "j", "lc", "rank", "adler", "crc", "t", "i", "err", "p", "b", "l", "q", "c2", "max", "Deflate", "Inflate", "Inflate", "crcTable", "c", "k", "crc", "i", "a", "b", "c", "p", "y", "x", "i", "k", "uint16", "uint8", "osIsLittleEndian", "i", "k", "swap16", "i", "checkCrc", "l", "i", "ResolutionUnitSpecifier", "t", "a", "i", "e", "n", "o", "u", "c", "l", "h", "f", "s", "d", "p", "g", "m", "v", "b", "y", "w", "N", "L", "x", "A", "S", "_", "P", "lt", "Wt", "St", "k", "F", "B", "R", "D", "r", "T", "z", "U", "H", "W", "V", "G", "Y", "je", "J", "Q", "X", "K", "Z", "$", "tt", "et", "nt", "rt", "it", "at", "ot", "st", "ut", "ct", "ht", "ft", "dt", "pt", "gt", "mt", "vt", "bt", "yt", "wt", "Nt", "Lt", "xt", "At", "_t", "Pt", "kt", "Ft", "It", "jt", "Ct", "Ot", "Bt", "Mt", "qt", "Et", "Rt", "Dt", "Tt", "zt", "Ut", "Ht", "Vt", "Gt", "Yt", "Jt", "Xt", "Kt", "Zt", "$t", "Qt", "te", "ee", "ne", "re", "ie", "ae", "oe", "se", "ue", "ce", "le", "he", "fe", "de", "pe", "ge", "me", "ye", "ve", "be", "we", "Ne", "Le", "xe", "Ae", "Se", "_e", "Pe", "ke", "Fe", "Ie", "I", "j", "C", "O", "M", "q", "ln", "E"]
}
